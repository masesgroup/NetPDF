/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using fontbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Fontbox.Type1
{
    #region Type1Font declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html"/>
    /// </summary>
    public partial class Type1Font : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Type1Font>
    {
        const string _bridgeClassName = "org.apache.fontbox.type1.Type1Font";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Type1Font() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Type1Font(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region Type1Font implementation
    public partial class Type1Font : Org.Apache.Fontbox.Type1.IType1CharStringReader, Org.Apache.Fontbox.IEncodedFont, Org.Apache.Fontbox.IFontBoxFont
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Fontbox.Type1.Type1Font"/> to <see cref="Org.Apache.Fontbox.Type1.Type1CharStringReader"/>
        /// </summary>
        public static implicit operator Org.Apache.Fontbox.Type1.Type1CharStringReader(Org.Apache.Fontbox.Type1.Type1Font t) => t.Cast<Org.Apache.Fontbox.Type1.Type1CharStringReader>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Fontbox.Type1.Type1Font"/> to <see cref="Org.Apache.Fontbox.EncodedFont"/>
        /// </summary>
        public static implicit operator Org.Apache.Fontbox.EncodedFont(Org.Apache.Fontbox.Type1.Type1Font t) => t.Cast<Org.Apache.Fontbox.EncodedFont>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Fontbox.Type1.Type1Font"/> to <see cref="Org.Apache.Fontbox.FontBoxFont"/>
        /// </summary>
        public static implicit operator Org.Apache.Fontbox.FontBoxFont(Org.Apache.Fontbox.Type1.Type1Font t) => t.Cast<Org.Apache.Fontbox.FontBoxFont>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#createWithPFB-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Fontbox.Type1.Type1Font"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Org.Apache.Fontbox.Type1.Type1Font CreateWithPFB(byte[] arg0)
        {
            return SExecuteWithSignature<Org.Apache.Fontbox.Type1.Type1Font>(LocalBridgeClazz, "createWithPFB", "([B)Lorg/apache/fontbox/type1/Type1Font;", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#createWithPFB-java.io.InputStream-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <returns><see cref="Org.Apache.Fontbox.Type1.Type1Font"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Org.Apache.Fontbox.Type1.Type1Font CreateWithPFB(Java.Io.InputStream arg0)
        {
            return SExecuteWithSignature<Org.Apache.Fontbox.Type1.Type1Font>(LocalBridgeClazz, "createWithPFB", "(Ljava/io/InputStream;)Lorg/apache/fontbox/type1/Type1Font;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#createWithSegments-byte[]-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Fontbox.Type1.Type1Font"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Org.Apache.Fontbox.Type1.Type1Font CreateWithSegments(byte[] arg0, byte[] arg1)
        {
            return SExecuteWithSignature<Org.Apache.Fontbox.Type1.Type1Font>(LocalBridgeClazz, "createWithSegments", "([B[B)Lorg/apache/fontbox/type1/Type1Font;", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getASCIISegment--"/> 
        /// </summary>
        public byte[] ASCIISegment
        {
            get { return IExecuteWithSignatureArray<byte>("getASCIISegment", "()[B"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getBinarySegment--"/> 
        /// </summary>
        public byte[] BinarySegment
        {
            get { return IExecuteWithSignatureArray<byte>("getBinarySegment", "()[B"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getBlueFuzz--"/> 
        /// </summary>
        public int BlueFuzz
        {
            get { return IExecuteWithSignature<int>("getBlueFuzz", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getBlueScale--"/> 
        /// </summary>
        public float BlueScale
        {
            get { return IExecuteWithSignature<float>("getBlueScale", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getBlueShift--"/> 
        /// </summary>
        public int BlueShift
        {
            get { return IExecuteWithSignature<int>("getBlueShift", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getBlueValues--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> BlueValues
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getBlueValues", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getCharStringsDict--"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, byte[]> CharStringsDict
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, byte[]>>("getCharStringsDict", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getEncoding--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Encoding.Encoding Encoding
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Encoding.Encoding>("getEncoding", "()Lorg/apache/fontbox/encoding/Encoding;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFamilyBlues--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> FamilyBlues
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getFamilyBlues", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFamilyName--"/> 
        /// </summary>
        public Java.Lang.String FamilyName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFamilyName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFamilyOtherBlues--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> FamilyOtherBlues
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getFamilyOtherBlues", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFontBBox--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Util.BoundingBox FontBBox
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Util.BoundingBox>("getFontBBox", "()Lorg/apache/fontbox/util/BoundingBox;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFontID--"/> 
        /// </summary>
        public Java.Lang.String FontID
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFontID", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFontMatrix--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> FontMatrix
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getFontMatrix", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFontName--"/> 
        /// </summary>
        public Java.Lang.String FontName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFontName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFontType--"/> 
        /// </summary>
        public int FontType
        {
            get { return IExecuteWithSignature<int>("getFontType", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getFullName--"/> 
        /// </summary>
        public Java.Lang.String FullName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFullName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getItalicAngle--"/> 
        /// </summary>
        public float ItalicAngle
        {
            get { return IExecuteWithSignature<float>("getItalicAngle", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getLanguageGroup--"/> 
        /// </summary>
        public int LanguageGroup
        {
            get { return IExecuteWithSignature<int>("getLanguageGroup", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getName--"/> 
        /// </summary>
        public Java.Lang.String Name
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getNotice--"/> 
        /// </summary>
        public Java.Lang.String Notice
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getNotice", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getOtherBlues--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> OtherBlues
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getOtherBlues", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getPaintType--"/> 
        /// </summary>
        public int PaintType
        {
            get { return IExecuteWithSignature<int>("getPaintType", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getStdHW--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> StdHW
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getStdHW", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getStdVW--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> StdVW
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getStdVW", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getStemSnapH--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> StemSnapH
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getStemSnapH", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getStemSnapV--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> StemSnapV
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getStemSnapV", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getStrokeWidth--"/> 
        /// </summary>
        public float StrokeWidth
        {
            get { return IExecuteWithSignature<float>("getStrokeWidth", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getSubrsArray--"/> 
        /// </summary>
        public Java.Util.List<byte[]> SubrsArray
        {
            get { return IExecuteWithSignature<Java.Util.List<byte[]>>("getSubrsArray", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getUnderlinePosition--"/> 
        /// </summary>
        public float UnderlinePosition
        {
            get { return IExecuteWithSignature<float>("getUnderlinePosition", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getUnderlineThickness--"/> 
        /// </summary>
        public float UnderlineThickness
        {
            get { return IExecuteWithSignature<float>("getUnderlineThickness", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getUniqueID--"/> 
        /// </summary>
        public int UniqueID
        {
            get { return IExecuteWithSignature<int>("getUniqueID", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getVersion--"/> 
        /// </summary>
        public Java.Lang.String Version
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getVersion", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getWeight--"/> 
        /// </summary>
        public Java.Lang.String Weight
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getWeight", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#hasGlyph-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasGlyph(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasGlyph", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#isFixedPitch--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFixedPitch()
        {
            return IExecuteWithSignature<bool>("isFixedPitch", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#isForceBold--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsForceBold()
        {
            return IExecuteWithSignature<bool>("isForceBold", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getWidth-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="float"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public float GetWidth(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<float>("getWidth", "(Ljava/lang/String;)F", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getPath-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Awt.Geom.GeneralPath"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Awt.Geom.GeneralPath GetPath(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Awt.Geom.GeneralPath>("getPath", "(Ljava/lang/String;)Ljava/awt/geom/GeneralPath;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/type1/Type1Font.html#getType1CharString-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Fontbox.Cff.Type1CharString"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Fontbox.Cff.Type1CharString GetType1CharString(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Org.Apache.Fontbox.Cff.Type1CharString>("getType1CharString", "(Ljava/lang/String;)Lorg/apache/fontbox/cff/Type1CharString;", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}