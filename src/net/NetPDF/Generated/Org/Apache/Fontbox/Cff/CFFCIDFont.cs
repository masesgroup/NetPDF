/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using fontbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Fontbox.Cff
{
    #region CFFCIDFont declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html"/>
    /// </summary>
    public partial class CFFCIDFont : Org.Apache.Fontbox.Cff.CFFFont
    {
        const string _bridgeClassName = "org.apache.fontbox.cff.CFFCIDFont";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public CFFCIDFont() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public CFFCIDFont(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region CFFCIDFont implementation
    public partial class CFFCIDFont
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getFdSelect--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Cff.FDSelect FdSelect
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Cff.FDSelect>("getFdSelect", "()Lorg/apache/fontbox/cff/FDSelect;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getFontDicts--"/> 
        /// </summary>
        public Java.Util.List<Java.Util.Map<Java.Lang.String, object>> FontDicts
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Util.Map<Java.Lang.String, object>>>("getFontDicts", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getOrdering--"/> 
        /// </summary>
        public Java.Lang.String Ordering
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getOrdering", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getPrivDicts--"/> 
        /// </summary>
        public Java.Util.List<Java.Util.Map<Java.Lang.String, object>> PrivDicts
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Util.Map<Java.Lang.String, object>>>("getPrivDicts", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getRegistry--"/> 
        /// </summary>
        public Java.Lang.String Registry
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getRegistry", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/cff/CFFCIDFont.html#getSupplement--"/> 
        /// </summary>
        public int Supplement
        {
            get { return IExecuteWithSignature<int>("getSupplement", "()I"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}