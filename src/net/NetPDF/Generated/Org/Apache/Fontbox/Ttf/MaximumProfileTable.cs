/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using fontbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Fontbox.Ttf
{
    #region MaximumProfileTable declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html"/>
    /// </summary>
    public partial class MaximumProfileTable : Org.Apache.Fontbox.Ttf.TTFTable
    {
        const string _bridgeClassName = "org.apache.fontbox.ttf.MaximumProfileTable";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MaximumProfileTable() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public MaximumProfileTable(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MaximumProfileTable(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region MaximumProfileTable implementation
    public partial class MaximumProfileTable
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#TAG"/>
        /// </summary>
        public static Java.Lang.String TAG { get { if (!_TAGReady) { _TAGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TAG"); _TAGReady = true; } return _TAGContent; } }
        private static Java.Lang.String _TAGContent = default;
        private static bool _TAGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxComponentDepth--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxComponentDepth-int-"/>
        /// </summary>
        public int MaxComponentDepth
        {
            get { return IExecuteWithSignature<int>("getMaxComponentDepth", "()I"); } set { IExecuteWithSignature("setMaxComponentDepth", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxComponentElements--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxComponentElements-int-"/>
        /// </summary>
        public int MaxComponentElements
        {
            get { return IExecuteWithSignature<int>("getMaxComponentElements", "()I"); } set { IExecuteWithSignature("setMaxComponentElements", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxCompositeContours--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxCompositeContours-int-"/>
        /// </summary>
        public int MaxCompositeContours
        {
            get { return IExecuteWithSignature<int>("getMaxCompositeContours", "()I"); } set { IExecuteWithSignature("setMaxCompositeContours", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxCompositePoints--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxCompositePoints-int-"/>
        /// </summary>
        public int MaxCompositePoints
        {
            get { return IExecuteWithSignature<int>("getMaxCompositePoints", "()I"); } set { IExecuteWithSignature("setMaxCompositePoints", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxContours--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxContours-int-"/>
        /// </summary>
        public int MaxContours
        {
            get { return IExecuteWithSignature<int>("getMaxContours", "()I"); } set { IExecuteWithSignature("setMaxContours", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxFunctionDefs--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxFunctionDefs-int-"/>
        /// </summary>
        public int MaxFunctionDefs
        {
            get { return IExecuteWithSignature<int>("getMaxFunctionDefs", "()I"); } set { IExecuteWithSignature("setMaxFunctionDefs", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxInstructionDefs--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxInstructionDefs-int-"/>
        /// </summary>
        public int MaxInstructionDefs
        {
            get { return IExecuteWithSignature<int>("getMaxInstructionDefs", "()I"); } set { IExecuteWithSignature("setMaxInstructionDefs", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxPoints--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxPoints-int-"/>
        /// </summary>
        public int MaxPoints
        {
            get { return IExecuteWithSignature<int>("getMaxPoints", "()I"); } set { IExecuteWithSignature("setMaxPoints", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxSizeOfInstructions--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxSizeOfInstructions-int-"/>
        /// </summary>
        public int MaxSizeOfInstructions
        {
            get { return IExecuteWithSignature<int>("getMaxSizeOfInstructions", "()I"); } set { IExecuteWithSignature("setMaxSizeOfInstructions", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxStackElements--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxStackElements-int-"/>
        /// </summary>
        public int MaxStackElements
        {
            get { return IExecuteWithSignature<int>("getMaxStackElements", "()I"); } set { IExecuteWithSignature("setMaxStackElements", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxStorage--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxStorage-int-"/>
        /// </summary>
        public int MaxStorage
        {
            get { return IExecuteWithSignature<int>("getMaxStorage", "()I"); } set { IExecuteWithSignature("setMaxStorage", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxTwilightPoints--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxTwilightPoints-int-"/>
        /// </summary>
        public int MaxTwilightPoints
        {
            get { return IExecuteWithSignature<int>("getMaxTwilightPoints", "()I"); } set { IExecuteWithSignature("setMaxTwilightPoints", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getMaxZones--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setMaxZones-int-"/>
        /// </summary>
        public int MaxZones
        {
            get { return IExecuteWithSignature<int>("getMaxZones", "()I"); } set { IExecuteWithSignature("setMaxZones", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getNumGlyphs--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setNumGlyphs-int-"/>
        /// </summary>
        public int NumGlyphs
        {
            get { return IExecuteWithSignature<int>("getNumGlyphs", "()I"); } set { IExecuteWithSignature("setNumGlyphs", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#getVersion--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/MaximumProfileTable.html#setVersion-float-"/>
        /// </summary>
        public float Version
        {
            get { return IExecuteWithSignature<float>("getVersion", "()F"); } set { IExecuteWithSignature("setVersion", "(F)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}