/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.13.0)
*  using fontbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Fontbox.Ttf
{
    #region TrueTypeFont declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html"/>
    /// </summary>
    public partial class TrueTypeFont : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TrueTypeFont>
    {
        const string _bridgeClassName = "org.apache.fontbox.ttf.TrueTypeFont";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TrueTypeFont() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TrueTypeFont(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region TrueTypeFont implementation
    public partial class TrueTypeFont : Org.Apache.Fontbox.IFontBoxFont, Java.Io.ICloseable
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Fontbox.Ttf.TrueTypeFont"/> to <see cref="Org.Apache.Fontbox.FontBoxFont"/>
        /// </summary>
        public static implicit operator Org.Apache.Fontbox.FontBoxFont(Org.Apache.Fontbox.Ttf.TrueTypeFont t) => t.Cast<Org.Apache.Fontbox.FontBoxFont>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Fontbox.Ttf.TrueTypeFont"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Fontbox.Ttf.TrueTypeFont t) => t.Cast<Java.Io.Closeable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getCmap--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.CmapTable Cmap
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.CmapTable>("getCmap", "()Lorg/apache/fontbox/ttf/CmapTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getFontBBox--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Util.BoundingBox FontBBox
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Util.BoundingBox>("getFontBBox", "()Lorg/apache/fontbox/util/BoundingBox;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getFontMatrix--"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.Number> FontMatrix
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.Number>>("getFontMatrix", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getGlyph--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.GlyphTable Glyph
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.GlyphTable>("getGlyph", "()Lorg/apache/fontbox/ttf/GlyphTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getGsub--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.GlyphSubstitutionTable Gsub
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.GlyphSubstitutionTable>("getGsub", "()Lorg/apache/fontbox/ttf/GlyphSubstitutionTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getGsubData--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.Model.GsubData GsubData
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.Model.GsubData>("getGsubData", "()Lorg/apache/fontbox/ttf/model/GsubData;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getHeader--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.HeaderTable Header
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.HeaderTable>("getHeader", "()Lorg/apache/fontbox/ttf/HeaderTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getHorizontalHeader--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.HorizontalHeaderTable HorizontalHeader
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.HorizontalHeaderTable>("getHorizontalHeader", "()Lorg/apache/fontbox/ttf/HorizontalHeaderTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getHorizontalMetrics--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.HorizontalMetricsTable HorizontalMetrics
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.HorizontalMetricsTable>("getHorizontalMetrics", "()Lorg/apache/fontbox/ttf/HorizontalMetricsTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getIndexToLocation--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.IndexToLocationTable IndexToLocation
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.IndexToLocationTable>("getIndexToLocation", "()Lorg/apache/fontbox/ttf/IndexToLocationTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getKerning--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.KerningTable Kerning
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.KerningTable>("getKerning", "()Lorg/apache/fontbox/ttf/KerningTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getMaximumProfile--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.MaximumProfileTable MaximumProfile
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.MaximumProfileTable>("getMaximumProfile", "()Lorg/apache/fontbox/ttf/MaximumProfileTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getName--"/> 
        /// </summary>
        public Java.Lang.String Name
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getNaming--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.NamingTable Naming
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.NamingTable>("getNaming", "()Lorg/apache/fontbox/ttf/NamingTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getNumberOfGlyphs--"/> 
        /// </summary>
        public int NumberOfGlyphs
        {
            get { return IExecuteWithSignature<int>("getNumberOfGlyphs", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getOriginalData--"/> 
        /// </summary>
        public Java.Io.InputStream OriginalData
        {
            get { return IExecuteWithSignature<Java.Io.InputStream>("getOriginalData", "()Ljava/io/InputStream;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getOriginalDataSize--"/> 
        /// </summary>
        public long OriginalDataSize
        {
            get { return IExecuteWithSignature<long>("getOriginalDataSize", "()J"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getOS2Windows--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.OS2WindowsMetricsTable OS2Windows
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.OS2WindowsMetricsTable>("getOS2Windows", "()Lorg/apache/fontbox/ttf/OS2WindowsMetricsTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getPostScript--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.PostScriptTable PostScript
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.PostScriptTable>("getPostScript", "()Lorg/apache/fontbox/ttf/PostScriptTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getTableMap--"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, Org.Apache.Fontbox.Ttf.TTFTable> TableMap
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Org.Apache.Fontbox.Ttf.TTFTable>>("getTableMap", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getTables--"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Fontbox.Ttf.TTFTable> Tables
        {
            get { return IExecuteWithSignature<Java.Util.Collection<Org.Apache.Fontbox.Ttf.TTFTable>>("getTables", "()Ljava/util/Collection;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getUnicodeCmapLookup--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.CmapLookup UnicodeCmapLookup
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.CmapLookup>("getUnicodeCmapLookup", "()Lorg/apache/fontbox/ttf/CmapLookup;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getUnitsPerEm--"/> 
        /// </summary>
        public int UnitsPerEm
        {
            get { return IExecuteWithSignature<int>("getUnitsPerEm", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getVersion--"/> 
        /// </summary>
        public float Version
        {
            get { return IExecuteWithSignature<float>("getVersion", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getVerticalHeader--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.VerticalHeaderTable VerticalHeader
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.VerticalHeaderTable>("getVerticalHeader", "()Lorg/apache/fontbox/ttf/VerticalHeaderTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getVerticalMetrics--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.VerticalMetricsTable VerticalMetrics
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.VerticalMetricsTable>("getVerticalMetrics", "()Lorg/apache/fontbox/ttf/VerticalMetricsTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getVerticalOrigin--"/> 
        /// </summary>
        public Org.Apache.Fontbox.Ttf.VerticalOriginTable VerticalOrigin
        {
            get { return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.VerticalOriginTable>("getVerticalOrigin", "()Lorg/apache/fontbox/ttf/VerticalOriginTable;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#hasGlyph-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public bool HasGlyph(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasGlyph", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#isEnableGsub--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEnableGsub()
        {
            return IExecuteWithSignature<bool>("isEnableGsub", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getTableBytes-org.apache.fontbox.ttf.TTFTable-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Fontbox.Ttf.TTFTable"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] GetTableBytes(Org.Apache.Fontbox.Ttf.TTFTable arg0)
        {
            return IExecuteWithSignatureArray<byte>("getTableBytes", "(Lorg/apache/fontbox/ttf/TTFTable;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getTableNBytes-org.apache.fontbox.ttf.TTFTable-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Fontbox.Ttf.TTFTable"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] GetTableNBytes(Org.Apache.Fontbox.Ttf.TTFTable arg0, int arg1)
        {
            return IExecuteWithSignatureArray<byte>("getTableNBytes", "(Lorg/apache/fontbox/ttf/TTFTable;I)[B", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getWidth-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="float"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public float GetWidth(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<float>("getWidth", "(Ljava/lang/String;)F", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getAdvanceHeight-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public int GetAdvanceHeight(int arg0)
        {
            return IExecuteWithSignature<int>("getAdvanceHeight", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getAdvanceWidth-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public int GetAdvanceWidth(int arg0)
        {
            return IExecuteWithSignature<int>("getAdvanceWidth", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#nameToGID-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public int NameToGID(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("nameToGID", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getPath-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Awt.Geom.GeneralPath"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Awt.Geom.GeneralPath GetPath(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Awt.Geom.GeneralPath>("getPath", "(Ljava/lang/String;)Ljava/awt/geom/GeneralPath;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#getUnicodeCmapLookup-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Org.Apache.Fontbox.Ttf.CmapLookup"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Fontbox.Ttf.CmapLookup GetUnicodeCmapLookup(bool arg0)
        {
            return IExecuteWithSignature<Org.Apache.Fontbox.Ttf.CmapLookup>("getUnicodeCmapLookup", "(Z)Lorg/apache/fontbox/ttf/CmapLookup;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#close--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#disableGsubFeature-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void DisableGsubFeature(Java.Lang.String arg0)
        {
            IExecuteWithSignature("disableGsubFeature", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#enableGsubFeature-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void EnableGsubFeature(Java.Lang.String arg0)
        {
            IExecuteWithSignature("enableGsubFeature", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#enableVerticalSubstitutions--"/>
        /// </summary>
        public void EnableVerticalSubstitutions()
        {
            IExecuteWithSignature("enableVerticalSubstitutions", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.5/org/apache/fontbox/ttf/TrueTypeFont.html#setEnableGsub-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetEnableGsub(bool arg0)
        {
            IExecuteWithSignature("setEnableGsub", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}