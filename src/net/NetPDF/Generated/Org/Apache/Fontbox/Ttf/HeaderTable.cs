/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using fontbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Fontbox.Ttf
{
    #region HeaderTable declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html"/>
    /// </summary>
    public partial class HeaderTable : Org.Apache.Fontbox.Ttf.TTFTable
    {
        const string _bridgeClassName = "org.apache.fontbox.ttf.HeaderTable";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public HeaderTable() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public HeaderTable(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region HeaderTable implementation
    public partial class HeaderTable
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#MAC_STYLE_BOLD"/>
        /// </summary>
        public static int MAC_STYLE_BOLD { get { if (!_MAC_STYLE_BOLDReady) { _MAC_STYLE_BOLDContent = SGetField<int>(LocalBridgeClazz, "MAC_STYLE_BOLD"); _MAC_STYLE_BOLDReady = true; } return _MAC_STYLE_BOLDContent; } }
        private static int _MAC_STYLE_BOLDContent = default;
        private static bool _MAC_STYLE_BOLDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#MAC_STYLE_ITALIC"/>
        /// </summary>
        public static int MAC_STYLE_ITALIC { get { if (!_MAC_STYLE_ITALICReady) { _MAC_STYLE_ITALICContent = SGetField<int>(LocalBridgeClazz, "MAC_STYLE_ITALIC"); _MAC_STYLE_ITALICReady = true; } return _MAC_STYLE_ITALICContent; } }
        private static int _MAC_STYLE_ITALICContent = default;
        private static bool _MAC_STYLE_ITALICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#TAG"/>
        /// </summary>
        public static Java.Lang.String TAG { get { if (!_TAGReady) { _TAGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TAG"); _TAGReady = true; } return _TAGContent; } }
        private static Java.Lang.String _TAGContent = default;
        private static bool _TAGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getCheckSumAdjustment--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setCheckSumAdjustment-long-"/>
        /// </summary>
        public long CheckSumAdjustment
        {
            get { return IExecuteWithSignature<long>("getCheckSumAdjustment", "()J"); } set { IExecuteWithSignature("setCheckSumAdjustment", "(J)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getCreated--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setCreated-java.util.Calendar-"/>
        /// </summary>
        public Java.Util.Calendar Created
        {
            get { return IExecuteWithSignature<Java.Util.Calendar>("getCreated", "()Ljava/util/Calendar;"); } set { IExecuteWithSignature("setCreated", "(Ljava/util/Calendar;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getFlags--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setFlags-int-"/>
        /// </summary>
        public int Flags
        {
            get { return IExecuteWithSignature<int>("getFlags", "()I"); } set { IExecuteWithSignature("setFlags", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getFontDirectionHint--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setFontDirectionHint-short-"/>
        /// </summary>
        public short FontDirectionHint
        {
            get { return IExecuteWithSignature<short>("getFontDirectionHint", "()S"); } set { IExecuteWithSignature("setFontDirectionHint", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getFontRevision--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setFontRevision-float-"/>
        /// </summary>
        public float FontRevision
        {
            get { return IExecuteWithSignature<float>("getFontRevision", "()F"); } set { IExecuteWithSignature("setFontRevision", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getGlyphDataFormat--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setGlyphDataFormat-short-"/>
        /// </summary>
        public short GlyphDataFormat
        {
            get { return IExecuteWithSignature<short>("getGlyphDataFormat", "()S"); } set { IExecuteWithSignature("setGlyphDataFormat", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getIndexToLocFormat--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setIndexToLocFormat-short-"/>
        /// </summary>
        public short IndexToLocFormat
        {
            get { return IExecuteWithSignature<short>("getIndexToLocFormat", "()S"); } set { IExecuteWithSignature("setIndexToLocFormat", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getLowestRecPPEM--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setLowestRecPPEM-int-"/>
        /// </summary>
        public int LowestRecPPEM
        {
            get { return IExecuteWithSignature<int>("getLowestRecPPEM", "()I"); } set { IExecuteWithSignature("setLowestRecPPEM", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getMacStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setMacStyle-int-"/>
        /// </summary>
        public int MacStyle
        {
            get { return IExecuteWithSignature<int>("getMacStyle", "()I"); } set { IExecuteWithSignature("setMacStyle", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getMagicNumber--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setMagicNumber-long-"/>
        /// </summary>
        public long MagicNumber
        {
            get { return IExecuteWithSignature<long>("getMagicNumber", "()J"); } set { IExecuteWithSignature("setMagicNumber", "(J)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getModified--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setModified-java.util.Calendar-"/>
        /// </summary>
        public Java.Util.Calendar Modified
        {
            get { return IExecuteWithSignature<Java.Util.Calendar>("getModified", "()Ljava/util/Calendar;"); } set { IExecuteWithSignature("setModified", "(Ljava/util/Calendar;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getUnitsPerEm--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setUnitsPerEm-int-"/>
        /// </summary>
        public int UnitsPerEm
        {
            get { return IExecuteWithSignature<int>("getUnitsPerEm", "()I"); } set { IExecuteWithSignature("setUnitsPerEm", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getVersion--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setVersion-float-"/>
        /// </summary>
        public float Version
        {
            get { return IExecuteWithSignature<float>("getVersion", "()F"); } set { IExecuteWithSignature("setVersion", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getXMax--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setXMax-short-"/>
        /// </summary>
        public short XMax
        {
            get { return IExecuteWithSignature<short>("getXMax", "()S"); } set { IExecuteWithSignature("setXMax", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getXMin--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setXMin-short-"/>
        /// </summary>
        public short XMin
        {
            get { return IExecuteWithSignature<short>("getXMin", "()S"); } set { IExecuteWithSignature("setXMin", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getYMax--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setYMax-short-"/>
        /// </summary>
        public short YMax
        {
            get { return IExecuteWithSignature<short>("getYMax", "()S"); } set { IExecuteWithSignature("setYMax", "(S)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#getYMin--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/fontbox/3.0.4/org/apache/fontbox/ttf/HeaderTable.html#setYMin-short-"/>
        /// </summary>
        public short YMin
        {
            get { return IExecuteWithSignature<short>("getYMin", "()S"); } set { IExecuteWithSignature("setYMin", "(S)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}