/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Multipdf
{
    #region Splitter declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html"/>
    /// </summary>
    public partial class Splitter : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Splitter>
    {
        const string _bridgeClassName = "org.apache.pdfbox.multipdf.Splitter";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Splitter() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Splitter(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region Splitter implementation
    public partial class Splitter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#getStreamCacheCreateFunction--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#setStreamCacheCreateFunction-org.apache.pdfbox.io.RandomAccessStreamCache.StreamCacheCreateFunction-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Io.RandomAccessStreamCache.StreamCacheCreateFunction StreamCacheCreateFunction
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Io.RandomAccessStreamCache.StreamCacheCreateFunction>("getStreamCacheCreateFunction", "()Lorg/apache/pdfbox/io/RandomAccessStreamCache$StreamCacheCreateFunction;"); } set { IExecuteWithSignature("setStreamCacheCreateFunction", "(Lorg/apache/pdfbox/io/RandomAccessStreamCache$StreamCacheCreateFunction;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#split-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.PDDocument> Split(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.PDDocument>>("split", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#setEndPage-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetEndPage(int arg0)
        {
            IExecuteWithSignature("setEndPage", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#setSplitAtPage-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSplitAtPage(int arg0)
        {
            IExecuteWithSignature("setSplitAtPage", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/multipdf/Splitter.html#setStartPage-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetStartPage(int arg0)
        {
            IExecuteWithSignature("setStartPage", "(I)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}