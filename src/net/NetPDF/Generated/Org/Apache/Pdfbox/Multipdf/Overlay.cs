/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Multipdf
{
    #region Overlay declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html"/>
    /// </summary>
    public partial class Overlay : Java.Io.Closeable
    {
        const string _bridgeClassName = "org.apache.pdfbox.multipdf.Overlay";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Overlay() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Overlay(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => true;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region Position declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.Position.html"/>
        /// </summary>
        public partial class Position : Java.Lang.Enum<Org.Apache.Pdfbox.Multipdf.Overlay.Position>
        {
            const string _bridgeClassName = "org.apache.pdfbox.multipdf.Overlay$Position";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Position() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Position(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region Overlay implementation
    public partial class Overlay
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#getDefaultOverlayFile--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setDefaultOverlayFile-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String DefaultOverlayFile
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDefaultOverlayFile", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDefaultOverlayFile", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#getInputFile--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setInputFile-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String InputFile
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getInputFile", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setInputFile", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#overlay-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Pdmodel.PDDocument OverlayMethod(Java.Util.Map<Java.Lang.Integer, Java.Lang.String> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDDocument>("overlay", "(Ljava/util/Map;)Lorg/apache/pdfbox/pdmodel/PDDocument;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#overlayDocuments-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Pdmodel.PDDocument OverlayDocuments(Java.Util.Map<Java.Lang.Integer, Org.Apache.Pdfbox.Pdmodel.PDDocument> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDDocument>("overlayDocuments", "(Ljava/util/Map;)Lorg/apache/pdfbox/pdmodel/PDDocument;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#close--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setAllPagesOverlayFile-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetAllPagesOverlayFile(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setAllPagesOverlayFile", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setAllPagesOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetAllPagesOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setAllPagesOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setDefaultOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetDefaultOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setDefaultOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setEvenPageOverlayFile-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetEvenPageOverlayFile(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setEvenPageOverlayFile", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setEvenPageOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetEvenPageOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setEvenPageOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setFirstPageOverlayFile-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetFirstPageOverlayFile(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setFirstPageOverlayFile", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setFirstPageOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetFirstPageOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setFirstPageOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setInputPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetInputPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setInputPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setLastPageOverlayFile-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetLastPageOverlayFile(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setLastPageOverlayFile", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setLastPageOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetLastPageOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setLastPageOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setOddPageOverlayFile-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetOddPageOverlayFile(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setOddPageOverlayFile", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setOddPageOverlayPDF-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void SetOddPageOverlayPDF(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("setOddPageOverlayPDF", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.html#setOverlayPosition-org.apache.pdfbox.multipdf.Overlay.Position-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Multipdf.Overlay.Position"/></param>
        public void SetOverlayPosition(Org.Apache.Pdfbox.Multipdf.Overlay.Position arg0)
        {
            IExecuteWithSignature("setOverlayPosition", "(Lorg/apache/pdfbox/multipdf/Overlay$Position;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region Position implementation
        public partial class Position
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.Position.html#BACKGROUND"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Multipdf.Overlay.Position BACKGROUND { get { if (!_BACKGROUNDReady) { _BACKGROUNDContent = SGetField<Org.Apache.Pdfbox.Multipdf.Overlay.Position>(LocalBridgeClazz, "BACKGROUND"); _BACKGROUNDReady = true; } return _BACKGROUNDContent; } }
            private static Org.Apache.Pdfbox.Multipdf.Overlay.Position _BACKGROUNDContent = default;
            private static bool _BACKGROUNDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.Position.html#FOREGROUND"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Multipdf.Overlay.Position FOREGROUND { get { if (!_FOREGROUNDReady) { _FOREGROUNDContent = SGetField<Org.Apache.Pdfbox.Multipdf.Overlay.Position>(LocalBridgeClazz, "FOREGROUND"); _FOREGROUNDReady = true; } return _FOREGROUNDContent; } }
            private static Org.Apache.Pdfbox.Multipdf.Overlay.Position _FOREGROUNDContent = default;
            private static bool _FOREGROUNDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.Position.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Org.Apache.Pdfbox.Multipdf.Overlay.Position"/></returns>
            public static Org.Apache.Pdfbox.Multipdf.Overlay.Position ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Org.Apache.Pdfbox.Multipdf.Overlay.Position>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/multipdf/Overlay$Position;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/multipdf/Overlay.Position.html#values--"/>
            /// </summary>
            /// <returns><see cref="Org.Apache.Pdfbox.Multipdf.Overlay.Position"/></returns>
            public static Org.Apache.Pdfbox.Multipdf.Overlay.Position[] Values()
            {
                return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Multipdf.Overlay.Position>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/multipdf/Overlay$Position;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}