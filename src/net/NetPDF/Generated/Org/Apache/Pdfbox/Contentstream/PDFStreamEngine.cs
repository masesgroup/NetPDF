/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Contentstream
{
    #region PDFStreamEngine declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html"/>
    /// </summary>
    public partial class PDFStreamEngine : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PDFStreamEngine>
    {
        const string _bridgeClassName = "org.apache.pdfbox.contentstream.PDFStreamEngine";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("PDFStreamEngine class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDFStreamEngine() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("PDFStreamEngine class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDFStreamEngine(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDFStreamEngine implementation
    public partial class PDFStreamEngine
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getCurrentPage--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.PDPage CurrentPage
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDPage>("getCurrentPage", "()Lorg/apache/pdfbox/pdmodel/PDPage;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getGraphicsStackSize--"/> 
        /// </summary>
        public int GraphicsStackSize
        {
            get { return IExecuteWithSignature<int>("getGraphicsStackSize", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getGraphicsState--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.State.PDGraphicsState GraphicsState
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.State.PDGraphicsState>("getGraphicsState", "()Lorg/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getInitialMatrix--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Util.Matrix InitialMatrix
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Util.Matrix>("getInitialMatrix", "()Lorg/apache/pdfbox/util/Matrix;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getLevel--"/> 
        /// </summary>
        public int Level
        {
            get { return IExecuteWithSignature<int>("getLevel", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getResources--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.PDResources Resources
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDResources>("getResources", "()Lorg/apache/pdfbox/pdmodel/PDResources;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getTextLineMatrix--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#setTextLineMatrix-org.apache.pdfbox.util.Matrix-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Util.Matrix TextLineMatrix
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Util.Matrix>("getTextLineMatrix", "()Lorg/apache/pdfbox/util/Matrix;"); } set { IExecuteWithSignature("setTextLineMatrix", "(Lorg/apache/pdfbox/util/Matrix;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getTextMatrix--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#setTextMatrix-org.apache.pdfbox.util.Matrix-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Util.Matrix TextMatrix
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Util.Matrix>("getTextMatrix", "()Lorg/apache/pdfbox/util/Matrix;"); } set { IExecuteWithSignature("setTextMatrix", "(Lorg/apache/pdfbox/util/Matrix;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#addOperator-org.apache.pdfbox.contentstream.operator.OperatorProcessor-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Contentstream.Operator.OperatorProcessor"/></param>
        public void AddOperator(Org.Apache.Pdfbox.Contentstream.Operator.OperatorProcessor arg0)
        {
            IExecuteWithSignature("addOperator", "(Lorg/apache/pdfbox/contentstream/operator/OperatorProcessor;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#transformedPoint-float-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Java.Awt.Geom.Point2D.Float"/></returns>
        public Java.Awt.Geom.Point2D.Float TransformedPoint(float arg0, float arg1)
        {
            return IExecuteWithSignature<Java.Awt.Geom.Point2D.Float>("transformedPoint", "(FF)Ljava/awt/geom/Point2D$Float;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#getAppearance-org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceStream"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceStream GetAppearance(Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceStream>("getAppearance", "(Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation;)Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#beginMarkedContentSequence-org.apache.pdfbox.cos.COSName-org.apache.pdfbox.cos.COSDictionary-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public void BeginMarkedContentSequence(Org.Apache.Pdfbox.Cos.COSName arg0, Org.Apache.Pdfbox.Cos.COSDictionary arg1)
        {
            IExecuteWithSignature("beginMarkedContentSequence", "(Lorg/apache/pdfbox/cos/COSName;Lorg/apache/pdfbox/cos/COSDictionary;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#beginText--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void BeginText()
        {
            IExecuteWithSignature("beginText", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#decreaseLevel--"/>
        /// </summary>
        public void DecreaseLevel()
        {
            IExecuteWithSignature("decreaseLevel", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#endMarkedContentSequence--"/>
        /// </summary>
        public void EndMarkedContentSequence()
        {
            IExecuteWithSignature("endMarkedContentSequence", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#endText--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void EndText()
        {
            IExecuteWithSignature("endText", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#increaseLevel--"/>
        /// </summary>
        public void IncreaseLevel()
        {
            IExecuteWithSignature("increaseLevel", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#processOperator-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ProcessOperator(Java.Lang.String arg0, Java.Util.List<Org.Apache.Pdfbox.Cos.COSBase> arg1)
        {
            IExecuteWithSignature("processOperator", "(Ljava/lang/String;Ljava/util/List;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#processPage-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ProcessPage(Org.Apache.Pdfbox.Pdmodel.PDPage arg0)
        {
            IExecuteWithSignature("processPage", "(Lorg/apache/pdfbox/pdmodel/PDPage;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#restoreGraphicsState--"/>
        /// </summary>
        public void RestoreGraphicsState()
        {
            IExecuteWithSignature("restoreGraphicsState", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#saveGraphicsState--"/>
        /// </summary>
        public void SaveGraphicsState()
        {
            IExecuteWithSignature("saveGraphicsState", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#setLineDashPattern-org.apache.pdfbox.cos.COSArray-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetLineDashPattern(Org.Apache.Pdfbox.Cos.COSArray arg0, int arg1)
        {
            IExecuteWithSignature("setLineDashPattern", "(Lorg/apache/pdfbox/cos/COSArray;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#showAnnotation-org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ShowAnnotation(Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation arg0)
        {
            IExecuteWithSignature("showAnnotation", "(Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#showForm-org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Form.PDFormXObject"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ShowForm(Org.Apache.Pdfbox.Pdmodel.Graphics.Form.PDFormXObject arg0)
        {
            IExecuteWithSignature("showForm", "(Lorg/apache/pdfbox/pdmodel/graphics/form/PDFormXObject;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#showTextString-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ShowTextString(byte[] arg0)
        {
            IExecuteWithSignature("showTextString", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#showTextStrings-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ShowTextStrings(Org.Apache.Pdfbox.Cos.COSArray arg0)
        {
            IExecuteWithSignature("showTextStrings", "(Lorg/apache/pdfbox/cos/COSArray;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/contentstream/PDFStreamEngine.html#showTransparencyGroup-org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Form.PDTransparencyGroup"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ShowTransparencyGroup(Org.Apache.Pdfbox.Pdmodel.Graphics.Form.PDTransparencyGroup arg0)
        {
            IExecuteWithSignature("showTransparencyGroup", "(Lorg/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}