/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdfwriter.Compress
{
    #region COSWriterCompressionPool declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html"/>
    /// </summary>
    public partial class COSWriterCompressionPool : MASES.JCOBridge.C2JBridge.JVMBridgeBase<COSWriterCompressionPool>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public COSWriterCompressionPool() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public COSWriterCompressionPool(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region COSWriterCompressionPool implementation
    public partial class COSWriterCompressionPool
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Pdfwriter.Compress.CompressParameters"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public COSWriterCompressionPool(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0, Org.Apache.Pdfbox.Pdfwriter.Compress.CompressParameters arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#MINIMUM_SUPPORTED_VERSION"/>
        /// </summary>
        public static float MINIMUM_SUPPORTED_VERSION { get { if (!_MINIMUM_SUPPORTED_VERSIONReady) { _MINIMUM_SUPPORTED_VERSIONContent = SGetField<float>(LocalBridgeClazz, "MINIMUM_SUPPORTED_VERSION"); _MINIMUM_SUPPORTED_VERSIONReady = true; } return _MINIMUM_SUPPORTED_VERSIONContent; } }
        private static float _MINIMUM_SUPPORTED_VERSIONContent = default;
        private static bool _MINIMUM_SUPPORTED_VERSIONReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#getHighestXRefObjectNumber--"/> 
        /// </summary>
        public long HighestXRefObjectNumber
        {
            get { return IExecuteWithSignature<long>("getHighestXRefObjectNumber", "()J"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#getObjectStreamObjects--"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Cos.COSObjectKey> ObjectStreamObjects
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Cos.COSObjectKey>>("getObjectStreamObjects", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#getTopLevelObjects--"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Cos.COSObjectKey> TopLevelObjects
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Cos.COSObjectKey>>("getTopLevelObjects", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#contains-org.apache.pdfbox.cos.COSBase-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Org.Apache.Pdfbox.Cos.COSBase arg0)
        {
            return IExecuteWithSignature<bool>("contains", "(Lorg/apache/pdfbox/cos/COSBase;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#createObjectStreams--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Pdfbox.Pdfwriter.Compress.COSWriterObjectStream> CreateObjectStreams()
        {
            return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdfwriter.Compress.COSWriterObjectStream>>("createObjectStreams", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#getObject-org.apache.pdfbox.cos.COSObjectKey-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSObjectKey"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></returns>
        public Org.Apache.Pdfbox.Cos.COSBase GetObject(Org.Apache.Pdfbox.Cos.COSObjectKey arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getObject", "(Lorg/apache/pdfbox/cos/COSObjectKey;)Lorg/apache/pdfbox/cos/COSBase;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.html#getKey-org.apache.pdfbox.cos.COSBase-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSObjectKey"/></returns>
        public Org.Apache.Pdfbox.Cos.COSObjectKey GetKey(Org.Apache.Pdfbox.Cos.COSBase arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSObjectKey>("getKey", "(Lorg/apache/pdfbox/cos/COSBase;)Lorg/apache/pdfbox/cos/COSObjectKey;", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}