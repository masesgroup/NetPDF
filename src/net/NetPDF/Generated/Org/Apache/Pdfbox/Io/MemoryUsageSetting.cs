/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-io-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Io
{
    #region MemoryUsageSetting declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html"/>
    /// </summary>
    public partial class MemoryUsageSetting : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MemoryUsageSetting>
    {
        const string _bridgeClassName = "org.apache.pdfbox.io.MemoryUsageSetting";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MemoryUsageSetting() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MemoryUsageSetting(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region MemoryUsageSetting implementation
    public partial class MemoryUsageSetting
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#streamCache"/>
        /// </summary>
        public Org.Apache.Pdfbox.Io.RandomAccessStreamCache.StreamCacheCreateFunction streamCache { get { if (!_streamCacheReady) { _streamCacheContent = IGetField<Org.Apache.Pdfbox.Io.RandomAccessStreamCache.StreamCacheCreateFunction>("streamCache"); _streamCacheReady = true; } return _streamCacheContent; } }
        private Org.Apache.Pdfbox.Io.RandomAccessStreamCache.StreamCacheCreateFunction _streamCacheContent = default;
        private bool _streamCacheReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupMainMemoryOnly--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupMainMemoryOnly()
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupMainMemoryOnly", "()Lorg/apache/pdfbox/io/MemoryUsageSetting;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupMainMemoryOnly-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupMainMemoryOnly(long arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupMainMemoryOnly", "(J)Lorg/apache/pdfbox/io/MemoryUsageSetting;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupMixed-long-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupMixed(long arg0, long arg1)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupMixed", "(JJ)Lorg/apache/pdfbox/io/MemoryUsageSetting;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupMixed-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupMixed(long arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupMixed", "(J)Lorg/apache/pdfbox/io/MemoryUsageSetting;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupTempFileOnly--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupTempFileOnly()
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupTempFileOnly", "()Lorg/apache/pdfbox/io/MemoryUsageSetting;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setupTempFileOnly-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public static Org.Apache.Pdfbox.Io.MemoryUsageSetting SetupTempFileOnly(long arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>(LocalBridgeClazz, "setupTempFileOnly", "(J)Lorg/apache/pdfbox/io/MemoryUsageSetting;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#getMaxMainMemoryBytes--"/> 
        /// </summary>
        public long MaxMainMemoryBytes
        {
            get { return IExecuteWithSignature<long>("getMaxMainMemoryBytes", "()J"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#getMaxStorageBytes--"/> 
        /// </summary>
        public long MaxStorageBytes
        {
            get { return IExecuteWithSignature<long>("getMaxStorageBytes", "()J"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#getTempDir--"/> 
        /// </summary>
        public Java.Io.File TempDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getTempDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#isMainMemoryRestricted--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsMainMemoryRestricted()
        {
            return IExecuteWithSignature<bool>("isMainMemoryRestricted", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#isStorageRestricted--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsStorageRestricted()
        {
            return IExecuteWithSignature<bool>("isStorageRestricted", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#useMainMemory--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool UseMainMemory()
        {
            return IExecuteWithSignature<bool>("useMainMemory", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#useTempFile--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool UseTempFile()
        {
            return IExecuteWithSignature<bool>("useTempFile", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox-io/3.0.3/org/apache/pdfbox/io/MemoryUsageSetting.html#setTempDir-java.io.File-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.MemoryUsageSetting"/></returns>
        public Org.Apache.Pdfbox.Io.MemoryUsageSetting SetTempDir(Java.Io.File arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Io.MemoryUsageSetting>("setTempDir", "(Ljava/io/File;)Lorg/apache/pdfbox/io/MemoryUsageSetting;", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}