/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Text
{
    #region TextPosition declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html"/>
    /// </summary>
    public partial class TextPosition : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TextPosition>
    {
        const string _bridgeClassName = "org.apache.pdfbox.text.TextPosition";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TextPosition() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TextPosition(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region TextPosition implementation
    public partial class TextPosition
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#org.apache.pdfbox.text.TextPosition(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Pdfbox.Util.Matrix"/></param>
        /// <param name="arg4"><see cref="float"/></param>
        /// <param name="arg5"><see cref="float"/></param>
        /// <param name="arg6"><see cref="float"/></param>
        /// <param name="arg7"><see cref="float"/></param>
        /// <param name="arg8"><see cref="float"/></param>
        /// <param name="arg9"><see cref="Java.Lang.String"/></param>
        /// <param name="arg10"><see cref="int"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Pdfbox.Pdmodel.Font.PDFont"/></param>
        /// <param name="arg12"><see cref="float"/></param>
        /// <param name="arg13"><see cref="int"/></param>
        public TextPosition(int arg0, float arg1, float arg2, Org.Apache.Pdfbox.Util.Matrix arg3, float arg4, float arg5, float arg6, float arg7, float arg8, Java.Lang.String arg9, int[] arg10, Org.Apache.Pdfbox.Pdmodel.Font.PDFont arg11, float arg12, int arg13)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getCharacterCodes--"/> 
        /// </summary>
        public int[] CharacterCodes
        {
            get { return IExecuteWithSignatureArray<int>("getCharacterCodes", "()[I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getDir--"/> 
        /// </summary>
        public float Dir
        {
            get { return IExecuteWithSignature<float>("getDir", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getEndX--"/> 
        /// </summary>
        public float EndX
        {
            get { return IExecuteWithSignature<float>("getEndX", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getEndY--"/> 
        /// </summary>
        public float EndY
        {
            get { return IExecuteWithSignature<float>("getEndY", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getFont--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Font.PDFont Font
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Font.PDFont>("getFont", "()Lorg/apache/pdfbox/pdmodel/font/PDFont;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getFontSize--"/> 
        /// </summary>
        public float FontSize
        {
            get { return IExecuteWithSignature<float>("getFontSize", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getFontSizeInPt--"/> 
        /// </summary>
        public float FontSizeInPt
        {
            get { return IExecuteWithSignature<float>("getFontSizeInPt", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getHeight--"/> 
        /// </summary>
        public float Height
        {
            get { return IExecuteWithSignature<float>("getHeight", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getHeightDir--"/> 
        /// </summary>
        public float HeightDir
        {
            get { return IExecuteWithSignature<float>("getHeightDir", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getIndividualWidths--"/> 
        /// </summary>
        public float[] IndividualWidths
        {
            get { return IExecuteWithSignatureArray<float>("getIndividualWidths", "()[F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getPageHeight--"/> 
        /// </summary>
        public float PageHeight
        {
            get { return IExecuteWithSignature<float>("getPageHeight", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getPageWidth--"/> 
        /// </summary>
        public float PageWidth
        {
            get { return IExecuteWithSignature<float>("getPageWidth", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getRotation--"/> 
        /// </summary>
        public int Rotation
        {
            get { return IExecuteWithSignature<int>("getRotation", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getTextMatrix--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Util.Matrix TextMatrix
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Util.Matrix>("getTextMatrix", "()Lorg/apache/pdfbox/util/Matrix;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getUnicode--"/> 
        /// </summary>
        public Java.Lang.String Unicode
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getUnicode", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getVisuallyOrderedUnicode--"/> 
        /// </summary>
        public Java.Lang.String VisuallyOrderedUnicode
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getVisuallyOrderedUnicode", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getWidth--"/> 
        /// </summary>
        public float Width
        {
            get { return IExecuteWithSignature<float>("getWidth", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getWidthDirAdj--"/> 
        /// </summary>
        public float WidthDirAdj
        {
            get { return IExecuteWithSignature<float>("getWidthDirAdj", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getWidthOfSpace--"/> 
        /// </summary>
        public float WidthOfSpace
        {
            get { return IExecuteWithSignature<float>("getWidthOfSpace", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getX--"/> 
        /// </summary>
        public float X
        {
            get { return IExecuteWithSignature<float>("getX", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getXDirAdj--"/> 
        /// </summary>
        public float XDirAdj
        {
            get { return IExecuteWithSignature<float>("getXDirAdj", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getXScale--"/> 
        /// </summary>
        public float XScale
        {
            get { return IExecuteWithSignature<float>("getXScale", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getY--"/> 
        /// </summary>
        public float Y
        {
            get { return IExecuteWithSignature<float>("getY", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getYDirAdj--"/> 
        /// </summary>
        public float YDirAdj
        {
            get { return IExecuteWithSignature<float>("getYDirAdj", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#getYScale--"/> 
        /// </summary>
        public float YScale
        {
            get { return IExecuteWithSignature<float>("getYScale", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#completelyContains-org.apache.pdfbox.text.TextPosition-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Text.TextPosition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CompletelyContains(Org.Apache.Pdfbox.Text.TextPosition arg0)
        {
            return IExecuteWithSignature<bool>("completelyContains", "(Lorg/apache/pdfbox/text/TextPosition;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#contains-org.apache.pdfbox.text.TextPosition-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Text.TextPosition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Org.Apache.Pdfbox.Text.TextPosition arg0)
        {
            return IExecuteWithSignature<bool>("contains", "(Lorg/apache/pdfbox/text/TextPosition;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#isDiacritic--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDiacritic()
        {
            return IExecuteWithSignature<bool>("isDiacritic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/text/TextPosition.html#mergeDiacritic-org.apache.pdfbox.text.TextPosition-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Text.TextPosition"/></param>
        public void MergeDiacritic(Org.Apache.Pdfbox.Text.TextPosition arg0)
        {
            IExecuteWithSignature("mergeDiacritic", "(Lorg/apache/pdfbox/text/TextPosition;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}