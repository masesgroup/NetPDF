/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature
{
    #region PDSeedValue declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html"/>
    /// </summary>
    public partial class PDSeedValue : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDSeedValue() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDSeedValue(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDSeedValue implementation
    public partial class PDSeedValue
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDSeedValue(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_ADD_REV_INFO"/>
        /// </summary>
        public static int FLAG_ADD_REV_INFO { get { if (!_FLAG_ADD_REV_INFOReady) { _FLAG_ADD_REV_INFOContent = SGetField<int>(LocalBridgeClazz, "FLAG_ADD_REV_INFO"); _FLAG_ADD_REV_INFOReady = true; } return _FLAG_ADD_REV_INFOContent; } }
        private static int _FLAG_ADD_REV_INFOContent = default;
        private static bool _FLAG_ADD_REV_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_DIGEST_METHOD"/>
        /// </summary>
        public static int FLAG_DIGEST_METHOD { get { if (!_FLAG_DIGEST_METHODReady) { _FLAG_DIGEST_METHODContent = SGetField<int>(LocalBridgeClazz, "FLAG_DIGEST_METHOD"); _FLAG_DIGEST_METHODReady = true; } return _FLAG_DIGEST_METHODContent; } }
        private static int _FLAG_DIGEST_METHODContent = default;
        private static bool _FLAG_DIGEST_METHODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_FILTER"/>
        /// </summary>
        public static int FLAG_FILTER { get { if (!_FLAG_FILTERReady) { _FLAG_FILTERContent = SGetField<int>(LocalBridgeClazz, "FLAG_FILTER"); _FLAG_FILTERReady = true; } return _FLAG_FILTERContent; } }
        private static int _FLAG_FILTERContent = default;
        private static bool _FLAG_FILTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_LEGAL_ATTESTATION"/>
        /// </summary>
        public static int FLAG_LEGAL_ATTESTATION { get { if (!_FLAG_LEGAL_ATTESTATIONReady) { _FLAG_LEGAL_ATTESTATIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_LEGAL_ATTESTATION"); _FLAG_LEGAL_ATTESTATIONReady = true; } return _FLAG_LEGAL_ATTESTATIONContent; } }
        private static int _FLAG_LEGAL_ATTESTATIONContent = default;
        private static bool _FLAG_LEGAL_ATTESTATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_REASON"/>
        /// </summary>
        public static int FLAG_REASON { get { if (!_FLAG_REASONReady) { _FLAG_REASONContent = SGetField<int>(LocalBridgeClazz, "FLAG_REASON"); _FLAG_REASONReady = true; } return _FLAG_REASONContent; } }
        private static int _FLAG_REASONContent = default;
        private static bool _FLAG_REASONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_SUBFILTER"/>
        /// </summary>
        public static int FLAG_SUBFILTER { get { if (!_FLAG_SUBFILTERReady) { _FLAG_SUBFILTERContent = SGetField<int>(LocalBridgeClazz, "FLAG_SUBFILTER"); _FLAG_SUBFILTERReady = true; } return _FLAG_SUBFILTERContent; } }
        private static int _FLAG_SUBFILTERContent = default;
        private static bool _FLAG_SUBFILTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#FLAG_V"/>
        /// </summary>
        public static int FLAG_V { get { if (!_FLAG_VReady) { _FLAG_VContent = SGetField<int>(LocalBridgeClazz, "FLAG_V"); _FLAG_VReady = true; } return _FLAG_VContent; } }
        private static int _FLAG_VContent = default;
        private static bool _FLAG_VReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getDigestMethod--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setDigestMethod-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> DigestMethod
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getDigestMethod", "()Ljava/util/List;"); } set { IExecuteWithSignature("setDigestMethod", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getFilter--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setFilter-org.apache.pdfbox.cos.COSName-"/>
        /// </summary>
        public Java.Lang.String Filter
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFilter", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFilter", "(Lorg/apache/pdfbox/cos/COSName;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getLegalAttestation--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setLegalAttestation-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> LegalAttestation
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getLegalAttestation", "()Ljava/util/List;"); } set { IExecuteWithSignature("setLegalAttestation", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getMDP--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueMDP MDP
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueMDP>("getMDP", "()Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getReasons--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setReasons-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> Reasons
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getReasons", "()Ljava/util/List;"); } set { IExecuteWithSignature("setReasons", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getSeedValueCertificate--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setSeedValueCertificate-org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueCertificate SeedValueCertificate
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueCertificate>("getSeedValueCertificate", "()Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate;"); } set { IExecuteWithSignature("setSeedValueCertificate", "(Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getSubFilter--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setSubFilter-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> SubFilter
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getSubFilter", "()Ljava/util/List;"); } set { IExecuteWithSignature("setSubFilter", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getTimeStamp--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setTimeStamp-org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueTimeStamp TimeStamp
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueTimeStamp>("getTimeStamp", "()Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp;"); } set { IExecuteWithSignature("setTimeStamp", "(Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#getV--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setV-float-"/>
        /// </summary>
        public float V
        {
            get { return IExecuteWithSignature<float>("getV", "()F"); } set { IExecuteWithSignature("setV", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isAddRevInfoRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAddRevInfoRequired()
        {
            return IExecuteWithSignature<bool>("isAddRevInfoRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isDigestMethodRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDigestMethodRequired()
        {
            return IExecuteWithSignature<bool>("isDigestMethodRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isFilterRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFilterRequired()
        {
            return IExecuteWithSignature<bool>("isFilterRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isLegalAttestationRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLegalAttestationRequired()
        {
            return IExecuteWithSignature<bool>("isLegalAttestationRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isReasonRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsReasonRequired()
        {
            return IExecuteWithSignature<bool>("isReasonRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isSubFilterRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSubFilterRequired()
        {
            return IExecuteWithSignature<bool>("isSubFilterRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#isVRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsVRequired()
        {
            return IExecuteWithSignature<bool>("isVRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setAddRevInfoRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetAddRevInfoRequired(bool arg0)
        {
            IExecuteWithSignature("setAddRevInfoRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setDigestMethodRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetDigestMethodRequired(bool arg0)
        {
            IExecuteWithSignature("setDigestMethodRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setFilterRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetFilterRequired(bool arg0)
        {
            IExecuteWithSignature("setFilterRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setLegalAttestationRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLegalAttestationRequired(bool arg0)
        {
            IExecuteWithSignature("setLegalAttestationRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setMPD-org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueMDP"/></param>
        public void SetMPD(Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.PDSeedValueMDP arg0)
        {
            IExecuteWithSignature("setMPD", "(Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setReasonRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetReasonRequired(bool arg0)
        {
            IExecuteWithSignature("setReasonRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setSubFilterRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSubFilterRequired(bool arg0)
        {
            IExecuteWithSignature("setSubFilterRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.html#setVRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetVRequired(bool arg0)
        {
            IExecuteWithSignature("setVRequired", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}