/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Graphics.State
{
    #region RenderingIntent declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html"/>
    /// </summary>
    public partial class RenderingIntent : Java.Lang.Enum<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public RenderingIntent() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public RenderingIntent(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region RenderingIntent implementation
    public partial class RenderingIntent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#ABSOLUTE_COLORIMETRIC"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent ABSOLUTE_COLORIMETRIC { get { if (!_ABSOLUTE_COLORIMETRICReady) { _ABSOLUTE_COLORIMETRICContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "ABSOLUTE_COLORIMETRIC"); _ABSOLUTE_COLORIMETRICReady = true; } return _ABSOLUTE_COLORIMETRICContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent _ABSOLUTE_COLORIMETRICContent = default;
        private static bool _ABSOLUTE_COLORIMETRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#PERCEPTUAL"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent PERCEPTUAL { get { if (!_PERCEPTUALReady) { _PERCEPTUALContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "PERCEPTUAL"); _PERCEPTUALReady = true; } return _PERCEPTUALContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent _PERCEPTUALContent = default;
        private static bool _PERCEPTUALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#RELATIVE_COLORIMETRIC"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent RELATIVE_COLORIMETRIC { get { if (!_RELATIVE_COLORIMETRICReady) { _RELATIVE_COLORIMETRICContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "RELATIVE_COLORIMETRIC"); _RELATIVE_COLORIMETRICReady = true; } return _RELATIVE_COLORIMETRICContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent _RELATIVE_COLORIMETRICContent = default;
        private static bool _RELATIVE_COLORIMETRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#SATURATION"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent SATURATION { get { if (!_SATURATIONReady) { _SATURATIONContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "SATURATION"); _SATURATIONReady = true; } return _SATURATIONContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent _SATURATIONContent = default;
        private static bool _SATURATIONReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#fromString-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent FromString(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "fromString", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/graphics/state/RenderingIntent;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#valueOf-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent ValueOf(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/graphics/state/RenderingIntent;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#values--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent[] Values()
        {
            return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingIntent>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/pdmodel/graphics/state/RenderingIntent;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.html#stringValue--"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String StringValue()
        {
            return IExecuteWithSignature<Java.Lang.String>("stringValue", "()Ljava/lang/String;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}