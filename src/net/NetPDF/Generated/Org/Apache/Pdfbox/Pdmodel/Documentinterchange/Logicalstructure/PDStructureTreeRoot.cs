/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Logicalstructure
{
    #region PDStructureTreeRoot declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html"/>
    /// </summary>
    public partial class PDStructureTreeRoot : Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Logicalstructure.PDStructureNode
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDStructureTreeRoot() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDStructureTreeRoot(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDStructureTreeRoot implementation
    public partial class PDStructureTreeRoot
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDStructureTreeRoot(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getClassMap--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setClassMap-java.util.Map-"/>
        /// </summary>
        public Java.Util.Map<Java.Lang.String, object> ClassMap
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, object>>("getClassMap", "()Ljava/util/Map;"); } set { IExecuteWithSignature("setClassMap", "(Ljava/util/Map;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getIDTree--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setIDTree-org.apache.pdfbox.pdmodel.common.PDNameTreeNode-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDNameTreeNode<Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Logicalstructure.PDStructureElement> IDTree
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDNameTreeNode<Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Logicalstructure.PDStructureElement>>("getIDTree", "()Lorg/apache/pdfbox/pdmodel/common/PDNameTreeNode;"); } set { IExecuteWithSignature("setIDTree", "(Lorg/apache/pdfbox/pdmodel/common/PDNameTreeNode;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getK--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setK-org.apache.pdfbox.cos.COSBase-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase K
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getK", "()Lorg/apache/pdfbox/cos/COSBase;"); } set { IExecuteWithSignature("setK", "(Lorg/apache/pdfbox/cos/COSBase;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getParentTree--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setParentTree-org.apache.pdfbox.pdmodel.common.PDNumberTreeNode-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDNumberTreeNode ParentTree
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDNumberTreeNode>("getParentTree", "()Lorg/apache/pdfbox/pdmodel/common/PDNumberTreeNode;"); } set { IExecuteWithSignature("setParentTree", "(Lorg/apache/pdfbox/pdmodel/common/PDNumberTreeNode;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getParentTreeNextKey--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setParentTreeNextKey-int-"/>
        /// </summary>
        public int ParentTreeNextKey
        {
            get { return IExecuteWithSignature<int>("getParentTreeNextKey", "()I"); } set { IExecuteWithSignature("setParentTreeNextKey", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#getRoleMap--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.html#setRoleMap-java.util.Map-"/>
        /// </summary>
        public Java.Util.Map<Java.Lang.String, object> RoleMap
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, object>>("getRoleMap", "()Ljava/util/Map;"); } set { IExecuteWithSignature("setRoleMap", "(Ljava/util/Map;)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}