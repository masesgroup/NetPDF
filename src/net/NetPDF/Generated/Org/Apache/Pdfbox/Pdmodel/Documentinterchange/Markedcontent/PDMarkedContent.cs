/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent
{
    #region PDMarkedContent declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html"/>
    /// </summary>
    public partial class PDMarkedContent : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PDMarkedContent>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDMarkedContent() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDMarkedContent(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDMarkedContent(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDMarkedContent implementation
    public partial class PDMarkedContent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDMarkedContent(Org.Apache.Pdfbox.Cos.COSName arg0, Org.Apache.Pdfbox.Cos.COSDictionary arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#create-org.apache.pdfbox.cos.COSName-org.apache.pdfbox.cos.COSDictionary-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDMarkedContent"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDMarkedContent Create(Org.Apache.Pdfbox.Cos.COSName arg0, Org.Apache.Pdfbox.Cos.COSDictionary arg1)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDMarkedContent>(LocalBridgeClazz, "create", "(Lorg/apache/pdfbox/cos/COSName;Lorg/apache/pdfbox/cos/COSDictionary;)Lorg/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent;", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getActualText--"/> 
        /// </summary>
        public Java.Lang.String ActualText
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getActualText", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getAlternateDescription--"/> 
        /// </summary>
        public Java.Lang.String AlternateDescription
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getAlternateDescription", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getContents--"/> 
        /// </summary>
        public Java.Util.List<object> Contents
        {
            get { return IExecuteWithSignature<Java.Util.List<object>>("getContents", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getExpandedForm--"/> 
        /// </summary>
        public Java.Lang.String ExpandedForm
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getExpandedForm", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getLanguage--"/> 
        /// </summary>
        public Java.Lang.String Language
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getLanguage", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getMCID--"/> 
        /// </summary>
        public int MCID
        {
            get { return IExecuteWithSignature<int>("getMCID", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getProperties--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSDictionary Properties
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSDictionary>("getProperties", "()Lorg/apache/pdfbox/cos/COSDictionary;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#getTag--"/> 
        /// </summary>
        public Java.Lang.String Tag
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getTag", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#addMarkedContent-org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDMarkedContent"/></param>
        public void AddMarkedContent(Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDMarkedContent arg0)
        {
            IExecuteWithSignature("addMarkedContent", "(Lorg/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#addText-org.apache.pdfbox.text.TextPosition-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Text.TextPosition"/></param>
        public void AddText(Org.Apache.Pdfbox.Text.TextPosition arg0)
        {
            IExecuteWithSignature("addText", "(Lorg/apache/pdfbox/text/TextPosition;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.html#addXObject-org.apache.pdfbox.pdmodel.graphics.PDXObject-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.PDXObject"/></param>
        public void AddXObject(Org.Apache.Pdfbox.Pdmodel.Graphics.PDXObject arg0)
        {
            IExecuteWithSignature("addXObject", "(Lorg/apache/pdfbox/pdmodel/graphics/PDXObject;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}