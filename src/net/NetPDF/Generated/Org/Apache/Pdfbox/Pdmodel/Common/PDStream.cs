/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Common
{
    #region PDStream declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html"/>
    /// </summary>
    public partial class PDStream : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.common.PDStream";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDStream() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDStream(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDStream implementation
    public partial class PDStream
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.cos.COSDocument)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDocument"/></param>
        public PDStream(Org.Apache.Pdfbox.Cos.COSDocument arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.cos.COSStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSStream"/></param>
        public PDStream(Org.Apache.Pdfbox.Cos.COSStream arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <param name="arg1"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public PDStream(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0, Java.Io.InputStream arg1, Org.Apache.Pdfbox.Cos.COSArray arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <param name="arg1"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public PDStream(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0, Java.Io.InputStream arg1, Org.Apache.Pdfbox.Cos.COSName arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <param name="arg1"><see cref="Java.Io.InputStream"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public PDStream(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0, Java.Io.InputStream arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#org.apache.pdfbox.pdmodel.common.PDStream(org.apache.pdfbox.pdmodel.PDDocument)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public PDStream(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getDecodedStreamLength--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setDecodedStreamLength-int-"/>
        /// </summary>
        public int DecodedStreamLength
        {
            get { return IExecuteWithSignature<int>("getDecodedStreamLength", "()I"); } set { IExecuteWithSignature("setDecodedStreamLength", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getDecodeParms--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setDecodeParms-java.util.List-"/>
        /// </summary>
        public Java.Util.List<object> DecodeParms
        {
            get { return IExecuteWithSignature<Java.Util.List<object>>("getDecodeParms", "()Ljava/util/List;"); } set { IExecuteWithSignature("setDecodeParms", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getFile--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setFile-org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification File
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification>("getFile", "()Lorg/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification;"); } set { IExecuteWithSignature("setFile", "(Lorg/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getFileDecodeParams--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setFileDecodeParams-java.util.List-"/>
        /// </summary>
        public Java.Util.List<object> FileDecodeParams
        {
            get { return IExecuteWithSignature<Java.Util.List<object>>("getFileDecodeParams", "()Ljava/util/List;"); } set { IExecuteWithSignature("setFileDecodeParams", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getFileFilters--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setFileFilters-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> FileFilters
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getFileFilters", "()Ljava/util/List;"); } set { IExecuteWithSignature("setFileFilters", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getFilters--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setFilters-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Cos.COSName> Filters
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Cos.COSName>>("getFilters", "()Ljava/util/List;"); } set { IExecuteWithSignature("setFilters", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getLength--"/> 
        /// </summary>
        public int Length
        {
            get { return IExecuteWithSignature<int>("getLength", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#getMetadata--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#setMetadata-org.apache.pdfbox.pdmodel.common.PDMetadata-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDMetadata Metadata
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDMetadata>("getMetadata", "()Lorg/apache/pdfbox/pdmodel/common/PDMetadata;"); } set { IExecuteWithSignature("setMetadata", "(Lorg/apache/pdfbox/pdmodel/common/PDMetadata;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#toByteArray--"/>
        /// </summary>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] ToByteArray()
        {
            return IExecuteWithSignatureArray<byte>("toByteArray", "()[B");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#createInputStream-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.InputStream CreateInputStream(Java.Util.List<Java.Lang.String> arg0)
        {
            return IExecuteWithSignature<Java.Io.InputStream>("createInputStream", "(Ljava/util/List;)Ljava/io/InputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#createOutputStream--"/>
        /// </summary>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.OutputStream CreateOutputStream()
        {
            return IExecuteWithSignature<Java.Io.OutputStream>("createOutputStream", "()Ljava/io/OutputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#createOutputStream-org.apache.pdfbox.cos.COSName-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.OutputStream CreateOutputStream(Org.Apache.Pdfbox.Cos.COSName arg0)
        {
            return IExecuteWithSignature<Java.Io.OutputStream>("createOutputStream", "(Lorg/apache/pdfbox/cos/COSName;)Ljava/io/OutputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#createInputStream--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSInputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Cos.COSInputStream CreateInputStream()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSInputStream>("createInputStream", "()Lorg/apache/pdfbox/cos/COSInputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/common/PDStream.html#createInputStream-org.apache.pdfbox.filter.DecodeOptions-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Filter.DecodeOptions"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSInputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Cos.COSInputStream CreateInputStream(Org.Apache.Pdfbox.Filter.DecodeOptions arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSInputStream>("createInputStream", "(Lorg/apache/pdfbox/filter/DecodeOptions;)Lorg/apache/pdfbox/cos/COSInputStream;", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}