/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Form
{
    #region PDAcroForm declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html"/>
    /// </summary>
    public partial class PDAcroForm : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDAcroForm() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDAcroForm(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDAcroForm implementation
    public partial class PDAcroForm
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDAcroForm(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0, Org.Apache.Pdfbox.Cos.COSDictionary arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm(org.apache.pdfbox.pdmodel.PDDocument)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public PDAcroForm(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getCalcOrder--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setCalcOrder-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField> CalcOrder
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField>>("getCalcOrder", "()Ljava/util/List;"); } set { IExecuteWithSignature("setCalcOrder", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getDefaultAppearance--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setDefaultAppearance-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String DefaultAppearance
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDefaultAppearance", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDefaultAppearance", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getDefaultResources--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setDefaultResources-org.apache.pdfbox.pdmodel.PDResources-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.PDResources DefaultResources
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDResources>("getDefaultResources", "()Lorg/apache/pdfbox/pdmodel/PDResources;"); } set { IExecuteWithSignature("setDefaultResources", "(Lorg/apache/pdfbox/pdmodel/PDResources;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getFieldIterator--"/> 
        /// </summary>
        public Java.Util.Iterator<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField> FieldIterator
        {
            get { return IExecuteWithSignature<Java.Util.Iterator<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField>>("getFieldIterator", "()Ljava/util/Iterator;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getFields--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setFields-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField> Fields
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField>>("getFields", "()Ljava/util/List;"); } set { IExecuteWithSignature("setFields", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getFieldTree--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDFieldTree FieldTree
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDFieldTree>("getFieldTree", "()Lorg/apache/pdfbox/pdmodel/interactive/form/PDFieldTree;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getNeedAppearances--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setNeedAppearances-java.lang.Boolean-"/>
        /// </summary>
        public bool NeedAppearances
        {
            get { return IExecuteWithSignature<bool>("getNeedAppearances", "()Z"); } set { IExecuteWithSignature("setNeedAppearances", "(Ljava/lang/Boolean;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getQ--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setQ-int-"/>
        /// </summary>
        public int Q
        {
            get { return IExecuteWithSignature<int>("getQ", "()I"); } set { IExecuteWithSignature("setQ", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getScriptingHandler--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setScriptingHandler-org.apache.pdfbox.pdmodel.interactive.form.ScriptingHandler-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Form.ScriptingHandler ScriptingHandler
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.ScriptingHandler>("getScriptingHandler", "()Lorg/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler;"); } set { IExecuteWithSignature("setScriptingHandler", "(Lorg/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getXFA--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setXFA-org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDXFAResource XFA
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDXFAResource>("getXFA", "()Lorg/apache/pdfbox/pdmodel/interactive/form/PDXFAResource;"); } set { IExecuteWithSignature("setXFA", "(Lorg/apache/pdfbox/pdmodel/interactive/form/PDXFAResource;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#hasXFA--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasXFA()
        {
            return IExecuteWithSignature<bool>("hasXFA", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#isAppendOnly--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAppendOnly()
        {
            return IExecuteWithSignature<bool>("isAppendOnly", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#isCachingFields--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsCachingFields()
        {
            return IExecuteWithSignature<bool>("isCachingFields", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#isSignaturesExist--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSignaturesExist()
        {
            return IExecuteWithSignature<bool>("isSignaturesExist", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#xfaIsDynamic--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool XfaIsDynamic()
        {
            return IExecuteWithSignature<bool>("xfaIsDynamic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#exportFDF--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Fdf.FDFDocument"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Pdmodel.Fdf.FDFDocument ExportFDF()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFDocument>("exportFDF", "()Lorg/apache/pdfbox/pdmodel/fdf/FDFDocument;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#getField-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField GetField(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField>("getField", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/interactive/form/PDField;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#flatten--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Flatten()
        {
            IExecuteWithSignature("flatten", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#flatten-java.util.List-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Flatten(Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField> arg0, bool arg1)
        {
            IExecuteWithSignature("flatten", "(Ljava/util/List;Z)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#importFDF-org.apache.pdfbox.pdmodel.fdf.FDFDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Fdf.FDFDocument"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void ImportFDF(Org.Apache.Pdfbox.Pdmodel.Fdf.FDFDocument arg0)
        {
            IExecuteWithSignature("importFDF", "(Lorg/apache/pdfbox/pdmodel/fdf/FDFDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#refreshAppearances--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void RefreshAppearances()
        {
            IExecuteWithSignature("refreshAppearances", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#refreshAppearances-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void RefreshAppearances(Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Interactive.Form.PDField> arg0)
        {
            IExecuteWithSignature("refreshAppearances", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setAppendOnly-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetAppendOnly(bool arg0)
        {
            IExecuteWithSignature("setAppendOnly", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setCacheFields-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetCacheFields(bool arg0)
        {
            IExecuteWithSignature("setCacheFields", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.html#setSignaturesExist-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSignaturesExist(bool arg0)
        {
            IExecuteWithSignature("setSignaturesExist", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}