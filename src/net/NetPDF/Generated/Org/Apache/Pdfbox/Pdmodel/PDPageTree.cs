/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel
{
    #region PDPageTree declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html"/>
    /// </summary>
    public partial class PDPageTree : Java.Lang.Iterable<Org.Apache.Pdfbox.Pdmodel.PDPage>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.PDPageTree";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDPageTree() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDPageTree(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDPageTree implementation
    public partial class PDPageTree : Org.Apache.Pdfbox.Pdmodel.Common.ICOSObjectable, Java.Lang.IIterable<Org.Apache.Pdfbox.Pdmodel.PDPage>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#org.apache.pdfbox.pdmodel.PDPageTree(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDPageTree(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Pdfbox.Pdmodel.PDPageTree"/> to <see cref="Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable"/>
        /// </summary>
        public static implicit operator Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable(Org.Apache.Pdfbox.Pdmodel.PDPageTree t) => t.Cast<Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#getInheritableAttribute-org.apache.pdfbox.cos.COSDictionary-org.apache.pdfbox.cos.COSName-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></returns>
        public static Org.Apache.Pdfbox.Cos.COSBase GetInheritableAttribute(Org.Apache.Pdfbox.Cos.COSDictionary arg0, Org.Apache.Pdfbox.Cos.COSName arg1)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>(LocalBridgeClazz, "getInheritableAttribute", "(Lorg/apache/pdfbox/cos/COSDictionary;Lorg/apache/pdfbox/cos/COSName;)Lorg/apache/pdfbox/cos/COSBase;", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#getCount--"/> 
        /// </summary>
        public int Count
        {
            get { return IExecuteWithSignature<int>("getCount", "()I"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#indexOf-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        /// <returns><see cref="int"/></returns>
        public int IndexOf(Org.Apache.Pdfbox.Pdmodel.PDPage arg0)
        {
            return IExecuteWithSignature<int>("indexOf", "(Lorg/apache/pdfbox/pdmodel/PDPage;)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#iterator--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Pdfbox.Pdmodel.PDPage> Iterator()
        {
            return IExecuteWithSignature<Java.Util.Iterator<Org.Apache.Pdfbox.Pdmodel.PDPage>>("iterator", "()Ljava/util/Iterator;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#get-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.PDPage Get(int arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDPage>("get", "(I)Lorg/apache/pdfbox/pdmodel/PDPage;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#add-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        public void Add(Org.Apache.Pdfbox.Pdmodel.PDPage arg0)
        {
            IExecuteWithSignature("add", "(Lorg/apache/pdfbox/pdmodel/PDPage;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#insertAfter-org.apache.pdfbox.pdmodel.PDPage-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        public void InsertAfter(Org.Apache.Pdfbox.Pdmodel.PDPage arg0, Org.Apache.Pdfbox.Pdmodel.PDPage arg1)
        {
            IExecuteWithSignature("insertAfter", "(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDPage;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#insertBefore-org.apache.pdfbox.pdmodel.PDPage-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        public void InsertBefore(Org.Apache.Pdfbox.Pdmodel.PDPage arg0, Org.Apache.Pdfbox.Pdmodel.PDPage arg1)
        {
            IExecuteWithSignature("insertBefore", "(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDPage;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#remove-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void Remove(int arg0)
        {
            IExecuteWithSignature("remove", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/PDPageTree.html#remove-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDPage"/></param>
        public void Remove(Org.Apache.Pdfbox.Pdmodel.PDPage arg0)
        {
            IExecuteWithSignature("remove", "(Lorg/apache/pdfbox/pdmodel/PDPage;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}