/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation
{
    #region PDAnnotation declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html"/>
    /// </summary>
    public partial class PDAnnotation : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("PDAnnotation class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDAnnotation() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("PDAnnotation class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDAnnotation(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDAnnotation implementation
    public partial class PDAnnotation
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDAnnotation(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#createAnnotation-org.apache.pdfbox.cos.COSBase-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation CreateAnnotation(Org.Apache.Pdfbox.Cos.COSBase arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAnnotation>(LocalBridgeClazz, "createAnnotation", "(Lorg/apache/pdfbox/cos/COSBase;)Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getAnnotationFlags--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setAnnotationFlags-int-"/>
        /// </summary>
        public int AnnotationFlags
        {
            get { return IExecuteWithSignature<int>("getAnnotationFlags", "()I"); } set { IExecuteWithSignature("setAnnotationFlags", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getAnnotationName--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setAnnotationName-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String AnnotationName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getAnnotationName", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setAnnotationName", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getAppearance--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setAppearance-org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceDictionary Appearance
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceDictionary>("getAppearance", "()Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary;"); } set { IExecuteWithSignature("setAppearance", "(Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getAppearanceState--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setAppearanceState-java.lang.String-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSName AppearanceState
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSName>("getAppearanceState", "()Lorg/apache/pdfbox/cos/COSName;"); } set { IExecuteWithSignature("setAppearanceState", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getBorder--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setBorder-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSArray Border
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSArray>("getBorder", "()Lorg/apache/pdfbox/cos/COSArray;"); } set { IExecuteWithSignature("setBorder", "(Lorg/apache/pdfbox/cos/COSArray;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getColor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setColor-org.apache.pdfbox.pdmodel.graphics.color.PDColor-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDColor Color
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDColor>("getColor", "()Lorg/apache/pdfbox/pdmodel/graphics/color/PDColor;"); } set { IExecuteWithSignature("setColor", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDColor;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getContents--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setContents-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Contents
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getContents", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setContents", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getModifiedDate--"/> 
        /// </summary>
        public Java.Lang.String ModifiedDate
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getModifiedDate", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getNormalAppearanceStream--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceStream NormalAppearanceStream
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDAppearanceStream>("getNormalAppearanceStream", "()Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getOptionalContent--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setOptionalContent-org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDPropertyList OptionalContent
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDPropertyList>("getOptionalContent", "()Lorg/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList;"); } set { IExecuteWithSignature("setOptionalContent", "(Lorg/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getPage--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setPage-org.apache.pdfbox.pdmodel.PDPage-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.PDPage Page
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.PDPage>("getPage", "()Lorg/apache/pdfbox/pdmodel/PDPage;"); } set { IExecuteWithSignature("setPage", "(Lorg/apache/pdfbox/pdmodel/PDPage;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getRectangle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setRectangle-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle Rectangle
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getRectangle", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setRectangle", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getStructParent--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setStructParent-int-"/>
        /// </summary>
        public int StructParent
        {
            get { return IExecuteWithSignature<int>("getStructParent", "()I"); } set { IExecuteWithSignature("setStructParent", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#getSubtype--"/> 
        /// </summary>
        public Java.Lang.String Subtype
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getSubtype", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isHidden--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsHidden()
        {
            return IExecuteWithSignature<bool>("isHidden", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isInvisible--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInvisible()
        {
            return IExecuteWithSignature<bool>("isInvisible", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isLocked--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLocked()
        {
            return IExecuteWithSignature<bool>("isLocked", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isLockedContents--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLockedContents()
        {
            return IExecuteWithSignature<bool>("isLockedContents", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isNoRotate--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoRotate()
        {
            return IExecuteWithSignature<bool>("isNoRotate", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isNoView--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoView()
        {
            return IExecuteWithSignature<bool>("isNoView", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isNoZoom--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoZoom()
        {
            return IExecuteWithSignature<bool>("isNoZoom", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isPrinted--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPrinted()
        {
            return IExecuteWithSignature<bool>("isPrinted", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isReadOnly--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsReadOnly()
        {
            return IExecuteWithSignature<bool>("isReadOnly", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#isToggleNoView--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsToggleNoView()
        {
            return IExecuteWithSignature<bool>("isToggleNoView", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#constructAppearances--"/>
        /// </summary>
        public void ConstructAppearances()
        {
            IExecuteWithSignature("constructAppearances", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#constructAppearances-org.apache.pdfbox.pdmodel.PDDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.PDDocument"/></param>
        public void ConstructAppearances(Org.Apache.Pdfbox.Pdmodel.PDDocument arg0)
        {
            IExecuteWithSignature("constructAppearances", "(Lorg/apache/pdfbox/pdmodel/PDDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setHidden-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetHidden(bool arg0)
        {
            IExecuteWithSignature("setHidden", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setInvisible-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetInvisible(bool arg0)
        {
            IExecuteWithSignature("setInvisible", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setLocked-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLocked(bool arg0)
        {
            IExecuteWithSignature("setLocked", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setLockedContents-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLockedContents(bool arg0)
        {
            IExecuteWithSignature("setLockedContents", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setModifiedDate-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetModifiedDate(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setModifiedDate", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setModifiedDate-java.util.Calendar-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Calendar"/></param>
        public void SetModifiedDate(Java.Util.Calendar arg0)
        {
            IExecuteWithSignature("setModifiedDate", "(Ljava/util/Calendar;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setNoRotate-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoRotate(bool arg0)
        {
            IExecuteWithSignature("setNoRotate", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setNoView-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoView(bool arg0)
        {
            IExecuteWithSignature("setNoView", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setNoZoom-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoZoom(bool arg0)
        {
            IExecuteWithSignature("setNoZoom", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setPrinted-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetPrinted(bool arg0)
        {
            IExecuteWithSignature("setPrinted", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setReadOnly-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetReadOnly(bool arg0)
        {
            IExecuteWithSignature("setReadOnly", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.html#setToggleNoView-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetToggleNoView(bool arg0)
        {
            IExecuteWithSignature("setToggleNoView", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}