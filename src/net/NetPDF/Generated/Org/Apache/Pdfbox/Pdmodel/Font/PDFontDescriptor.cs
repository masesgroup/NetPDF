/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Font
{
    #region PDFontDescriptor declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html"/>
    /// </summary>
    public partial class PDFontDescriptor : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.font.PDFontDescriptor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDFontDescriptor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDFontDescriptor(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDFontDescriptor implementation
    public partial class PDFontDescriptor
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#org.apache.pdfbox.pdmodel.font.PDFontDescriptor(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDFontDescriptor(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getAscent--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setAscent-float-"/>
        /// </summary>
        public float Ascent
        {
            get { return IExecuteWithSignature<float>("getAscent", "()F"); } set { IExecuteWithSignature("setAscent", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getAverageWidth--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setAverageWidth-float-"/>
        /// </summary>
        public float AverageWidth
        {
            get { return IExecuteWithSignature<float>("getAverageWidth", "()F"); } set { IExecuteWithSignature("setAverageWidth", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getCapHeight--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setCapHeight-float-"/>
        /// </summary>
        public float CapHeight
        {
            get { return IExecuteWithSignature<float>("getCapHeight", "()F"); } set { IExecuteWithSignature("setCapHeight", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getCharSet--"/> 
        /// </summary>
        public Java.Lang.String CharSet
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getCharSet", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getCIDSet--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setCIDSet-org.apache.pdfbox.pdmodel.common.PDStream-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDStream CIDSet
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDStream>("getCIDSet", "()Lorg/apache/pdfbox/pdmodel/common/PDStream;"); } set { IExecuteWithSignature("setCIDSet", "(Lorg/apache/pdfbox/pdmodel/common/PDStream;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getDescent--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setDescent-float-"/>
        /// </summary>
        public float Descent
        {
            get { return IExecuteWithSignature<float>("getDescent", "()F"); } set { IExecuteWithSignature("setDescent", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFlags--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFlags-int-"/>
        /// </summary>
        public int Flags
        {
            get { return IExecuteWithSignature<int>("getFlags", "()I"); } set { IExecuteWithSignature("setFlags", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontBoundingBox--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontBoundingBox-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle FontBoundingBox
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getFontBoundingBox", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setFontBoundingBox", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontFamily--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontFamily-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String FontFamily
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFontFamily", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFontFamily", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontFile--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontFile-org.apache.pdfbox.pdmodel.common.PDStream-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDStream FontFile
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDStream>("getFontFile", "()Lorg/apache/pdfbox/pdmodel/common/PDStream;"); } set { IExecuteWithSignature("setFontFile", "(Lorg/apache/pdfbox/pdmodel/common/PDStream;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontFile2--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontFile2-org.apache.pdfbox.pdmodel.common.PDStream-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDStream FontFile2
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDStream>("getFontFile2", "()Lorg/apache/pdfbox/pdmodel/common/PDStream;"); } set { IExecuteWithSignature("setFontFile2", "(Lorg/apache/pdfbox/pdmodel/common/PDStream;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontFile3--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontFile3-org.apache.pdfbox.pdmodel.common.PDStream-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDStream FontFile3
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDStream>("getFontFile3", "()Lorg/apache/pdfbox/pdmodel/common/PDStream;"); } set { IExecuteWithSignature("setFontFile3", "(Lorg/apache/pdfbox/pdmodel/common/PDStream;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontName--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontName-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String FontName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFontName", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFontName", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontStretch--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontStretch-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String FontStretch
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFontStretch", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFontStretch", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getFontWeight--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFontWeight-float-"/>
        /// </summary>
        public float FontWeight
        {
            get { return IExecuteWithSignature<float>("getFontWeight", "()F"); } set { IExecuteWithSignature("setFontWeight", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getItalicAngle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setItalicAngle-float-"/>
        /// </summary>
        public float ItalicAngle
        {
            get { return IExecuteWithSignature<float>("getItalicAngle", "()F"); } set { IExecuteWithSignature("setItalicAngle", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getLeading--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setLeading-float-"/>
        /// </summary>
        public float Leading
        {
            get { return IExecuteWithSignature<float>("getLeading", "()F"); } set { IExecuteWithSignature("setLeading", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getMaxWidth--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setMaxWidth-float-"/>
        /// </summary>
        public float MaxWidth
        {
            get { return IExecuteWithSignature<float>("getMaxWidth", "()F"); } set { IExecuteWithSignature("setMaxWidth", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getMissingWidth--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setMissingWidth-float-"/>
        /// </summary>
        public float MissingWidth
        {
            get { return IExecuteWithSignature<float>("getMissingWidth", "()F"); } set { IExecuteWithSignature("setMissingWidth", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getPanose--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Font.PDPanose Panose
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Font.PDPanose>("getPanose", "()Lorg/apache/pdfbox/pdmodel/font/PDPanose;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getStemH--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setStemH-float-"/>
        /// </summary>
        public float StemH
        {
            get { return IExecuteWithSignature<float>("getStemH", "()F"); } set { IExecuteWithSignature("setStemH", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getStemV--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setStemV-float-"/>
        /// </summary>
        public float StemV
        {
            get { return IExecuteWithSignature<float>("getStemV", "()F"); } set { IExecuteWithSignature("setStemV", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#getXHeight--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setXHeight-float-"/>
        /// </summary>
        public float XHeight
        {
            get { return IExecuteWithSignature<float>("getXHeight", "()F"); } set { IExecuteWithSignature("setXHeight", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#hasMissingWidth--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasMissingWidth()
        {
            return IExecuteWithSignature<bool>("hasMissingWidth", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#hasWidths--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasWidths()
        {
            return IExecuteWithSignature<bool>("hasWidths", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isAllCap--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAllCap()
        {
            return IExecuteWithSignature<bool>("isAllCap", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isFixedPitch--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFixedPitch()
        {
            return IExecuteWithSignature<bool>("isFixedPitch", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isForceBold--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsForceBold()
        {
            return IExecuteWithSignature<bool>("isForceBold", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isItalic--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsItalic()
        {
            return IExecuteWithSignature<bool>("isItalic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isNonSymbolic--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNonSymbolic()
        {
            return IExecuteWithSignature<bool>("isNonSymbolic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isScript--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsScript()
        {
            return IExecuteWithSignature<bool>("isScript", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isSerif--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSerif()
        {
            return IExecuteWithSignature<bool>("isSerif", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isSmallCap--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSmallCap()
        {
            return IExecuteWithSignature<bool>("isSmallCap", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#isSymbolic--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSymbolic()
        {
            return IExecuteWithSignature<bool>("isSymbolic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setAllCap-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetAllCap(bool arg0)
        {
            IExecuteWithSignature("setAllCap", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setCharacterSet-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetCharacterSet(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setCharacterSet", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setFixedPitch-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetFixedPitch(bool arg0)
        {
            IExecuteWithSignature("setFixedPitch", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setForceBold-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetForceBold(bool arg0)
        {
            IExecuteWithSignature("setForceBold", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setItalic-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetItalic(bool arg0)
        {
            IExecuteWithSignature("setItalic", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setNonSymbolic-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNonSymbolic(bool arg0)
        {
            IExecuteWithSignature("setNonSymbolic", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setScript-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetScript(bool arg0)
        {
            IExecuteWithSignature("setScript", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setSerif-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSerif(bool arg0)
        {
            IExecuteWithSignature("setSerif", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setSmallCap-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSmallCap(bool arg0)
        {
            IExecuteWithSignature("setSmallCap", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.html#setSymbolic-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSymbolic(bool arg0)
        {
            IExecuteWithSignature("setSymbolic", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}