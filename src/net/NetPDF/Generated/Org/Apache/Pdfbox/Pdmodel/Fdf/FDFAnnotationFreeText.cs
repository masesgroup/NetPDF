/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Fdf
{
    #region FDFAnnotationFreeText declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html"/>
    /// </summary>
    public partial class FDFAnnotationFreeText : Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public FDFAnnotationFreeText() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public FDFAnnotationFreeText(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region FDFAnnotationFreeText implementation
    public partial class FDFAnnotationFreeText
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public FDFAnnotationFreeText(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText(org.w3c.dom.Element)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.W3c.Dom.Element"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public FDFAnnotationFreeText(Org.W3c.Dom.Element arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#SUBTYPE"/>
        /// </summary>
        public static Java.Lang.String SUBTYPE { get { if (!_SUBTYPEReady) { _SUBTYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBTYPE"); _SUBTYPEReady = true; } return _SUBTYPEContent; } }
        private static Java.Lang.String _SUBTYPEContent = default;
        private static bool _SUBTYPEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getCallout--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setCallout-float[]-"/>
        /// </summary>
        public float[] Callout
        {
            get { return IExecuteWithSignatureArray<float>("getCallout", "()[F"); } set { IExecuteWithSignature("setCallout", "([F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getDefaultAppearance--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setDefaultAppearance-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String DefaultAppearance
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDefaultAppearance", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDefaultAppearance", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getDefaultStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setDefaultStyle-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String DefaultStyle
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDefaultStyle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDefaultStyle", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getFringe--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setFringe-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle Fringe
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getFringe", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setFringe", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getJustification--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setJustification-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Justification
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getJustification", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setJustification", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getLineEndingStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setLineEndingStyle-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String LineEndingStyle
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getLineEndingStyle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setLineEndingStyle", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#getRotation--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.html#setRotation-int-"/>
        /// </summary>
        public Java.Lang.String Rotation
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getRotation", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setRotation", "(I)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}