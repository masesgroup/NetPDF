/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature
{
    #region PDSeedValueCertificate declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html"/>
    /// </summary>
    public partial class PDSeedValueCertificate : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDSeedValueCertificate() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDSeedValueCertificate(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDSeedValueCertificate(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDSeedValueCertificate implementation
    public partial class PDSeedValueCertificate
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDSeedValueCertificate(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_ISSUER"/>
        /// </summary>
        public static int FLAG_ISSUER { get { if (!_FLAG_ISSUERReady) { _FLAG_ISSUERContent = SGetField<int>(LocalBridgeClazz, "FLAG_ISSUER"); _FLAG_ISSUERReady = true; } return _FLAG_ISSUERContent; } }
        private static int _FLAG_ISSUERContent = default;
        private static bool _FLAG_ISSUERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_KEY_USAGE"/>
        /// </summary>
        public static int FLAG_KEY_USAGE { get { if (!_FLAG_KEY_USAGEReady) { _FLAG_KEY_USAGEContent = SGetField<int>(LocalBridgeClazz, "FLAG_KEY_USAGE"); _FLAG_KEY_USAGEReady = true; } return _FLAG_KEY_USAGEContent; } }
        private static int _FLAG_KEY_USAGEContent = default;
        private static bool _FLAG_KEY_USAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_OID"/>
        /// </summary>
        public static int FLAG_OID { get { if (!_FLAG_OIDReady) { _FLAG_OIDContent = SGetField<int>(LocalBridgeClazz, "FLAG_OID"); _FLAG_OIDReady = true; } return _FLAG_OIDContent; } }
        private static int _FLAG_OIDContent = default;
        private static bool _FLAG_OIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_SUBJECT"/>
        /// </summary>
        public static int FLAG_SUBJECT { get { if (!_FLAG_SUBJECTReady) { _FLAG_SUBJECTContent = SGetField<int>(LocalBridgeClazz, "FLAG_SUBJECT"); _FLAG_SUBJECTReady = true; } return _FLAG_SUBJECTContent; } }
        private static int _FLAG_SUBJECTContent = default;
        private static bool _FLAG_SUBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_SUBJECT_DN"/>
        /// </summary>
        public static int FLAG_SUBJECT_DN { get { if (!_FLAG_SUBJECT_DNReady) { _FLAG_SUBJECT_DNContent = SGetField<int>(LocalBridgeClazz, "FLAG_SUBJECT_DN"); _FLAG_SUBJECT_DNReady = true; } return _FLAG_SUBJECT_DNContent; } }
        private static int _FLAG_SUBJECT_DNContent = default;
        private static bool _FLAG_SUBJECT_DNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#FLAG_URL"/>
        /// </summary>
        public static int FLAG_URL { get { if (!_FLAG_URLReady) { _FLAG_URLContent = SGetField<int>(LocalBridgeClazz, "FLAG_URL"); _FLAG_URLReady = true; } return _FLAG_URLContent; } }
        private static int _FLAG_URLContent = default;
        private static bool _FLAG_URLReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getIssuer--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setIssuer-java.util.List-"/>
        /// </summary>
        public Java.Util.List<byte[]> Issuer
        {
            get { return IExecuteWithSignature<Java.Util.List<byte[]>>("getIssuer", "()Ljava/util/List;"); } set { IExecuteWithSignature("setIssuer", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getKeyUsage--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setKeyUsage-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Lang.String> KeyUsage
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getKeyUsage", "()Ljava/util/List;"); } set { IExecuteWithSignature("setKeyUsage", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getOID--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setOID-java.util.List-"/>
        /// </summary>
        public Java.Util.List<byte[]> OID
        {
            get { return IExecuteWithSignature<Java.Util.List<byte[]>>("getOID", "()Ljava/util/List;"); } set { IExecuteWithSignature("setOID", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getSubject--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setSubject-java.util.List-"/>
        /// </summary>
        public Java.Util.List<byte[]> Subject
        {
            get { return IExecuteWithSignature<Java.Util.List<byte[]>>("getSubject", "()Ljava/util/List;"); } set { IExecuteWithSignature("setSubject", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getSubjectDN--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setSubjectDN-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Java.Util.Map<Java.Lang.String, Java.Lang.String>> SubjectDN
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Util.Map<Java.Lang.String, Java.Lang.String>>>("getSubjectDN", "()Ljava/util/List;"); } set { IExecuteWithSignature("setSubjectDN", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getURL--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setURL-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String URL
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getURL", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setURL", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#getURLType--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setURLType-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String URLType
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getURLType", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setURLType", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isIssuerRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsIssuerRequired()
        {
            return IExecuteWithSignature<bool>("isIssuerRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isKeyUsageRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsKeyUsageRequired()
        {
            return IExecuteWithSignature<bool>("isKeyUsageRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isOIDRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsOIDRequired()
        {
            return IExecuteWithSignature<bool>("isOIDRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isSubjectDNRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSubjectDNRequired()
        {
            return IExecuteWithSignature<bool>("isSubjectDNRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isSubjectRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSubjectRequired()
        {
            return IExecuteWithSignature<bool>("isSubjectRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#isURLRequired--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsURLRequired()
        {
            return IExecuteWithSignature<bool>("isURLRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#addIssuer-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void AddIssuer(byte[] arg0)
        {
            IExecuteWithSignature("addIssuer", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#addKeyUsage-char-char-char-char-char-char-char-char-char-"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <param name="arg2"><see cref="char"/></param>
        /// <param name="arg3"><see cref="char"/></param>
        /// <param name="arg4"><see cref="char"/></param>
        /// <param name="arg5"><see cref="char"/></param>
        /// <param name="arg6"><see cref="char"/></param>
        /// <param name="arg7"><see cref="char"/></param>
        /// <param name="arg8"><see cref="char"/></param>
        public void AddKeyUsage(char arg0, char arg1, char arg2, char arg3, char arg4, char arg5, char arg6, char arg7, char arg8)
        {
            IExecuteWithSignature("addKeyUsage", "(CCCCCCCCC)V", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#addKeyUsage-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void AddKeyUsage(Java.Lang.String arg0)
        {
            IExecuteWithSignature("addKeyUsage", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#addOID-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void AddOID(byte[] arg0)
        {
            IExecuteWithSignature("addOID", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#addSubject-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void AddSubject(byte[] arg0)
        {
            IExecuteWithSignature("addSubject", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#removeIssuer-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void RemoveIssuer(byte[] arg0)
        {
            IExecuteWithSignature("removeIssuer", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#removeKeyUsage-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void RemoveKeyUsage(Java.Lang.String arg0)
        {
            IExecuteWithSignature("removeKeyUsage", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#removeOID-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void RemoveOID(byte[] arg0)
        {
            IExecuteWithSignature("removeOID", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#removeSubject-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void RemoveSubject(byte[] arg0)
        {
            IExecuteWithSignature("removeSubject", "([B)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setIssuerRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetIssuerRequired(bool arg0)
        {
            IExecuteWithSignature("setIssuerRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setKeyUsageRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetKeyUsageRequired(bool arg0)
        {
            IExecuteWithSignature("setKeyUsageRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setOIDRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetOIDRequired(bool arg0)
        {
            IExecuteWithSignature("setOIDRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setSubjectDNRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSubjectDNRequired(bool arg0)
        {
            IExecuteWithSignature("setSubjectDNRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setSubjectRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSubjectRequired(bool arg0)
        {
            IExecuteWithSignature("setSubjectRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.html#setURLRequired-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetURLRequired(bool arg0)
        {
            IExecuteWithSignature("setURLRequired", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}