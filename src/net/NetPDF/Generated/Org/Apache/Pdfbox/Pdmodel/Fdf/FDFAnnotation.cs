/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Fdf
{
    #region FDFAnnotation declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html"/>
    /// </summary>
    public partial class FDFAnnotation : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("FDFAnnotation class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public FDFAnnotation() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("FDFAnnotation class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public FDFAnnotation(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region FDFAnnotation implementation
    public partial class FDFAnnotation
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#org.apache.pdfbox.pdmodel.fdf.FDFAnnotation(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public FDFAnnotation(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#org.apache.pdfbox.pdmodel.fdf.FDFAnnotation(org.w3c.dom.Element)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.W3c.Dom.Element"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public FDFAnnotation(Org.W3c.Dom.Element arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#create-org.apache.pdfbox.cos.COSDictionary-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation Create(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation>(LocalBridgeClazz, "create", "(Lorg/apache/pdfbox/cos/COSDictionary;)Lorg/apache/pdfbox/pdmodel/fdf/FDFAnnotation;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getBorderEffect--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setBorderEffect-org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDBorderEffectDictionary BorderEffect
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDBorderEffectDictionary>("getBorderEffect", "()Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary;"); } set { IExecuteWithSignature("setBorderEffect", "(Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getBorderStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setBorderStyle-org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDBorderStyleDictionary BorderStyle
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation.PDBorderStyleDictionary>("getBorderStyle", "()Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary;"); } set { IExecuteWithSignature("setBorderStyle", "(Lorg/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getColor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setColor-java.awt.Color-"/>
        /// </summary>
        public Java.Awt.Color Color
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getColor", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setColor", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getContents--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setContents-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Contents
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getContents", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setContents", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getCreationDate--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setCreationDate-java.util.Calendar-"/>
        /// </summary>
        public Java.Util.Calendar CreationDate
        {
            get { return IExecuteWithSignature<Java.Util.Calendar>("getCreationDate", "()Ljava/util/Calendar;"); } set { IExecuteWithSignature("setCreationDate", "(Ljava/util/Calendar;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getDate--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setDate-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Date
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDate", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDate", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getIntent--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setIntent-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Intent
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getIntent", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setIntent", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getName--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setName-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Name
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setName", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getOpacity--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setOpacity-float-"/>
        /// </summary>
        public float Opacity
        {
            get { return IExecuteWithSignature<float>("getOpacity", "()F"); } set { IExecuteWithSignature("setOpacity", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getPage--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setPage-int-"/>
        /// </summary>
        public Java.Lang.Integer Page
        {
            get { return IExecuteWithSignature<Java.Lang.Integer>("getPage", "()Ljava/lang/Integer;"); } set { IExecuteWithSignature("setPage", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getRectangle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setRectangle-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle Rectangle
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getRectangle", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setRectangle", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getRichContents--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setRichContents-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String RichContents
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getRichContents", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setRichContents", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getSubject--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setSubject-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Subject
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getSubject", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setSubject", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#getTitle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setTitle-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Title
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getTitle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setTitle", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isHidden--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsHidden()
        {
            return IExecuteWithSignature<bool>("isHidden", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isInvisible--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInvisible()
        {
            return IExecuteWithSignature<bool>("isInvisible", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isLocked--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLocked()
        {
            return IExecuteWithSignature<bool>("isLocked", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isLockedContents--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLockedContents()
        {
            return IExecuteWithSignature<bool>("isLockedContents", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isNoRotate--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoRotate()
        {
            return IExecuteWithSignature<bool>("isNoRotate", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isNoView--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoView()
        {
            return IExecuteWithSignature<bool>("isNoView", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isNoZoom--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNoZoom()
        {
            return IExecuteWithSignature<bool>("isNoZoom", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isPrinted--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPrinted()
        {
            return IExecuteWithSignature<bool>("isPrinted", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isReadOnly--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsReadOnly()
        {
            return IExecuteWithSignature<bool>("isReadOnly", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#isToggleNoView--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsToggleNoView()
        {
            return IExecuteWithSignature<bool>("isToggleNoView", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setHidden-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetHidden(bool arg0)
        {
            IExecuteWithSignature("setHidden", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setInvisible-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetInvisible(bool arg0)
        {
            IExecuteWithSignature("setInvisible", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setLocked-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLocked(bool arg0)
        {
            IExecuteWithSignature("setLocked", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setNoRotate-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoRotate(bool arg0)
        {
            IExecuteWithSignature("setNoRotate", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setNoView-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoView(bool arg0)
        {
            IExecuteWithSignature("setNoView", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setNoZoom-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetNoZoom(bool arg0)
        {
            IExecuteWithSignature("setNoZoom", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setPrinted-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetPrinted(bool arg0)
        {
            IExecuteWithSignature("setPrinted", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setReadOnly-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetReadOnly(bool arg0)
        {
            IExecuteWithSignature("setReadOnly", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setToggleNoView-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetToggleNoView(bool arg0)
        {
            IExecuteWithSignature("setToggleNoView", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.html#setLockedContents-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLockedContents(bool arg0)
        {
            IExecuteWithSignature("setLockedContents", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}