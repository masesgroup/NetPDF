/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Action
{
    #region PDWindowsLaunchParams declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html"/>
    /// </summary>
    public partial class PDWindowsLaunchParams : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDWindowsLaunchParams() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDWindowsLaunchParams(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDWindowsLaunchParams implementation
    public partial class PDWindowsLaunchParams
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDWindowsLaunchParams(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#OPERATION_OPEN"/>
        /// </summary>
        public static Java.Lang.String OPERATION_OPEN { get { if (!_OPERATION_OPENReady) { _OPERATION_OPENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "OPERATION_OPEN"); _OPERATION_OPENReady = true; } return _OPERATION_OPENContent; } }
        private static Java.Lang.String _OPERATION_OPENContent = default;
        private static bool _OPERATION_OPENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#OPERATION_PRINT"/>
        /// </summary>
        public static Java.Lang.String OPERATION_PRINT { get { if (!_OPERATION_PRINTReady) { _OPERATION_PRINTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "OPERATION_PRINT"); _OPERATION_PRINTReady = true; } return _OPERATION_PRINTContent; } }
        private static Java.Lang.String _OPERATION_PRINTContent = default;
        private static bool _OPERATION_PRINTReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#getDirectory--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#setDirectory-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Directory
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDirectory", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDirectory", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#getExecuteParam--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#setExecuteParam-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String ExecuteParam
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getExecuteParam", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setExecuteParam", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#getFilename--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#setFilename-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Filename
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFilename", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFilename", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#getOperation--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.html#setOperation-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Operation
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getOperation", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setOperation", "(Ljava/lang/String;)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}