/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Measurement
{
    #region PDNumberFormatDictionary declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html"/>
    /// </summary>
    public partial class PDNumberFormatDictionary : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDNumberFormatDictionary() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDNumberFormatDictionary(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDNumberFormatDictionary(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDNumberFormatDictionary implementation
    public partial class PDNumberFormatDictionary
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDNumberFormatDictionary(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#FRACTIONAL_DISPLAY_DECIMAL"/>
        /// </summary>
        public static Java.Lang.String FRACTIONAL_DISPLAY_DECIMAL { get { if (!_FRACTIONAL_DISPLAY_DECIMALReady) { _FRACTIONAL_DISPLAY_DECIMALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FRACTIONAL_DISPLAY_DECIMAL"); _FRACTIONAL_DISPLAY_DECIMALReady = true; } return _FRACTIONAL_DISPLAY_DECIMALContent; } }
        private static Java.Lang.String _FRACTIONAL_DISPLAY_DECIMALContent = default;
        private static bool _FRACTIONAL_DISPLAY_DECIMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#FRACTIONAL_DISPLAY_FRACTION"/>
        /// </summary>
        public static Java.Lang.String FRACTIONAL_DISPLAY_FRACTION { get { if (!_FRACTIONAL_DISPLAY_FRACTIONReady) { _FRACTIONAL_DISPLAY_FRACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FRACTIONAL_DISPLAY_FRACTION"); _FRACTIONAL_DISPLAY_FRACTIONReady = true; } return _FRACTIONAL_DISPLAY_FRACTIONContent; } }
        private static Java.Lang.String _FRACTIONAL_DISPLAY_FRACTIONContent = default;
        private static bool _FRACTIONAL_DISPLAY_FRACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#FRACTIONAL_DISPLAY_ROUND"/>
        /// </summary>
        public static Java.Lang.String FRACTIONAL_DISPLAY_ROUND { get { if (!_FRACTIONAL_DISPLAY_ROUNDReady) { _FRACTIONAL_DISPLAY_ROUNDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FRACTIONAL_DISPLAY_ROUND"); _FRACTIONAL_DISPLAY_ROUNDReady = true; } return _FRACTIONAL_DISPLAY_ROUNDContent; } }
        private static Java.Lang.String _FRACTIONAL_DISPLAY_ROUNDContent = default;
        private static bool _FRACTIONAL_DISPLAY_ROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#FRACTIONAL_DISPLAY_TRUNCATE"/>
        /// </summary>
        public static Java.Lang.String FRACTIONAL_DISPLAY_TRUNCATE { get { if (!_FRACTIONAL_DISPLAY_TRUNCATEReady) { _FRACTIONAL_DISPLAY_TRUNCATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FRACTIONAL_DISPLAY_TRUNCATE"); _FRACTIONAL_DISPLAY_TRUNCATEReady = true; } return _FRACTIONAL_DISPLAY_TRUNCATEContent; } }
        private static Java.Lang.String _FRACTIONAL_DISPLAY_TRUNCATEContent = default;
        private static bool _FRACTIONAL_DISPLAY_TRUNCATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#LABEL_PREFIX_TO_VALUE"/>
        /// </summary>
        public static Java.Lang.String LABEL_PREFIX_TO_VALUE { get { if (!_LABEL_PREFIX_TO_VALUEReady) { _LABEL_PREFIX_TO_VALUEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LABEL_PREFIX_TO_VALUE"); _LABEL_PREFIX_TO_VALUEReady = true; } return _LABEL_PREFIX_TO_VALUEContent; } }
        private static Java.Lang.String _LABEL_PREFIX_TO_VALUEContent = default;
        private static bool _LABEL_PREFIX_TO_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#LABEL_SUFFIX_TO_VALUE"/>
        /// </summary>
        public static Java.Lang.String LABEL_SUFFIX_TO_VALUE { get { if (!_LABEL_SUFFIX_TO_VALUEReady) { _LABEL_SUFFIX_TO_VALUEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LABEL_SUFFIX_TO_VALUE"); _LABEL_SUFFIX_TO_VALUEReady = true; } return _LABEL_SUFFIX_TO_VALUEContent; } }
        private static Java.Lang.String _LABEL_SUFFIX_TO_VALUEContent = default;
        private static bool _LABEL_SUFFIX_TO_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#TYPE"/>
        /// </summary>
        public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
        private static Java.Lang.String _TYPEContent = default;
        private static bool _TYPEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getConversionFactor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setConversionFactor-float-"/>
        /// </summary>
        public float ConversionFactor
        {
            get { return IExecuteWithSignature<float>("getConversionFactor", "()F"); } set { IExecuteWithSignature("setConversionFactor", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getDecimalSeparator--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setDecimalSeparator-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String DecimalSeparator
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDecimalSeparator", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDecimalSeparator", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getDenominator--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setDenominator-int-"/>
        /// </summary>
        public int Denominator
        {
            get { return IExecuteWithSignature<int>("getDenominator", "()I"); } set { IExecuteWithSignature("setDenominator", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getFractionalDisplay--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setFractionalDisplay-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String FractionalDisplay
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getFractionalDisplay", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setFractionalDisplay", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getLabelPositionToValue--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setLabelPositionToValue-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String LabelPositionToValue
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getLabelPositionToValue", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setLabelPositionToValue", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getLabelPrefixString--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setLabelPrefixString-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String LabelPrefixString
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getLabelPrefixString", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setLabelPrefixString", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getLabelSuffixString--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setLabelSuffixString-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String LabelSuffixString
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getLabelSuffixString", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setLabelSuffixString", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getThousandsSeparator--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setThousandsSeparator-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String ThousandsSeparator
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getThousandsSeparator", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setThousandsSeparator", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getType--"/> 
        /// </summary>
        public Java.Lang.String Type
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getType", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#getUnits--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setUnits-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Units
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getUnits", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setUnits", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#isFD--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFD()
        {
            return IExecuteWithSignature<bool>("isFD", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.html#setFD-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetFD(bool arg0)
        {
            IExecuteWithSignature("setFD", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}