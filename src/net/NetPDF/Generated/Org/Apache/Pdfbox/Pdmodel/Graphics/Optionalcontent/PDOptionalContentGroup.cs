/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.13.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent
{
    #region PDOptionalContentGroup declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html"/>
    /// </summary>
    public partial class PDOptionalContentGroup : Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Markedcontent.PDPropertyList
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDOptionalContentGroup() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDOptionalContentGroup(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region RenderState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html"/>
        /// </summary>
        public partial class RenderState : Java.Lang.Enum<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>
        {
            const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public RenderState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public RenderState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region PDOptionalContentGroup implementation
    public partial class PDOptionalContentGroup
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html#org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public PDOptionalContentGroup(Java.Lang.String arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html#org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDOptionalContentGroup(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html#getName--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html#setName-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Name
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setName", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.html#getRenderState-org.apache.pdfbox.rendering.RenderDestination-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Rendering.RenderDestination"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState GetRenderState(Org.Apache.Pdfbox.Rendering.RenderDestination arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>("getRenderState", "(Lorg/apache/pdfbox/rendering/RenderDestination;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup$RenderState;", arg0);
        }

        #endregion

        #region Nested classes
        #region RenderState implementation
        public partial class RenderState
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#OFF"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState OFF { get { if (!_OFFReady) { _OFFContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>(LocalBridgeClazz, "OFF"); _OFFReady = true; } return _OFFContent; } }
            private static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState _OFFContent = default;
            private static bool _OFFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#ON"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState ON { get { if (!_ONReady) { _ONContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>(LocalBridgeClazz, "ON"); _ONReady = true; } return _ONContent; } }
            private static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState _ONContent = default;
            private static bool _ONReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup$RenderState;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#valueOf-org.apache.pdfbox.cos.COSName-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState ValueOf(Org.Apache.Pdfbox.Cos.COSName arg0)
            {
                return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>(LocalBridgeClazz, "valueOf", "(Lorg/apache/pdfbox/cos/COSName;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup$RenderState;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#values--"/>
            /// </summary>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState[] Values()
            {
                return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup.RenderState>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup$RenderState;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.RenderState.html#getName--"/> 
            /// </summary>
            public Org.Apache.Pdfbox.Cos.COSName Name
            {
                get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSName>("getName", "()Lorg/apache/pdfbox/cos/COSName;"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}