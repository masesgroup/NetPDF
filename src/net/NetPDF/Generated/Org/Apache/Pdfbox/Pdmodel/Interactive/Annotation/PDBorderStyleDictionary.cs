/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Annotation
{
    #region PDBorderStyleDictionary declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html"/>
    /// </summary>
    public partial class PDBorderStyleDictionary : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDBorderStyleDictionary() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDBorderStyleDictionary(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDBorderStyleDictionary implementation
    public partial class PDBorderStyleDictionary
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDBorderStyleDictionary(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#STYLE_BEVELED"/>
        /// </summary>
        public static Java.Lang.String STYLE_BEVELED { get { if (!_STYLE_BEVELEDReady) { _STYLE_BEVELEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_BEVELED"); _STYLE_BEVELEDReady = true; } return _STYLE_BEVELEDContent; } }
        private static Java.Lang.String _STYLE_BEVELEDContent = default;
        private static bool _STYLE_BEVELEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#STYLE_DASHED"/>
        /// </summary>
        public static Java.Lang.String STYLE_DASHED { get { if (!_STYLE_DASHEDReady) { _STYLE_DASHEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_DASHED"); _STYLE_DASHEDReady = true; } return _STYLE_DASHEDContent; } }
        private static Java.Lang.String _STYLE_DASHEDContent = default;
        private static bool _STYLE_DASHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#STYLE_INSET"/>
        /// </summary>
        public static Java.Lang.String STYLE_INSET { get { if (!_STYLE_INSETReady) { _STYLE_INSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_INSET"); _STYLE_INSETReady = true; } return _STYLE_INSETContent; } }
        private static Java.Lang.String _STYLE_INSETContent = default;
        private static bool _STYLE_INSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#STYLE_SOLID"/>
        /// </summary>
        public static Java.Lang.String STYLE_SOLID { get { if (!_STYLE_SOLIDReady) { _STYLE_SOLIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_SOLID"); _STYLE_SOLIDReady = true; } return _STYLE_SOLIDContent; } }
        private static Java.Lang.String _STYLE_SOLIDContent = default;
        private static bool _STYLE_SOLIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#STYLE_UNDERLINE"/>
        /// </summary>
        public static Java.Lang.String STYLE_UNDERLINE { get { if (!_STYLE_UNDERLINEReady) { _STYLE_UNDERLINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_UNDERLINE"); _STYLE_UNDERLINEReady = true; } return _STYLE_UNDERLINEContent; } }
        private static Java.Lang.String _STYLE_UNDERLINEContent = default;
        private static bool _STYLE_UNDERLINEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#getDashStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#setDashStyle-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.PDLineDashPattern DashStyle
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.PDLineDashPattern>("getDashStyle", "()Lorg/apache/pdfbox/pdmodel/graphics/PDLineDashPattern;"); } set { IExecuteWithSignature("setDashStyle", "(Lorg/apache/pdfbox/cos/COSArray;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#getStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#setStyle-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Style
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getStyle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setStyle", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#getWidth--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#setWidth-float-"/>
        /// </summary>
        public float Width
        {
            get { return IExecuteWithSignature<float>("getWidth", "()F"); } set { IExecuteWithSignature("setWidth", "(F)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}