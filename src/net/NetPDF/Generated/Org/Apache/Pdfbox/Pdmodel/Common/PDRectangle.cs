/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Common
{
    #region PDRectangle declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html"/>
    /// </summary>
    public partial class PDRectangle : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.common.PDRectangle";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDRectangle() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDRectangle(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDRectangle implementation
    public partial class PDRectangle
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#org.apache.pdfbox.pdmodel.common.PDRectangle(float,float,float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="float"/></param>
        public PDRectangle(float arg0, float arg1, float arg2, float arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#org.apache.pdfbox.pdmodel.common.PDRectangle(float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        public PDRectangle(float arg0, float arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#org.apache.pdfbox.pdmodel.common.PDRectangle(org.apache.fontbox.util.BoundingBox)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Fontbox.Util.BoundingBox"/></param>
        public PDRectangle(Org.Apache.Fontbox.Util.BoundingBox arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#org.apache.pdfbox.pdmodel.common.PDRectangle(org.apache.pdfbox.cos.COSArray)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        public PDRectangle(Org.Apache.Pdfbox.Cos.COSArray arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A0"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A0 { get { if (!_A0Ready) { _A0Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A0"); _A0Ready = true; } return _A0Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A0Content = default;
        private static bool _A0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A1"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A1 { get { if (!_A1Ready) { _A1Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A1"); _A1Ready = true; } return _A1Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A1Content = default;
        private static bool _A1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A2"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A2 { get { if (!_A2Ready) { _A2Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A2"); _A2Ready = true; } return _A2Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A2Content = default;
        private static bool _A2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A3"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A3 { get { if (!_A3Ready) { _A3Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A3"); _A3Ready = true; } return _A3Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A3Content = default;
        private static bool _A3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A4"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A4 { get { if (!_A4Ready) { _A4Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A4"); _A4Ready = true; } return _A4Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A4Content = default;
        private static bool _A4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A5"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A5 { get { if (!_A5Ready) { _A5Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A5"); _A5Ready = true; } return _A5Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A5Content = default;
        private static bool _A5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#A6"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle A6 { get { if (!_A6Ready) { _A6Content = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "A6"); _A6Ready = true; } return _A6Content; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _A6Content = default;
        private static bool _A6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#LEGAL"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle LEGAL { get { if (!_LEGALReady) { _LEGALContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "LEGAL"); _LEGALReady = true; } return _LEGALContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _LEGALContent = default;
        private static bool _LEGALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#LETTER"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle LETTER { get { if (!_LETTERReady) { _LETTERContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "LETTER"); _LETTERReady = true; } return _LETTERContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _LETTERContent = default;
        private static bool _LETTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#TABLOID"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle TABLOID { get { if (!_TABLOIDReady) { _TABLOIDContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>(LocalBridgeClazz, "TABLOID"); _TABLOIDReady = true; } return _TABLOIDContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle _TABLOIDContent = default;
        private static bool _TABLOIDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getCOSArray--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSArray COSArray
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSArray>("getCOSArray", "()Lorg/apache/pdfbox/cos/COSArray;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getHeight--"/> 
        /// </summary>
        public float Height
        {
            get { return IExecuteWithSignature<float>("getHeight", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getLowerLeftX--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#setLowerLeftX-float-"/>
        /// </summary>
        public float LowerLeftX
        {
            get { return IExecuteWithSignature<float>("getLowerLeftX", "()F"); } set { IExecuteWithSignature("setLowerLeftX", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getLowerLeftY--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#setLowerLeftY-float-"/>
        /// </summary>
        public float LowerLeftY
        {
            get { return IExecuteWithSignature<float>("getLowerLeftY", "()F"); } set { IExecuteWithSignature("setLowerLeftY", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getUpperRightX--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#setUpperRightX-float-"/>
        /// </summary>
        public float UpperRightX
        {
            get { return IExecuteWithSignature<float>("getUpperRightX", "()F"); } set { IExecuteWithSignature("setUpperRightX", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getUpperRightY--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#setUpperRightY-float-"/>
        /// </summary>
        public float UpperRightY
        {
            get { return IExecuteWithSignature<float>("getUpperRightY", "()F"); } set { IExecuteWithSignature("setUpperRightY", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#getWidth--"/> 
        /// </summary>
        public float Width
        {
            get { return IExecuteWithSignature<float>("getWidth", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#contains-float-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(float arg0, float arg1)
        {
            return IExecuteWithSignature<bool>("contains", "(FF)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#toGeneralPath--"/>
        /// </summary>
        /// <returns><see cref="Java.Awt.Geom.GeneralPath"/></returns>
        public Java.Awt.Geom.GeneralPath ToGeneralPath()
        {
            return IExecuteWithSignature<Java.Awt.Geom.GeneralPath>("toGeneralPath", "()Ljava/awt/geom/GeneralPath;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#transform-org.apache.pdfbox.util.Matrix-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Util.Matrix"/></param>
        /// <returns><see cref="Java.Awt.Geom.GeneralPath"/></returns>
        public Java.Awt.Geom.GeneralPath Transform(Org.Apache.Pdfbox.Util.Matrix arg0)
        {
            return IExecuteWithSignature<Java.Awt.Geom.GeneralPath>("transform", "(Lorg/apache/pdfbox/util/Matrix;)Ljava/awt/geom/GeneralPath;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/pdmodel/common/PDRectangle.html#createRetranslatedRectangle--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle CreateRetranslatedRectangle()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("createRetranslatedRectangle", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}