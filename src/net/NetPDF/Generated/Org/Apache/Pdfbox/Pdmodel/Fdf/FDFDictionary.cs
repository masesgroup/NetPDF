/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Fdf
{
    #region FDFDictionary declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html"/>
    /// </summary>
    public partial class FDFDictionary : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.fdf.FDFDictionary";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public FDFDictionary() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public FDFDictionary(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region FDFDictionary implementation
    public partial class FDFDictionary
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#org.apache.pdfbox.pdmodel.fdf.FDFDictionary(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public FDFDictionary(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#org.apache.pdfbox.pdmodel.fdf.FDFDictionary(org.w3c.dom.Element)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.W3c.Dom.Element"/></param>
        public FDFDictionary(Org.W3c.Dom.Element arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getAnnotations--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setAnnotations-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation> Annotations
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFAnnotation>>("getAnnotations", "()Ljava/util/List;"); } set { IExecuteWithSignature("setAnnotations", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getDifferences--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setDifferences-org.apache.pdfbox.cos.COSStream-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSStream Differences
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSStream>("getDifferences", "()Lorg/apache/pdfbox/cos/COSStream;"); } set { IExecuteWithSignature("setDifferences", "(Lorg/apache/pdfbox/cos/COSStream;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getEmbeddedFDFs--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setEmbeddedFDFs-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification> EmbeddedFDFs
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification>>("getEmbeddedFDFs", "()Ljava/util/List;"); } set { IExecuteWithSignature("setEmbeddedFDFs", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getEncoding--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setEncoding-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Encoding
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getEncoding", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setEncoding", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getFields--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setFields-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFField> Fields
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFField>>("getFields", "()Ljava/util/List;"); } set { IExecuteWithSignature("setFields", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getFile--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setFile-org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification File
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.Filespecification.PDFileSpecification>("getFile", "()Lorg/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification;"); } set { IExecuteWithSignature("setFile", "(Lorg/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getID--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setID-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSArray ID
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSArray>("getID", "()Lorg/apache/pdfbox/cos/COSArray;"); } set { IExecuteWithSignature("setID", "(Lorg/apache/pdfbox/cos/COSArray;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getJavaScript--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setJavaScript-org.apache.pdfbox.pdmodel.fdf.FDFJavaScript-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Fdf.FDFJavaScript JavaScript
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFJavaScript>("getJavaScript", "()Lorg/apache/pdfbox/pdmodel/fdf/FDFJavaScript;"); } set { IExecuteWithSignature("setJavaScript", "(Lorg/apache/pdfbox/pdmodel/fdf/FDFJavaScript;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getPages--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setPages-java.util.List-"/>
        /// </summary>
        public Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFPage> Pages
        {
            get { return IExecuteWithSignature<Java.Util.List<Org.Apache.Pdfbox.Pdmodel.Fdf.FDFPage>>("getPages", "()Ljava/util/List;"); } set { IExecuteWithSignature("setPages", "(Ljava/util/List;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getStatus--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setStatus-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Status
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getStatus", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setStatus", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#getTarget--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#setTarget-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Target
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getTarget", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setTarget", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.html#writeXML-java.io.Writer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.Writer"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void WriteXML(Java.Io.Writer arg0)
        {
            IExecuteWithSignature("writeXML", "(Ljava/io/Writer;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}