/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation
{
    #region PDTransitionDirection declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html"/>
    /// </summary>
    public partial class PDTransitionDirection : Java.Lang.Enum<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDTransitionDirection() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDTransitionDirection(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDTransitionDirection implementation
    public partial class PDTransitionDirection
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#BOTTOM_TO_TOP"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection BOTTOM_TO_TOP { get { if (!_BOTTOM_TO_TOPReady) { _BOTTOM_TO_TOPContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "BOTTOM_TO_TOP"); _BOTTOM_TO_TOPReady = true; } return _BOTTOM_TO_TOPContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _BOTTOM_TO_TOPContent = default;
        private static bool _BOTTOM_TO_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#LEFT_TO_RIGHT"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection LEFT_TO_RIGHT { get { if (!_LEFT_TO_RIGHTReady) { _LEFT_TO_RIGHTContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "LEFT_TO_RIGHT"); _LEFT_TO_RIGHTReady = true; } return _LEFT_TO_RIGHTContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _LEFT_TO_RIGHTContent = default;
        private static bool _LEFT_TO_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#NONE"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection NONE { get { if (!_NONEReady) { _NONEContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _NONEContent = default;
        private static bool _NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#RIGHT_TO_LEFT"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection RIGHT_TO_LEFT { get { if (!_RIGHT_TO_LEFTReady) { _RIGHT_TO_LEFTContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "RIGHT_TO_LEFT"); _RIGHT_TO_LEFTReady = true; } return _RIGHT_TO_LEFTContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _RIGHT_TO_LEFTContent = default;
        private static bool _RIGHT_TO_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#TOP_LEFT_TO_BOTTOM_RIGHT"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection TOP_LEFT_TO_BOTTOM_RIGHT { get { if (!_TOP_LEFT_TO_BOTTOM_RIGHTReady) { _TOP_LEFT_TO_BOTTOM_RIGHTContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "TOP_LEFT_TO_BOTTOM_RIGHT"); _TOP_LEFT_TO_BOTTOM_RIGHTReady = true; } return _TOP_LEFT_TO_BOTTOM_RIGHTContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _TOP_LEFT_TO_BOTTOM_RIGHTContent = default;
        private static bool _TOP_LEFT_TO_BOTTOM_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#TOP_TO_BOTTOM"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection TOP_TO_BOTTOM { get { if (!_TOP_TO_BOTTOMReady) { _TOP_TO_BOTTOMContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "TOP_TO_BOTTOM"); _TOP_TO_BOTTOMReady = true; } return _TOP_TO_BOTTOMContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection _TOP_TO_BOTTOMContent = default;
        private static bool _TOP_TO_BOTTOMReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#valueOf-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection ValueOf(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#values--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection[] Values()
        {
            return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Pdmodel.Interactive.Pagenavigation.PDTransitionDirection>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.html#getCOSBase--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSBase
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSBase", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}