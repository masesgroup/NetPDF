/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature
{
    #region SignatureOptions declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html"/>
    /// </summary>
    public partial class SignatureOptions : Java.Io.Closeable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SignatureOptions() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SignatureOptions(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => true;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region SignatureOptions implementation
    public partial class SignatureOptions
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#DEFAULT_SIGNATURE_SIZE"/>
        /// </summary>
        public static int DEFAULT_SIGNATURE_SIZE { get { if (!_DEFAULT_SIGNATURE_SIZEReady) { _DEFAULT_SIGNATURE_SIZEContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_SIGNATURE_SIZE"); _DEFAULT_SIGNATURE_SIZEReady = true; } return _DEFAULT_SIGNATURE_SIZEContent; } }
        private static int _DEFAULT_SIGNATURE_SIZEContent = default;
        private static bool _DEFAULT_SIGNATURE_SIZEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#getPage--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#setPage-int-"/>
        /// </summary>
        public int Page
        {
            get { return IExecuteWithSignature<int>("getPage", "()I"); } set { IExecuteWithSignature("setPage", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#getPreferredSignatureSize--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#setPreferredSignatureSize-int-"/>
        /// </summary>
        public int PreferredSignatureSize
        {
            get { return IExecuteWithSignature<int>("getPreferredSignatureSize", "()I"); } set { IExecuteWithSignature("setPreferredSignatureSize", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#getVisualSignature--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSDocument VisualSignature
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSDocument>("getVisualSignature", "()Lorg/apache/pdfbox/cos/COSDocument;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#close--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#setVisualSignature-java.io.File-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void SetVisualSignature(Java.Io.File arg0)
        {
            IExecuteWithSignature("setVisualSignature", "(Ljava/io/File;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#setVisualSignature-java.io.InputStream-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void SetVisualSignature(Java.Io.InputStream arg0)
        {
            IExecuteWithSignature("setVisualSignature", "(Ljava/io/InputStream;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.html#setVisualSignature-org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.Visible.PDVisibleSigProperties"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void SetVisualSignature(Org.Apache.Pdfbox.Pdmodel.Interactive.Digitalsignature.Visible.PDVisibleSigProperties arg0)
        {
            IExecuteWithSignature("setVisualSignature", "(Lorg/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}