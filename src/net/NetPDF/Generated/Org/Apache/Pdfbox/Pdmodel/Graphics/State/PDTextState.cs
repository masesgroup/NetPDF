/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Graphics.State
{
    #region PDTextState declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html"/>
    /// </summary>
    public partial class PDTextState : Java.Lang.Cloneable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.state.PDTextState";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDTextState() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDTextState(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDTextState implementation
    public partial class PDTextState
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getCharacterSpacing--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setCharacterSpacing-float-"/>
        /// </summary>
        public float CharacterSpacing
        {
            get { return IExecuteWithSignature<float>("getCharacterSpacing", "()F"); } set { IExecuteWithSignature("setCharacterSpacing", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getFont--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setFont-org.apache.pdfbox.pdmodel.font.PDFont-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Font.PDFont Font
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Font.PDFont>("getFont", "()Lorg/apache/pdfbox/pdmodel/font/PDFont;"); } set { IExecuteWithSignature("setFont", "(Lorg/apache/pdfbox/pdmodel/font/PDFont;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getFontSize--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setFontSize-float-"/>
        /// </summary>
        public float FontSize
        {
            get { return IExecuteWithSignature<float>("getFontSize", "()F"); } set { IExecuteWithSignature("setFontSize", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getHorizontalScaling--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setHorizontalScaling-float-"/>
        /// </summary>
        public float HorizontalScaling
        {
            get { return IExecuteWithSignature<float>("getHorizontalScaling", "()F"); } set { IExecuteWithSignature("setHorizontalScaling", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getKnockoutFlag--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setKnockoutFlag-boolean-"/>
        /// </summary>
        public bool KnockoutFlag
        {
            get { return IExecuteWithSignature<bool>("getKnockoutFlag", "()Z"); } set { IExecuteWithSignature("setKnockoutFlag", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getLeading--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setLeading-float-"/>
        /// </summary>
        public float Leading
        {
            get { return IExecuteWithSignature<float>("getLeading", "()F"); } set { IExecuteWithSignature("setLeading", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getRenderingMode--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setRenderingMode-org.apache.pdfbox.pdmodel.graphics.state.RenderingMode-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingMode RenderingMode
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.State.RenderingMode>("getRenderingMode", "()Lorg/apache/pdfbox/pdmodel/graphics/state/RenderingMode;"); } set { IExecuteWithSignature("setRenderingMode", "(Lorg/apache/pdfbox/pdmodel/graphics/state/RenderingMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getRise--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setRise-float-"/>
        /// </summary>
        public float Rise
        {
            get { return IExecuteWithSignature<float>("getRise", "()F"); } set { IExecuteWithSignature("setRise", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#getWordSpacing--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#setWordSpacing-float-"/>
        /// </summary>
        public float WordSpacing
        {
            get { return IExecuteWithSignature<float>("getWordSpacing", "()F"); } set { IExecuteWithSignature("setWordSpacing", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.html#clone--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.State.PDTextState"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.State.PDTextState Clone()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.State.PDTextState>("clone", "()Lorg/apache/pdfbox/pdmodel/graphics/state/PDTextState;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}