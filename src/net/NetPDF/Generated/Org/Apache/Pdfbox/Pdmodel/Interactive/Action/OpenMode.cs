/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.13.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Interactive.Action
{
    #region OpenMode declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html"/>
    /// </summary>
    public partial class OpenMode : Java.Lang.Enum<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.interactive.action.OpenMode";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public OpenMode() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public OpenMode(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region OpenMode implementation
    public partial class OpenMode
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html#NEW_WINDOW"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode NEW_WINDOW { get { if (!_NEW_WINDOWReady) { _NEW_WINDOWContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>(LocalBridgeClazz, "NEW_WINDOW"); _NEW_WINDOWReady = true; } return _NEW_WINDOWContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode _NEW_WINDOWContent = default;
        private static bool _NEW_WINDOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html#SAME_WINDOW"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode SAME_WINDOW { get { if (!_SAME_WINDOWReady) { _SAME_WINDOWContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>(LocalBridgeClazz, "SAME_WINDOW"); _SAME_WINDOWReady = true; } return _SAME_WINDOWContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode _SAME_WINDOWContent = default;
        private static bool _SAME_WINDOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html#USER_PREFERENCE"/>
        /// </summary>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode USER_PREFERENCE { get { if (!_USER_PREFERENCEReady) { _USER_PREFERENCEContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>(LocalBridgeClazz, "USER_PREFERENCE"); _USER_PREFERENCEReady = true; } return _USER_PREFERENCEContent; } }
        private static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode _USER_PREFERENCEContent = default;
        private static bool _USER_PREFERENCEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html#valueOf-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode ValueOf(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/interactive/action/OpenMode;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.html#values--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode"/></returns>
        public static Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode[] Values()
        {
            return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Pdmodel.Interactive.Action.OpenMode>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/pdmodel/interactive/action/OpenMode;");
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}