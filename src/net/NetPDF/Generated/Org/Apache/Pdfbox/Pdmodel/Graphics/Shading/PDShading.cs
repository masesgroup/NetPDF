/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Graphics.Shading
{
    #region PDShading declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html"/>
    /// </summary>
    public partial class PDShading : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.shading.PDShading";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("PDShading class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDShading() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("PDShading class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PDShading(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDShading implementation
    public partial class PDShading
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#org.apache.pdfbox.pdmodel.graphics.shading.PDShading(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDShading(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE1"/>
        /// </summary>
        public static int SHADING_TYPE1 { get { if (!_SHADING_TYPE1Ready) { _SHADING_TYPE1Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE1"); _SHADING_TYPE1Ready = true; } return _SHADING_TYPE1Content; } }
        private static int _SHADING_TYPE1Content = default;
        private static bool _SHADING_TYPE1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE2"/>
        /// </summary>
        public static int SHADING_TYPE2 { get { if (!_SHADING_TYPE2Ready) { _SHADING_TYPE2Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE2"); _SHADING_TYPE2Ready = true; } return _SHADING_TYPE2Content; } }
        private static int _SHADING_TYPE2Content = default;
        private static bool _SHADING_TYPE2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE3"/>
        /// </summary>
        public static int SHADING_TYPE3 { get { if (!_SHADING_TYPE3Ready) { _SHADING_TYPE3Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE3"); _SHADING_TYPE3Ready = true; } return _SHADING_TYPE3Content; } }
        private static int _SHADING_TYPE3Content = default;
        private static bool _SHADING_TYPE3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE4"/>
        /// </summary>
        public static int SHADING_TYPE4 { get { if (!_SHADING_TYPE4Ready) { _SHADING_TYPE4Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE4"); _SHADING_TYPE4Ready = true; } return _SHADING_TYPE4Content; } }
        private static int _SHADING_TYPE4Content = default;
        private static bool _SHADING_TYPE4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE5"/>
        /// </summary>
        public static int SHADING_TYPE5 { get { if (!_SHADING_TYPE5Ready) { _SHADING_TYPE5Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE5"); _SHADING_TYPE5Ready = true; } return _SHADING_TYPE5Content; } }
        private static int _SHADING_TYPE5Content = default;
        private static bool _SHADING_TYPE5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE6"/>
        /// </summary>
        public static int SHADING_TYPE6 { get { if (!_SHADING_TYPE6Ready) { _SHADING_TYPE6Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE6"); _SHADING_TYPE6Ready = true; } return _SHADING_TYPE6Content; } }
        private static int _SHADING_TYPE6Content = default;
        private static bool _SHADING_TYPE6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#SHADING_TYPE7"/>
        /// </summary>
        public static int SHADING_TYPE7 { get { if (!_SHADING_TYPE7Ready) { _SHADING_TYPE7Content = SGetField<int>(LocalBridgeClazz, "SHADING_TYPE7"); _SHADING_TYPE7Ready = true; } return _SHADING_TYPE7Content; } }
        private static int _SHADING_TYPE7Content = default;
        private static bool _SHADING_TYPE7Ready = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#create-org.apache.pdfbox.cos.COSDictionary-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Shading.PDShading"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Org.Apache.Pdfbox.Pdmodel.Graphics.Shading.PDShading Create(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
        {
            return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Shading.PDShading>(LocalBridgeClazz, "create", "(Lorg/apache/pdfbox/cos/COSDictionary;)Lorg/apache/pdfbox/pdmodel/graphics/shading/PDShading;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getAntiAlias--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setAntiAlias-boolean-"/>
        /// </summary>
        public bool AntiAlias
        {
            get { return IExecuteWithSignature<bool>("getAntiAlias", "()Z"); } set { IExecuteWithSignature("setAntiAlias", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getBackground--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setBackground-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSArray Background
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSArray>("getBackground", "()Lorg/apache/pdfbox/cos/COSArray;"); } set { IExecuteWithSignature("setBackground", "(Lorg/apache/pdfbox/cos/COSArray;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getBBox--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setBBox-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle BBox
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getBBox", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setBBox", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getColorSpace--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setColorSpace-org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDColorSpace ColorSpace
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDColorSpace>("getColorSpace", "()Lorg/apache/pdfbox/pdmodel/graphics/color/PDColorSpace;"); } set { IExecuteWithSignature("setColorSpace", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDColorSpace;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getFunction--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.Function.PDFunction Function
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.Function.PDFunction>("getFunction", "()Lorg/apache/pdfbox/pdmodel/common/function/PDFunction;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getShadingType--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setShadingType-int-"/>
        /// </summary>
        public int ShadingType
        {
            get { return IExecuteWithSignature<int>("getShadingType", "()I"); } set { IExecuteWithSignature("setShadingType", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getType--"/> 
        /// </summary>
        public Java.Lang.String Type
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getType", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#toPaint-org.apache.pdfbox.util.Matrix-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Util.Matrix"/></param>
        /// <returns><see cref="Java.Awt.Paint"/></returns>
        public Java.Awt.Paint ToPaint(Org.Apache.Pdfbox.Util.Matrix arg0)
        {
            return IExecuteWithSignature<Java.Awt.Paint>("toPaint", "(Lorg/apache/pdfbox/util/Matrix;)Ljava/awt/Paint;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#evalFunction-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public float[] EvalFunction(float arg0)
        {
            return IExecuteWithSignatureArray<float>("evalFunction", "(F)[F", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#evalFunction-float[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public float[] EvalFunction(float[] arg0)
        {
            return IExecuteWithSignatureArray<float>("evalFunction", "([F)[F", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#getBounds-java.awt.geom.AffineTransform-org.apache.pdfbox.util.Matrix-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Geom.AffineTransform"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Util.Matrix"/></param>
        /// <returns><see cref="Java.Awt.Geom.Rectangle2D"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Awt.Geom.Rectangle2D GetBounds(Java.Awt.Geom.AffineTransform arg0, Org.Apache.Pdfbox.Util.Matrix arg1)
        {
            return IExecuteWithSignature<Java.Awt.Geom.Rectangle2D>("getBounds", "(Ljava/awt/geom/AffineTransform;Lorg/apache/pdfbox/util/Matrix;)Ljava/awt/geom/Rectangle2D;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setFunction-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        public void SetFunction(Org.Apache.Pdfbox.Cos.COSArray arg0)
        {
            IExecuteWithSignature("setFunction", "(Lorg/apache/pdfbox/cos/COSArray;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.html#setFunction-org.apache.pdfbox.pdmodel.common.function.PDFunction-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Common.Function.PDFunction"/></param>
        public void SetFunction(Org.Apache.Pdfbox.Pdmodel.Common.Function.PDFunction arg0)
        {
            IExecuteWithSignature("setFunction", "(Lorg/apache/pdfbox/pdmodel/common/function/PDFunction;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}