/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Common
{
    #region PDPageLabelRange declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html"/>
    /// </summary>
    public partial class PDPageLabelRange : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.common.PDPageLabelRange";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDPageLabelRange() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDPageLabelRange(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDPageLabelRange implementation
    public partial class PDPageLabelRange
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#org.apache.pdfbox.pdmodel.common.PDPageLabelRange(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDPageLabelRange(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#STYLE_DECIMAL"/>
        /// </summary>
        public static Java.Lang.String STYLE_DECIMAL { get { if (!_STYLE_DECIMALReady) { _STYLE_DECIMALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_DECIMAL"); _STYLE_DECIMALReady = true; } return _STYLE_DECIMALContent; } }
        private static Java.Lang.String _STYLE_DECIMALContent = default;
        private static bool _STYLE_DECIMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#STYLE_LETTERS_LOWER"/>
        /// </summary>
        public static Java.Lang.String STYLE_LETTERS_LOWER { get { if (!_STYLE_LETTERS_LOWERReady) { _STYLE_LETTERS_LOWERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_LETTERS_LOWER"); _STYLE_LETTERS_LOWERReady = true; } return _STYLE_LETTERS_LOWERContent; } }
        private static Java.Lang.String _STYLE_LETTERS_LOWERContent = default;
        private static bool _STYLE_LETTERS_LOWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#STYLE_LETTERS_UPPER"/>
        /// </summary>
        public static Java.Lang.String STYLE_LETTERS_UPPER { get { if (!_STYLE_LETTERS_UPPERReady) { _STYLE_LETTERS_UPPERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_LETTERS_UPPER"); _STYLE_LETTERS_UPPERReady = true; } return _STYLE_LETTERS_UPPERContent; } }
        private static Java.Lang.String _STYLE_LETTERS_UPPERContent = default;
        private static bool _STYLE_LETTERS_UPPERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#STYLE_ROMAN_LOWER"/>
        /// </summary>
        public static Java.Lang.String STYLE_ROMAN_LOWER { get { if (!_STYLE_ROMAN_LOWERReady) { _STYLE_ROMAN_LOWERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_ROMAN_LOWER"); _STYLE_ROMAN_LOWERReady = true; } return _STYLE_ROMAN_LOWERContent; } }
        private static Java.Lang.String _STYLE_ROMAN_LOWERContent = default;
        private static bool _STYLE_ROMAN_LOWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#STYLE_ROMAN_UPPER"/>
        /// </summary>
        public static Java.Lang.String STYLE_ROMAN_UPPER { get { if (!_STYLE_ROMAN_UPPERReady) { _STYLE_ROMAN_UPPERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STYLE_ROMAN_UPPER"); _STYLE_ROMAN_UPPERReady = true; } return _STYLE_ROMAN_UPPERContent; } }
        private static Java.Lang.String _STYLE_ROMAN_UPPERContent = default;
        private static bool _STYLE_ROMAN_UPPERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#getPrefix--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#setPrefix-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Prefix
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getPrefix", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setPrefix", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#getStart--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#setStart-int-"/>
        /// </summary>
        public int Start
        {
            get { return IExecuteWithSignature<int>("getStart", "()I"); } set { IExecuteWithSignature("setStart", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#getStyle--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.html#setStyle-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Style
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getStyle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setStyle", "(Ljava/lang/String;)V", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}