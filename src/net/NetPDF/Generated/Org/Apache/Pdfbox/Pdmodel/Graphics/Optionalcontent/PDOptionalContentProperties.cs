/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent
{
    #region PDOptionalContentProperties declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html"/>
    /// </summary>
    public partial class PDOptionalContentProperties : Org.Apache.Pdfbox.Pdmodel.Common.COSObjectable
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDOptionalContentProperties() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDOptionalContentProperties(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region BaseState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html"/>
        /// </summary>
        public partial class BaseState : Java.Lang.Enum<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>
        {
            const string _bridgeClassName = "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public BaseState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public BaseState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region PDOptionalContentProperties implementation
    public partial class PDOptionalContentProperties
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDOptionalContentProperties(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#getCOSObject--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase COSObject
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getCOSObject", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#getBaseState--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState GetBaseState
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>("getBaseState", "()Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties$BaseState;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#getGroupNames--"/> 
        /// </summary>
        public Java.Lang.String[] GroupNames
        {
            get { return IExecuteWithSignatureArray<Java.Lang.String>("getGroupNames", "()[Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#getOptionalContentGroups--"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup> OptionalContentGroups
        {
            get { return IExecuteWithSignature<Java.Util.Collection<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup>>("getOptionalContentGroups", "()Ljava/util/Collection;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#hasGroup-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasGroup(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasGroup", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#isGroupEnabled-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsGroupEnabled(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("isGroupEnabled", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#isGroupEnabled-org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsGroupEnabled(Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup arg0)
        {
            return IExecuteWithSignature<bool>("isGroupEnabled", "(Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#setGroupEnabled-java.lang.String-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetGroupEnabled(Java.Lang.String arg0, bool arg1)
        {
            return IExecuteWithSignature<bool>("setGroupEnabled", "(Ljava/lang/String;Z)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#setGroupEnabled-org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetGroupEnabled(Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup arg0, bool arg1)
        {
            return IExecuteWithSignature<bool>("setGroupEnabled", "(Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup;Z)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#getGroup-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup"/></returns>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup GetGroup(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup>("getGroup", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#addGroup-org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup"/></param>
        public void AddGroup(Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentGroup arg0)
        {
            IExecuteWithSignature("addGroup", "(Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.html#setBaseState-org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.BaseState-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState"/></param>
        public void SetBaseState(Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState arg0)
        {
            IExecuteWithSignature("setBaseState", "(Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties$BaseState;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region BaseState implementation
        public partial class BaseState
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#OFF"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState OFF { get { if (!_OFFReady) { _OFFContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "OFF"); _OFFReady = true; } return _OFFContent; } }
            private static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState _OFFContent = default;
            private static bool _OFFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#ON"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState ON { get { if (!_ONReady) { _ONContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "ON"); _ONReady = true; } return _ONContent; } }
            private static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState _ONContent = default;
            private static bool _ONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#UNCHANGED"/>
            /// </summary>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState UNCHANGED { get { if (!_UNCHANGEDReady) { _UNCHANGEDContent = SGetField<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "UNCHANGED"); _UNCHANGEDReady = true; } return _UNCHANGEDContent; } }
            private static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState _UNCHANGEDContent = default;
            private static bool _UNCHANGEDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties$BaseState;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#valueOf-org.apache.pdfbox.cos.COSName-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState ValueOf(Org.Apache.Pdfbox.Cos.COSName arg0)
            {
                return SExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "valueOf", "(Lorg/apache/pdfbox/cos/COSName;)Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties$BaseState;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#values--"/>
            /// </summary>
            /// <returns><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState"/></returns>
            public static Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState[] Values()
            {
                return SExecuteWithSignatureArray<Org.Apache.Pdfbox.Pdmodel.Graphics.Optionalcontent.PDOptionalContentProperties.BaseState>(LocalBridgeClazz, "values", "()[Lorg/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties$BaseState;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.BaseState.html#getName--"/> 
            /// </summary>
            public Org.Apache.Pdfbox.Cos.COSName Name
            {
                get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSName>("getName", "()Lorg/apache/pdfbox/cos/COSName;"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}