/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Taggedpdf
{
    #region StandardStructureTypes declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html"/>
    /// </summary>
    public partial class StandardStructureTypes : MASES.JCOBridge.C2JBridge.JVMBridgeBase<StandardStructureTypes>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public StandardStructureTypes() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public StandardStructureTypes(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region StandardStructureTypes implementation
    public partial class StandardStructureTypes
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#ANNOT"/>
        /// </summary>
        public static Java.Lang.String ANNOT { get { if (!_ANNOTReady) { _ANNOTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ANNOT"); _ANNOTReady = true; } return _ANNOTContent; } }
        private static Java.Lang.String _ANNOTContent = default;
        private static bool _ANNOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#ART"/>
        /// </summary>
        public static Java.Lang.String ART { get { if (!_ARTReady) { _ARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ART"); _ARTReady = true; } return _ARTContent; } }
        private static Java.Lang.String _ARTContent = default;
        private static bool _ARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#BIB_ENTRY"/>
        /// </summary>
        public static Java.Lang.String BIB_ENTRY { get { if (!_BIB_ENTRYReady) { _BIB_ENTRYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BIB_ENTRY"); _BIB_ENTRYReady = true; } return _BIB_ENTRYContent; } }
        private static Java.Lang.String _BIB_ENTRYContent = default;
        private static bool _BIB_ENTRYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#BLOCK_QUOTE"/>
        /// </summary>
        public static Java.Lang.String BLOCK_QUOTE { get { if (!_BLOCK_QUOTEReady) { _BLOCK_QUOTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOCK_QUOTE"); _BLOCK_QUOTEReady = true; } return _BLOCK_QUOTEContent; } }
        private static Java.Lang.String _BLOCK_QUOTEContent = default;
        private static bool _BLOCK_QUOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#CAPTION"/>
        /// </summary>
        public static Java.Lang.String CAPTION { get { if (!_CAPTIONReady) { _CAPTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CAPTION"); _CAPTIONReady = true; } return _CAPTIONContent; } }
        private static Java.Lang.String _CAPTIONContent = default;
        private static bool _CAPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#CODE"/>
        /// </summary>
        public static Java.Lang.String CODE { get { if (!_CODEReady) { _CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CODE"); _CODEReady = true; } return _CODEContent; } }
        private static Java.Lang.String _CODEContent = default;
        private static bool _CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#DIV"/>
        /// </summary>
        public static Java.Lang.String DIV { get { if (!_DIVReady) { _DIVContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DIV"); _DIVReady = true; } return _DIVContent; } }
        private static Java.Lang.String _DIVContent = default;
        private static bool _DIVReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#DOCUMENT"/>
        /// </summary>
        public static Java.Lang.String DOCUMENT { get { if (!_DOCUMENTReady) { _DOCUMENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DOCUMENT"); _DOCUMENTReady = true; } return _DOCUMENTContent; } }
        private static Java.Lang.String _DOCUMENTContent = default;
        private static bool _DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#Figure"/>
        /// </summary>
        public static Java.Lang.String Figure { get { if (!_FigureReady) { _FigureContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "Figure"); _FigureReady = true; } return _FigureContent; } }
        private static Java.Lang.String _FigureContent = default;
        private static bool _FigureReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#FORM"/>
        /// </summary>
        public static Java.Lang.String FORM { get { if (!_FORMReady) { _FORMContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FORM"); _FORMReady = true; } return _FORMContent; } }
        private static Java.Lang.String _FORMContent = default;
        private static bool _FORMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#FORMULA"/>
        /// </summary>
        public static Java.Lang.String FORMULA { get { if (!_FORMULAReady) { _FORMULAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FORMULA"); _FORMULAReady = true; } return _FORMULAContent; } }
        private static Java.Lang.String _FORMULAContent = default;
        private static bool _FORMULAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H"/>
        /// </summary>
        public static Java.Lang.String H { get { if (!_HReady) { _HContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "H"); _HReady = true; } return _HContent; } }
        private static Java.Lang.String _HContent = default;
        private static bool _HReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H1"/>
        /// </summary>
        public static Java.Lang.String H1 { get { if (!_H1Ready) { _H1Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H1"); _H1Ready = true; } return _H1Content; } }
        private static Java.Lang.String _H1Content = default;
        private static bool _H1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H2"/>
        /// </summary>
        public static Java.Lang.String H2 { get { if (!_H2Ready) { _H2Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H2"); _H2Ready = true; } return _H2Content; } }
        private static Java.Lang.String _H2Content = default;
        private static bool _H2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H3"/>
        /// </summary>
        public static Java.Lang.String H3 { get { if (!_H3Ready) { _H3Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H3"); _H3Ready = true; } return _H3Content; } }
        private static Java.Lang.String _H3Content = default;
        private static bool _H3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H4"/>
        /// </summary>
        public static Java.Lang.String H4 { get { if (!_H4Ready) { _H4Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H4"); _H4Ready = true; } return _H4Content; } }
        private static Java.Lang.String _H4Content = default;
        private static bool _H4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H5"/>
        /// </summary>
        public static Java.Lang.String H5 { get { if (!_H5Ready) { _H5Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H5"); _H5Ready = true; } return _H5Content; } }
        private static Java.Lang.String _H5Content = default;
        private static bool _H5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#H6"/>
        /// </summary>
        public static Java.Lang.String H6 { get { if (!_H6Ready) { _H6Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "H6"); _H6Ready = true; } return _H6Content; } }
        private static Java.Lang.String _H6Content = default;
        private static bool _H6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#INDEX"/>
        /// </summary>
        public static Java.Lang.String INDEX { get { if (!_INDEXReady) { _INDEXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INDEX"); _INDEXReady = true; } return _INDEXContent; } }
        private static Java.Lang.String _INDEXContent = default;
        private static bool _INDEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#L"/>
        /// </summary>
        public static Java.Lang.String L { get { if (!_LReady) { _LContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "L"); _LReady = true; } return _LContent; } }
        private static Java.Lang.String _LContent = default;
        private static bool _LReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#L_BODY"/>
        /// </summary>
        public static Java.Lang.String L_BODY { get { if (!_L_BODYReady) { _L_BODYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "L_BODY"); _L_BODYReady = true; } return _L_BODYContent; } }
        private static Java.Lang.String _L_BODYContent = default;
        private static bool _L_BODYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#LBL"/>
        /// </summary>
        public static Java.Lang.String LBL { get { if (!_LBLReady) { _LBLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LBL"); _LBLReady = true; } return _LBLContent; } }
        private static Java.Lang.String _LBLContent = default;
        private static bool _LBLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#LI"/>
        /// </summary>
        public static Java.Lang.String LI { get { if (!_LIReady) { _LIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LI"); _LIReady = true; } return _LIContent; } }
        private static Java.Lang.String _LIContent = default;
        private static bool _LIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#LINK"/>
        /// </summary>
        public static Java.Lang.String LINK { get { if (!_LINKReady) { _LINKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LINK"); _LINKReady = true; } return _LINKContent; } }
        private static Java.Lang.String _LINKContent = default;
        private static bool _LINKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#NON_STRUCT"/>
        /// </summary>
        public static Java.Lang.String NON_STRUCT { get { if (!_NON_STRUCTReady) { _NON_STRUCTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NON_STRUCT"); _NON_STRUCTReady = true; } return _NON_STRUCTContent; } }
        private static Java.Lang.String _NON_STRUCTContent = default;
        private static bool _NON_STRUCTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#NOTE"/>
        /// </summary>
        public static Java.Lang.String NOTE { get { if (!_NOTEReady) { _NOTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NOTE"); _NOTEReady = true; } return _NOTEContent; } }
        private static Java.Lang.String _NOTEContent = default;
        private static bool _NOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#P"/>
        /// </summary>
        public static Java.Lang.String P { get { if (!_PReady) { _PContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "P"); _PReady = true; } return _PContent; } }
        private static Java.Lang.String _PContent = default;
        private static bool _PReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#PART"/>
        /// </summary>
        public static Java.Lang.String PART { get { if (!_PARTReady) { _PARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PART"); _PARTReady = true; } return _PARTContent; } }
        private static Java.Lang.String _PARTContent = default;
        private static bool _PARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#PRIVATE"/>
        /// </summary>
        public static Java.Lang.String PRIVATE { get { if (!_PRIVATEReady) { _PRIVATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIVATE"); _PRIVATEReady = true; } return _PRIVATEContent; } }
        private static Java.Lang.String _PRIVATEContent = default;
        private static bool _PRIVATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#QUOTE"/>
        /// </summary>
        public static Java.Lang.String QUOTE { get { if (!_QUOTEReady) { _QUOTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "QUOTE"); _QUOTEReady = true; } return _QUOTEContent; } }
        private static Java.Lang.String _QUOTEContent = default;
        private static bool _QUOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#RB"/>
        /// </summary>
        public static Java.Lang.String RB { get { if (!_RBReady) { _RBContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RB"); _RBReady = true; } return _RBContent; } }
        private static Java.Lang.String _RBContent = default;
        private static bool _RBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#REFERENCE"/>
        /// </summary>
        public static Java.Lang.String REFERENCE { get { if (!_REFERENCEReady) { _REFERENCEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "REFERENCE"); _REFERENCEReady = true; } return _REFERENCEContent; } }
        private static Java.Lang.String _REFERENCEContent = default;
        private static bool _REFERENCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#RP"/>
        /// </summary>
        public static Java.Lang.String RP { get { if (!_RPReady) { _RPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RP"); _RPReady = true; } return _RPContent; } }
        private static Java.Lang.String _RPContent = default;
        private static bool _RPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#RT"/>
        /// </summary>
        public static Java.Lang.String RT { get { if (!_RTReady) { _RTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RT"); _RTReady = true; } return _RTContent; } }
        private static Java.Lang.String _RTContent = default;
        private static bool _RTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#RUBY"/>
        /// </summary>
        public static Java.Lang.String RUBY { get { if (!_RUBYReady) { _RUBYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY"); _RUBYReady = true; } return _RUBYContent; } }
        private static Java.Lang.String _RUBYContent = default;
        private static bool _RUBYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#SECT"/>
        /// </summary>
        public static Java.Lang.String SECT { get { if (!_SECTReady) { _SECTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECT"); _SECTReady = true; } return _SECTContent; } }
        private static Java.Lang.String _SECTContent = default;
        private static bool _SECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#SPAN"/>
        /// </summary>
        public static Java.Lang.String SPAN { get { if (!_SPANReady) { _SPANContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SPAN"); _SPANReady = true; } return _SPANContent; } }
        private static Java.Lang.String _SPANContent = default;
        private static bool _SPANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#T_BODY"/>
        /// </summary>
        public static Java.Lang.String T_BODY { get { if (!_T_BODYReady) { _T_BODYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "T_BODY"); _T_BODYReady = true; } return _T_BODYContent; } }
        private static Java.Lang.String _T_BODYContent = default;
        private static bool _T_BODYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#T_FOOT"/>
        /// </summary>
        public static Java.Lang.String T_FOOT { get { if (!_T_FOOTReady) { _T_FOOTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "T_FOOT"); _T_FOOTReady = true; } return _T_FOOTContent; } }
        private static Java.Lang.String _T_FOOTContent = default;
        private static bool _T_FOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#T_HEAD"/>
        /// </summary>
        public static Java.Lang.String T_HEAD { get { if (!_T_HEADReady) { _T_HEADContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "T_HEAD"); _T_HEADReady = true; } return _T_HEADContent; } }
        private static Java.Lang.String _T_HEADContent = default;
        private static bool _T_HEADReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TABLE"/>
        /// </summary>
        public static Java.Lang.String TABLE { get { if (!_TABLEReady) { _TABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TABLE"); _TABLEReady = true; } return _TABLEContent; } }
        private static Java.Lang.String _TABLEContent = default;
        private static bool _TABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TD"/>
        /// </summary>
        public static Java.Lang.String TD { get { if (!_TDReady) { _TDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TD"); _TDReady = true; } return _TDContent; } }
        private static Java.Lang.String _TDContent = default;
        private static bool _TDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TH"/>
        /// </summary>
        public static Java.Lang.String TH { get { if (!_THReady) { _THContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TH"); _THReady = true; } return _THContent; } }
        private static Java.Lang.String _THContent = default;
        private static bool _THReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TOC"/>
        /// </summary>
        public static Java.Lang.String TOC { get { if (!_TOCReady) { _TOCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TOC"); _TOCReady = true; } return _TOCContent; } }
        private static Java.Lang.String _TOCContent = default;
        private static bool _TOCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TOCI"/>
        /// </summary>
        public static Java.Lang.String TOCI { get { if (!_TOCIReady) { _TOCIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TOCI"); _TOCIReady = true; } return _TOCIContent; } }
        private static Java.Lang.String _TOCIContent = default;
        private static bool _TOCIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#TR"/>
        /// </summary>
        public static Java.Lang.String TR { get { if (!_TRReady) { _TRContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TR"); _TRReady = true; } return _TRContent; } }
        private static Java.Lang.String _TRContent = default;
        private static bool _TRReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#WARICHU"/>
        /// </summary>
        public static Java.Lang.String WARICHU { get { if (!_WARICHUReady) { _WARICHUContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WARICHU"); _WARICHUReady = true; } return _WARICHUContent; } }
        private static Java.Lang.String _WARICHUContent = default;
        private static bool _WARICHUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#WP"/>
        /// </summary>
        public static Java.Lang.String WP { get { if (!_WPReady) { _WPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WP"); _WPReady = true; } return _WPContent; } }
        private static Java.Lang.String _WPContent = default;
        private static bool _WPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#WT"/>
        /// </summary>
        public static Java.Lang.String WT { get { if (!_WTReady) { _WTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WT"); _WTReady = true; } return _WTContent; } }
        private static Java.Lang.String _WTContent = default;
        private static bool _WTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.html#types"/>
        /// </summary>
        public static Java.Util.List types { get { if (!_typesReady) { _typesContent = SGetField<Java.Util.List>(LocalBridgeClazz, "types"); _typesReady = true; } return _typesContent; } }
        private static Java.Util.List _typesContent = default;
        private static bool _typesReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}