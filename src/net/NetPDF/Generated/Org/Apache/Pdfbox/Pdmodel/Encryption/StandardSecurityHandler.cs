/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using pdfbox-3.0.5.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Encryption
{
    #region StandardSecurityHandler declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html"/>
    /// </summary>
    public partial class StandardSecurityHandler : Org.Apache.Pdfbox.Pdmodel.Encryption.SecurityHandler<Org.Apache.Pdfbox.Pdmodel.Encryption.StandardProtectionPolicy>
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public StandardSecurityHandler() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public StandardSecurityHandler(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region StandardSecurityHandler implementation
    public partial class StandardSecurityHandler
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Encryption.StandardProtectionPolicy"/></param>
        public StandardSecurityHandler(Org.Apache.Pdfbox.Pdmodel.Encryption.StandardProtectionPolicy arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#PROTECTION_POLICY_CLASS"/>
        /// </summary>
        public static Java.Lang.Class PROTECTION_POLICY_CLASS { get { if (!_PROTECTION_POLICY_CLASSReady) { _PROTECTION_POLICY_CLASSContent = SGetField<Java.Lang.Class>(LocalBridgeClazz, "PROTECTION_POLICY_CLASS"); _PROTECTION_POLICY_CLASSReady = true; } return _PROTECTION_POLICY_CLASSContent; } }
        private static Java.Lang.Class _PROTECTION_POLICY_CLASSContent = default;
        private static bool _PROTECTION_POLICY_CLASSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#FILTER"/>
        /// </summary>
        public static Java.Lang.String FILTER { get { if (!_FILTERReady) { _FILTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILTER"); _FILTERReady = true; } return _FILTERContent; } }
        private static Java.Lang.String _FILTERContent = default;
        private static bool _FILTERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#isOwnerPassword-byte[]-byte[]-byte[]-int-byte[]-int-int-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public bool IsOwnerPassword(byte[] arg0, byte[] arg1, byte[] arg2, int arg3, byte[] arg4, int arg5, int arg6, bool arg7)
        {
            return IExecuteWithSignature<bool>("isOwnerPassword", "([B[B[BI[BIIZ)Z", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#isOwnerPassword-java.lang.String-byte[]-byte[]-int-byte[]-int-int-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public bool IsOwnerPassword(Java.Lang.String arg0, byte[] arg1, byte[] arg2, int arg3, byte[] arg4, int arg5, int arg6, bool arg7)
        {
            return IExecuteWithSignature<bool>("isOwnerPassword", "(Ljava/lang/String;[B[BI[BIIZ)Z", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#isUserPassword-byte[]-byte[]-byte[]-int-byte[]-int-int-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public bool IsUserPassword(byte[] arg0, byte[] arg1, byte[] arg2, int arg3, byte[] arg4, int arg5, int arg6, bool arg7)
        {
            return IExecuteWithSignature<bool>("isUserPassword", "([B[B[BI[BIIZ)Z", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#isUserPassword-java.lang.String-byte[]-byte[]-int-byte[]-int-int-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public bool IsUserPassword(Java.Lang.String arg0, byte[] arg1, byte[] arg2, int arg3, byte[] arg4, int arg5, int arg6, bool arg7)
        {
            return IExecuteWithSignature<bool>("isUserPassword", "(Ljava/lang/String;[B[BI[BIIZ)Z", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#computeEncryptedKey-byte[]-byte[]-byte[]-byte[]-byte[]-int-byte[]-int-int-boolean-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="byte"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="bool"/></param>
        /// <param name="arg10"><see cref="bool"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] ComputeEncryptedKey(byte[] arg0, byte[] arg1, byte[] arg2, byte[] arg3, byte[] arg4, int arg5, byte[] arg6, int arg7, int arg8, bool arg9, bool arg10)
        {
            return IExecuteWithSignatureArray<byte>("computeEncryptedKey", "([B[B[B[B[BI[BIIZZ)[B", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#computeOwnerPassword-byte[]-byte[]-int-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] ComputeOwnerPassword(byte[] arg0, byte[] arg1, int arg2, int arg3)
        {
            return IExecuteWithSignatureArray<byte>("computeOwnerPassword", "([B[BII)[B", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#computeUserPassword-byte[]-byte[]-int-byte[]-int-int-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="bool"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] ComputeUserPassword(byte[] arg0, byte[] arg1, int arg2, byte[] arg3, int arg4, int arg5, bool arg6)
        {
            return IExecuteWithSignatureArray<byte>("computeUserPassword", "([B[BI[BIIZ)[B", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.5/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.html#getUserPassword-byte[]-byte[]-int-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public byte[] GetUserPassword(byte[] arg0, byte[] arg1, int arg2, int arg3)
        {
            return IExecuteWithSignatureArray<byte>("getUserPassword", "([B[BII)[B", arg0, arg1, arg2, arg3);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}