/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Taggedpdf
{
    #region PDLayoutAttributeObject declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html"/>
    /// </summary>
    public partial class PDLayoutAttributeObject : Org.Apache.Pdfbox.Pdmodel.Documentinterchange.Taggedpdf.PDStandardAttributeObject
    {
        const string _bridgeClassName = "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PDLayoutAttributeObject() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PDLayoutAttributeObject(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region PDLayoutAttributeObject implementation
    public partial class PDLayoutAttributeObject
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject(org.apache.pdfbox.cos.COSDictionary)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        public PDLayoutAttributeObject(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BLOCK_ALIGN_AFTER"/>
        /// </summary>
        public static Java.Lang.String BLOCK_ALIGN_AFTER { get { if (!_BLOCK_ALIGN_AFTERReady) { _BLOCK_ALIGN_AFTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOCK_ALIGN_AFTER"); _BLOCK_ALIGN_AFTERReady = true; } return _BLOCK_ALIGN_AFTERContent; } }
        private static Java.Lang.String _BLOCK_ALIGN_AFTERContent = default;
        private static bool _BLOCK_ALIGN_AFTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BLOCK_ALIGN_BEFORE"/>
        /// </summary>
        public static Java.Lang.String BLOCK_ALIGN_BEFORE { get { if (!_BLOCK_ALIGN_BEFOREReady) { _BLOCK_ALIGN_BEFOREContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOCK_ALIGN_BEFORE"); _BLOCK_ALIGN_BEFOREReady = true; } return _BLOCK_ALIGN_BEFOREContent; } }
        private static Java.Lang.String _BLOCK_ALIGN_BEFOREContent = default;
        private static bool _BLOCK_ALIGN_BEFOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BLOCK_ALIGN_JUSTIFY"/>
        /// </summary>
        public static Java.Lang.String BLOCK_ALIGN_JUSTIFY { get { if (!_BLOCK_ALIGN_JUSTIFYReady) { _BLOCK_ALIGN_JUSTIFYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOCK_ALIGN_JUSTIFY"); _BLOCK_ALIGN_JUSTIFYReady = true; } return _BLOCK_ALIGN_JUSTIFYContent; } }
        private static Java.Lang.String _BLOCK_ALIGN_JUSTIFYContent = default;
        private static bool _BLOCK_ALIGN_JUSTIFYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BLOCK_ALIGN_MIDDLE"/>
        /// </summary>
        public static Java.Lang.String BLOCK_ALIGN_MIDDLE { get { if (!_BLOCK_ALIGN_MIDDLEReady) { _BLOCK_ALIGN_MIDDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOCK_ALIGN_MIDDLE"); _BLOCK_ALIGN_MIDDLEReady = true; } return _BLOCK_ALIGN_MIDDLEContent; } }
        private static Java.Lang.String _BLOCK_ALIGN_MIDDLEContent = default;
        private static bool _BLOCK_ALIGN_MIDDLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_DASHED"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_DASHED { get { if (!_BORDER_STYLE_DASHEDReady) { _BORDER_STYLE_DASHEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_DASHED"); _BORDER_STYLE_DASHEDReady = true; } return _BORDER_STYLE_DASHEDContent; } }
        private static Java.Lang.String _BORDER_STYLE_DASHEDContent = default;
        private static bool _BORDER_STYLE_DASHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_DOTTED"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_DOTTED { get { if (!_BORDER_STYLE_DOTTEDReady) { _BORDER_STYLE_DOTTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_DOTTED"); _BORDER_STYLE_DOTTEDReady = true; } return _BORDER_STYLE_DOTTEDContent; } }
        private static Java.Lang.String _BORDER_STYLE_DOTTEDContent = default;
        private static bool _BORDER_STYLE_DOTTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_DOUBLE"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_DOUBLE { get { if (!_BORDER_STYLE_DOUBLEReady) { _BORDER_STYLE_DOUBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_DOUBLE"); _BORDER_STYLE_DOUBLEReady = true; } return _BORDER_STYLE_DOUBLEContent; } }
        private static Java.Lang.String _BORDER_STYLE_DOUBLEContent = default;
        private static bool _BORDER_STYLE_DOUBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_GROOVE"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_GROOVE { get { if (!_BORDER_STYLE_GROOVEReady) { _BORDER_STYLE_GROOVEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_GROOVE"); _BORDER_STYLE_GROOVEReady = true; } return _BORDER_STYLE_GROOVEContent; } }
        private static Java.Lang.String _BORDER_STYLE_GROOVEContent = default;
        private static bool _BORDER_STYLE_GROOVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_HIDDEN"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_HIDDEN { get { if (!_BORDER_STYLE_HIDDENReady) { _BORDER_STYLE_HIDDENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_HIDDEN"); _BORDER_STYLE_HIDDENReady = true; } return _BORDER_STYLE_HIDDENContent; } }
        private static Java.Lang.String _BORDER_STYLE_HIDDENContent = default;
        private static bool _BORDER_STYLE_HIDDENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_INSET"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_INSET { get { if (!_BORDER_STYLE_INSETReady) { _BORDER_STYLE_INSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_INSET"); _BORDER_STYLE_INSETReady = true; } return _BORDER_STYLE_INSETContent; } }
        private static Java.Lang.String _BORDER_STYLE_INSETContent = default;
        private static bool _BORDER_STYLE_INSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_NONE"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_NONE { get { if (!_BORDER_STYLE_NONEReady) { _BORDER_STYLE_NONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_NONE"); _BORDER_STYLE_NONEReady = true; } return _BORDER_STYLE_NONEContent; } }
        private static Java.Lang.String _BORDER_STYLE_NONEContent = default;
        private static bool _BORDER_STYLE_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_OUTSET"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_OUTSET { get { if (!_BORDER_STYLE_OUTSETReady) { _BORDER_STYLE_OUTSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_OUTSET"); _BORDER_STYLE_OUTSETReady = true; } return _BORDER_STYLE_OUTSETContent; } }
        private static Java.Lang.String _BORDER_STYLE_OUTSETContent = default;
        private static bool _BORDER_STYLE_OUTSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_RIDGE"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_RIDGE { get { if (!_BORDER_STYLE_RIDGEReady) { _BORDER_STYLE_RIDGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_RIDGE"); _BORDER_STYLE_RIDGEReady = true; } return _BORDER_STYLE_RIDGEContent; } }
        private static Java.Lang.String _BORDER_STYLE_RIDGEContent = default;
        private static bool _BORDER_STYLE_RIDGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#BORDER_STYLE_SOLID"/>
        /// </summary>
        public static Java.Lang.String BORDER_STYLE_SOLID { get { if (!_BORDER_STYLE_SOLIDReady) { _BORDER_STYLE_SOLIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BORDER_STYLE_SOLID"); _BORDER_STYLE_SOLIDReady = true; } return _BORDER_STYLE_SOLIDContent; } }
        private static Java.Lang.String _BORDER_STYLE_SOLIDContent = default;
        private static bool _BORDER_STYLE_SOLIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_180_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_180_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_180_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_180_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_180_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_180_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_180_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_180_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_180_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_270_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_270_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_270_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_270_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_270_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_270_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_270_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_270_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_270_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_360_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_360_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_360_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_360_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_360_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_360_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_360_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_360_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_360_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_90_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_90_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_90_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_90_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_90_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_90_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_90_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_90_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_90_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_AUTO"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_AUTO { get { if (!_GLYPH_ORIENTATION_VERTICAL_AUTOReady) { _GLYPH_ORIENTATION_VERTICAL_AUTOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_AUTO"); _GLYPH_ORIENTATION_VERTICAL_AUTOReady = true; } return _GLYPH_ORIENTATION_VERTICAL_AUTOContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_AUTOContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES"/>
        /// </summary>
        public static Java.Lang.String GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES { get { if (!_GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESReady) { _GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES"); _GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESReady = true; } return _GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESContent; } }
        private static Java.Lang.String _GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESContent = default;
        private static bool _GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#HEIGHT_AUTO"/>
        /// </summary>
        public static Java.Lang.String HEIGHT_AUTO { get { if (!_HEIGHT_AUTOReady) { _HEIGHT_AUTOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HEIGHT_AUTO"); _HEIGHT_AUTOReady = true; } return _HEIGHT_AUTOContent; } }
        private static Java.Lang.String _HEIGHT_AUTOContent = default;
        private static bool _HEIGHT_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#INLINE_ALIGN_CENTER"/>
        /// </summary>
        public static Java.Lang.String INLINE_ALIGN_CENTER { get { if (!_INLINE_ALIGN_CENTERReady) { _INLINE_ALIGN_CENTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INLINE_ALIGN_CENTER"); _INLINE_ALIGN_CENTERReady = true; } return _INLINE_ALIGN_CENTERContent; } }
        private static Java.Lang.String _INLINE_ALIGN_CENTERContent = default;
        private static bool _INLINE_ALIGN_CENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#INLINE_ALIGN_END"/>
        /// </summary>
        public static Java.Lang.String INLINE_ALIGN_END { get { if (!_INLINE_ALIGN_ENDReady) { _INLINE_ALIGN_ENDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INLINE_ALIGN_END"); _INLINE_ALIGN_ENDReady = true; } return _INLINE_ALIGN_ENDContent; } }
        private static Java.Lang.String _INLINE_ALIGN_ENDContent = default;
        private static bool _INLINE_ALIGN_ENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#INLINE_ALIGN_START"/>
        /// </summary>
        public static Java.Lang.String INLINE_ALIGN_START { get { if (!_INLINE_ALIGN_STARTReady) { _INLINE_ALIGN_STARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INLINE_ALIGN_START"); _INLINE_ALIGN_STARTReady = true; } return _INLINE_ALIGN_STARTContent; } }
        private static Java.Lang.String _INLINE_ALIGN_STARTContent = default;
        private static bool _INLINE_ALIGN_STARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#LINE_HEIGHT_AUTO"/>
        /// </summary>
        public static Java.Lang.String LINE_HEIGHT_AUTO { get { if (!_LINE_HEIGHT_AUTOReady) { _LINE_HEIGHT_AUTOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LINE_HEIGHT_AUTO"); _LINE_HEIGHT_AUTOReady = true; } return _LINE_HEIGHT_AUTOContent; } }
        private static Java.Lang.String _LINE_HEIGHT_AUTOContent = default;
        private static bool _LINE_HEIGHT_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#LINE_HEIGHT_NORMAL"/>
        /// </summary>
        public static Java.Lang.String LINE_HEIGHT_NORMAL { get { if (!_LINE_HEIGHT_NORMALReady) { _LINE_HEIGHT_NORMALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LINE_HEIGHT_NORMAL"); _LINE_HEIGHT_NORMALReady = true; } return _LINE_HEIGHT_NORMALContent; } }
        private static Java.Lang.String _LINE_HEIGHT_NORMALContent = default;
        private static bool _LINE_HEIGHT_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#OWNER_LAYOUT"/>
        /// </summary>
        public static Java.Lang.String OWNER_LAYOUT { get { if (!_OWNER_LAYOUTReady) { _OWNER_LAYOUTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "OWNER_LAYOUT"); _OWNER_LAYOUTReady = true; } return _OWNER_LAYOUTContent; } }
        private static Java.Lang.String _OWNER_LAYOUTContent = default;
        private static bool _OWNER_LAYOUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#PLACEMENT_BEFORE"/>
        /// </summary>
        public static Java.Lang.String PLACEMENT_BEFORE { get { if (!_PLACEMENT_BEFOREReady) { _PLACEMENT_BEFOREContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PLACEMENT_BEFORE"); _PLACEMENT_BEFOREReady = true; } return _PLACEMENT_BEFOREContent; } }
        private static Java.Lang.String _PLACEMENT_BEFOREContent = default;
        private static bool _PLACEMENT_BEFOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#PLACEMENT_BLOCK"/>
        /// </summary>
        public static Java.Lang.String PLACEMENT_BLOCK { get { if (!_PLACEMENT_BLOCKReady) { _PLACEMENT_BLOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PLACEMENT_BLOCK"); _PLACEMENT_BLOCKReady = true; } return _PLACEMENT_BLOCKContent; } }
        private static Java.Lang.String _PLACEMENT_BLOCKContent = default;
        private static bool _PLACEMENT_BLOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#PLACEMENT_END"/>
        /// </summary>
        public static Java.Lang.String PLACEMENT_END { get { if (!_PLACEMENT_ENDReady) { _PLACEMENT_ENDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PLACEMENT_END"); _PLACEMENT_ENDReady = true; } return _PLACEMENT_ENDContent; } }
        private static Java.Lang.String _PLACEMENT_ENDContent = default;
        private static bool _PLACEMENT_ENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#PLACEMENT_INLINE"/>
        /// </summary>
        public static Java.Lang.String PLACEMENT_INLINE { get { if (!_PLACEMENT_INLINEReady) { _PLACEMENT_INLINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PLACEMENT_INLINE"); _PLACEMENT_INLINEReady = true; } return _PLACEMENT_INLINEContent; } }
        private static Java.Lang.String _PLACEMENT_INLINEContent = default;
        private static bool _PLACEMENT_INLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#PLACEMENT_START"/>
        /// </summary>
        public static Java.Lang.String PLACEMENT_START { get { if (!_PLACEMENT_STARTReady) { _PLACEMENT_STARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PLACEMENT_START"); _PLACEMENT_STARTReady = true; } return _PLACEMENT_STARTContent; } }
        private static Java.Lang.String _PLACEMENT_STARTContent = default;
        private static bool _PLACEMENT_STARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_ALIGN_CENTER"/>
        /// </summary>
        public static Java.Lang.String RUBY_ALIGN_CENTER { get { if (!_RUBY_ALIGN_CENTERReady) { _RUBY_ALIGN_CENTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_ALIGN_CENTER"); _RUBY_ALIGN_CENTERReady = true; } return _RUBY_ALIGN_CENTERContent; } }
        private static Java.Lang.String _RUBY_ALIGN_CENTERContent = default;
        private static bool _RUBY_ALIGN_CENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_ALIGN_DISTRIBUTE"/>
        /// </summary>
        public static Java.Lang.String RUBY_ALIGN_DISTRIBUTE { get { if (!_RUBY_ALIGN_DISTRIBUTEReady) { _RUBY_ALIGN_DISTRIBUTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_ALIGN_DISTRIBUTE"); _RUBY_ALIGN_DISTRIBUTEReady = true; } return _RUBY_ALIGN_DISTRIBUTEContent; } }
        private static Java.Lang.String _RUBY_ALIGN_DISTRIBUTEContent = default;
        private static bool _RUBY_ALIGN_DISTRIBUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_ALIGN_END"/>
        /// </summary>
        public static Java.Lang.String RUBY_ALIGN_END { get { if (!_RUBY_ALIGN_ENDReady) { _RUBY_ALIGN_ENDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_ALIGN_END"); _RUBY_ALIGN_ENDReady = true; } return _RUBY_ALIGN_ENDContent; } }
        private static Java.Lang.String _RUBY_ALIGN_ENDContent = default;
        private static bool _RUBY_ALIGN_ENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_ALIGN_JUSTIFY"/>
        /// </summary>
        public static Java.Lang.String RUBY_ALIGN_JUSTIFY { get { if (!_RUBY_ALIGN_JUSTIFYReady) { _RUBY_ALIGN_JUSTIFYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_ALIGN_JUSTIFY"); _RUBY_ALIGN_JUSTIFYReady = true; } return _RUBY_ALIGN_JUSTIFYContent; } }
        private static Java.Lang.String _RUBY_ALIGN_JUSTIFYContent = default;
        private static bool _RUBY_ALIGN_JUSTIFYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_ALIGN_START"/>
        /// </summary>
        public static Java.Lang.String RUBY_ALIGN_START { get { if (!_RUBY_ALIGN_STARTReady) { _RUBY_ALIGN_STARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_ALIGN_START"); _RUBY_ALIGN_STARTReady = true; } return _RUBY_ALIGN_STARTContent; } }
        private static Java.Lang.String _RUBY_ALIGN_STARTContent = default;
        private static bool _RUBY_ALIGN_STARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_POSITION_AFTER"/>
        /// </summary>
        public static Java.Lang.String RUBY_POSITION_AFTER { get { if (!_RUBY_POSITION_AFTERReady) { _RUBY_POSITION_AFTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_POSITION_AFTER"); _RUBY_POSITION_AFTERReady = true; } return _RUBY_POSITION_AFTERContent; } }
        private static Java.Lang.String _RUBY_POSITION_AFTERContent = default;
        private static bool _RUBY_POSITION_AFTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_POSITION_BEFORE"/>
        /// </summary>
        public static Java.Lang.String RUBY_POSITION_BEFORE { get { if (!_RUBY_POSITION_BEFOREReady) { _RUBY_POSITION_BEFOREContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_POSITION_BEFORE"); _RUBY_POSITION_BEFOREReady = true; } return _RUBY_POSITION_BEFOREContent; } }
        private static Java.Lang.String _RUBY_POSITION_BEFOREContent = default;
        private static bool _RUBY_POSITION_BEFOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_POSITION_INLINE"/>
        /// </summary>
        public static Java.Lang.String RUBY_POSITION_INLINE { get { if (!_RUBY_POSITION_INLINEReady) { _RUBY_POSITION_INLINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_POSITION_INLINE"); _RUBY_POSITION_INLINEReady = true; } return _RUBY_POSITION_INLINEContent; } }
        private static Java.Lang.String _RUBY_POSITION_INLINEContent = default;
        private static bool _RUBY_POSITION_INLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#RUBY_POSITION_WARICHU"/>
        /// </summary>
        public static Java.Lang.String RUBY_POSITION_WARICHU { get { if (!_RUBY_POSITION_WARICHUReady) { _RUBY_POSITION_WARICHUContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RUBY_POSITION_WARICHU"); _RUBY_POSITION_WARICHUReady = true; } return _RUBY_POSITION_WARICHUContent; } }
        private static Java.Lang.String _RUBY_POSITION_WARICHUContent = default;
        private static bool _RUBY_POSITION_WARICHUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_ALIGN_CENTER"/>
        /// </summary>
        public static Java.Lang.String TEXT_ALIGN_CENTER { get { if (!_TEXT_ALIGN_CENTERReady) { _TEXT_ALIGN_CENTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_ALIGN_CENTER"); _TEXT_ALIGN_CENTERReady = true; } return _TEXT_ALIGN_CENTERContent; } }
        private static Java.Lang.String _TEXT_ALIGN_CENTERContent = default;
        private static bool _TEXT_ALIGN_CENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_ALIGN_END"/>
        /// </summary>
        public static Java.Lang.String TEXT_ALIGN_END { get { if (!_TEXT_ALIGN_ENDReady) { _TEXT_ALIGN_ENDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_ALIGN_END"); _TEXT_ALIGN_ENDReady = true; } return _TEXT_ALIGN_ENDContent; } }
        private static Java.Lang.String _TEXT_ALIGN_ENDContent = default;
        private static bool _TEXT_ALIGN_ENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_ALIGN_JUSTIFY"/>
        /// </summary>
        public static Java.Lang.String TEXT_ALIGN_JUSTIFY { get { if (!_TEXT_ALIGN_JUSTIFYReady) { _TEXT_ALIGN_JUSTIFYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_ALIGN_JUSTIFY"); _TEXT_ALIGN_JUSTIFYReady = true; } return _TEXT_ALIGN_JUSTIFYContent; } }
        private static Java.Lang.String _TEXT_ALIGN_JUSTIFYContent = default;
        private static bool _TEXT_ALIGN_JUSTIFYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_ALIGN_START"/>
        /// </summary>
        public static Java.Lang.String TEXT_ALIGN_START { get { if (!_TEXT_ALIGN_STARTReady) { _TEXT_ALIGN_STARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_ALIGN_START"); _TEXT_ALIGN_STARTReady = true; } return _TEXT_ALIGN_STARTContent; } }
        private static Java.Lang.String _TEXT_ALIGN_STARTContent = default;
        private static bool _TEXT_ALIGN_STARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_DECORATION_TYPE_LINE_THROUGH"/>
        /// </summary>
        public static Java.Lang.String TEXT_DECORATION_TYPE_LINE_THROUGH { get { if (!_TEXT_DECORATION_TYPE_LINE_THROUGHReady) { _TEXT_DECORATION_TYPE_LINE_THROUGHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_DECORATION_TYPE_LINE_THROUGH"); _TEXT_DECORATION_TYPE_LINE_THROUGHReady = true; } return _TEXT_DECORATION_TYPE_LINE_THROUGHContent; } }
        private static Java.Lang.String _TEXT_DECORATION_TYPE_LINE_THROUGHContent = default;
        private static bool _TEXT_DECORATION_TYPE_LINE_THROUGHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_DECORATION_TYPE_NONE"/>
        /// </summary>
        public static Java.Lang.String TEXT_DECORATION_TYPE_NONE { get { if (!_TEXT_DECORATION_TYPE_NONEReady) { _TEXT_DECORATION_TYPE_NONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_DECORATION_TYPE_NONE"); _TEXT_DECORATION_TYPE_NONEReady = true; } return _TEXT_DECORATION_TYPE_NONEContent; } }
        private static Java.Lang.String _TEXT_DECORATION_TYPE_NONEContent = default;
        private static bool _TEXT_DECORATION_TYPE_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_DECORATION_TYPE_OVERLINE"/>
        /// </summary>
        public static Java.Lang.String TEXT_DECORATION_TYPE_OVERLINE { get { if (!_TEXT_DECORATION_TYPE_OVERLINEReady) { _TEXT_DECORATION_TYPE_OVERLINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_DECORATION_TYPE_OVERLINE"); _TEXT_DECORATION_TYPE_OVERLINEReady = true; } return _TEXT_DECORATION_TYPE_OVERLINEContent; } }
        private static Java.Lang.String _TEXT_DECORATION_TYPE_OVERLINEContent = default;
        private static bool _TEXT_DECORATION_TYPE_OVERLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#TEXT_DECORATION_TYPE_UNDERLINE"/>
        /// </summary>
        public static Java.Lang.String TEXT_DECORATION_TYPE_UNDERLINE { get { if (!_TEXT_DECORATION_TYPE_UNDERLINEReady) { _TEXT_DECORATION_TYPE_UNDERLINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_DECORATION_TYPE_UNDERLINE"); _TEXT_DECORATION_TYPE_UNDERLINEReady = true; } return _TEXT_DECORATION_TYPE_UNDERLINEContent; } }
        private static Java.Lang.String _TEXT_DECORATION_TYPE_UNDERLINEContent = default;
        private static bool _TEXT_DECORATION_TYPE_UNDERLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#WIDTH_AUTO"/>
        /// </summary>
        public static Java.Lang.String WIDTH_AUTO { get { if (!_WIDTH_AUTOReady) { _WIDTH_AUTOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WIDTH_AUTO"); _WIDTH_AUTOReady = true; } return _WIDTH_AUTOContent; } }
        private static Java.Lang.String _WIDTH_AUTOContent = default;
        private static bool _WIDTH_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#WRITING_MODE_LRTB"/>
        /// </summary>
        public static Java.Lang.String WRITING_MODE_LRTB { get { if (!_WRITING_MODE_LRTBReady) { _WRITING_MODE_LRTBContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WRITING_MODE_LRTB"); _WRITING_MODE_LRTBReady = true; } return _WRITING_MODE_LRTBContent; } }
        private static Java.Lang.String _WRITING_MODE_LRTBContent = default;
        private static bool _WRITING_MODE_LRTBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#WRITING_MODE_RLTB"/>
        /// </summary>
        public static Java.Lang.String WRITING_MODE_RLTB { get { if (!_WRITING_MODE_RLTBReady) { _WRITING_MODE_RLTBContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WRITING_MODE_RLTB"); _WRITING_MODE_RLTBReady = true; } return _WRITING_MODE_RLTBContent; } }
        private static Java.Lang.String _WRITING_MODE_RLTBContent = default;
        private static bool _WRITING_MODE_RLTBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#WRITING_MODE_TBRL"/>
        /// </summary>
        public static Java.Lang.String WRITING_MODE_TBRL { get { if (!_WRITING_MODE_TBRLReady) { _WRITING_MODE_TBRLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WRITING_MODE_TBRL"); _WRITING_MODE_TBRLReady = true; } return _WRITING_MODE_TBRLContent; } }
        private static Java.Lang.String _WRITING_MODE_TBRLContent = default;
        private static bool _WRITING_MODE_TBRLReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBackgroundColor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBackgroundColor-org.apache.pdfbox.pdmodel.graphics.color.PDGamma-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma BackgroundColor
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma>("getBackgroundColor", "()Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;"); } set { IExecuteWithSignature("setBackgroundColor", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBaselineShift--"/> 
        /// </summary>
        public float BaselineShift
        {
            get { return IExecuteWithSignature<float>("getBaselineShift", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBBox--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBBox-org.apache.pdfbox.pdmodel.common.PDRectangle-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle BBox
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Common.PDRectangle>("getBBox", "()Lorg/apache/pdfbox/pdmodel/common/PDRectangle;"); } set { IExecuteWithSignature("setBBox", "(Lorg/apache/pdfbox/pdmodel/common/PDRectangle;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBlockAlign--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBlockAlign-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String BlockAlign
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getBlockAlign", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setBlockAlign", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBorderColors--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBorderColors-org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours-"/>
        /// </summary>
        public object BorderColors
        {
            get { return IExecuteWithSignature("getBorderColors", "()Ljava/lang/Object;"); } set { IExecuteWithSignature("setBorderColors", "(Lorg/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBorderStyle--"/> 
        /// </summary>
        public object BorderStyle
        {
            get { return IExecuteWithSignature("getBorderStyle", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getBorderThickness--"/> 
        /// </summary>
        public object BorderThickness
        {
            get { return IExecuteWithSignature("getBorderThickness", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getColor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColor-org.apache.pdfbox.pdmodel.graphics.color.PDGamma-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma Color
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma>("getColor", "()Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;"); } set { IExecuteWithSignature("setColor", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getColumnCount--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColumnCount-int-"/>
        /// </summary>
        public int ColumnCount
        {
            get { return IExecuteWithSignature<int>("getColumnCount", "()I"); } set { IExecuteWithSignature("setColumnCount", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getColumnGap--"/> 
        /// </summary>
        public object ColumnGap
        {
            get { return IExecuteWithSignature("getColumnGap", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getColumnWidths--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColumnWidths-float[]-"/>
        /// </summary>
        public object ColumnWidths
        {
            get { return IExecuteWithSignature("getColumnWidths", "()Ljava/lang/Object;"); } set { IExecuteWithSignature("setColumnWidths", "([F)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getEndIndent--"/> 
        /// </summary>
        public float EndIndent
        {
            get { return IExecuteWithSignature<float>("getEndIndent", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getGlyphOrientationVertical--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setGlyphOrientationVertical-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String GlyphOrientationVertical
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getGlyphOrientationVertical", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setGlyphOrientationVertical", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getHeight--"/> 
        /// </summary>
        public object Height
        {
            get { return IExecuteWithSignature("getHeight", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getInlineAlign--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setInlineAlign-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String InlineAlign
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getInlineAlign", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setInlineAlign", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getLineHeight--"/> 
        /// </summary>
        public object LineHeight
        {
            get { return IExecuteWithSignature("getLineHeight", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getPadding--"/> 
        /// </summary>
        public object Padding
        {
            get { return IExecuteWithSignature("getPadding", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getPlacement--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setPlacement-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String Placement
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getPlacement", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setPlacement", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getRubyAlign--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setRubyAlign-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String RubyAlign
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getRubyAlign", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setRubyAlign", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getRubyPosition--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setRubyPosition-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String RubyPosition
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getRubyPosition", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setRubyPosition", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getSpaceAfter--"/> 
        /// </summary>
        public float SpaceAfter
        {
            get { return IExecuteWithSignature<float>("getSpaceAfter", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getSpaceBefore--"/> 
        /// </summary>
        public float SpaceBefore
        {
            get { return IExecuteWithSignature<float>("getSpaceBefore", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getStartIndent--"/> 
        /// </summary>
        public float StartIndent
        {
            get { return IExecuteWithSignature<float>("getStartIndent", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTBorderStyle--"/> 
        /// </summary>
        public object TBorderStyle
        {
            get { return IExecuteWithSignature("getTBorderStyle", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTextAlign--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextAlign-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String TextAlign
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getTextAlign", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setTextAlign", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTextDecorationColor--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextDecorationColor-org.apache.pdfbox.pdmodel.graphics.color.PDGamma-"/>
        /// </summary>
        public Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma TextDecorationColor
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma>("getTextDecorationColor", "()Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;"); } set { IExecuteWithSignature("setTextDecorationColor", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTextDecorationThickness--"/> 
        /// </summary>
        public float TextDecorationThickness
        {
            get { return IExecuteWithSignature<float>("getTextDecorationThickness", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTextDecorationType--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextDecorationType-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String TextDecorationType
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getTextDecorationType", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setTextDecorationType", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTextIndent--"/> 
        /// </summary>
        public float TextIndent
        {
            get { return IExecuteWithSignature<float>("getTextIndent", "()F"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getTPadding--"/> 
        /// </summary>
        public object TPadding
        {
            get { return IExecuteWithSignature("getTPadding", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getWidth--"/> 
        /// </summary>
        public object Width
        {
            get { return IExecuteWithSignature("getWidth", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#getWritingMode--"/> <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setWritingMode-java.lang.String-"/>
        /// </summary>
        public Java.Lang.String WritingMode
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getWritingMode", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setWritingMode", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllBorderColors-org.apache.pdfbox.pdmodel.graphics.color.PDGamma-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma"/></param>
        public void SetAllBorderColors(Org.Apache.Pdfbox.Pdmodel.Graphics.Color.PDGamma arg0)
        {
            IExecuteWithSignature("setAllBorderColors", "(Lorg/apache/pdfbox/pdmodel/graphics/color/PDGamma;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllBorderStyles-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetAllBorderStyles(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setAllBorderStyles", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllBorderThicknesses-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetAllBorderThicknesses(float arg0)
        {
            IExecuteWithSignature("setAllBorderThicknesses", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllBorderThicknesses-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetAllBorderThicknesses(int arg0)
        {
            IExecuteWithSignature("setAllBorderThicknesses", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllColumnWidths-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetAllColumnWidths(float arg0)
        {
            IExecuteWithSignature("setAllColumnWidths", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllColumnWidths-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetAllColumnWidths(int arg0)
        {
            IExecuteWithSignature("setAllColumnWidths", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllPaddings-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetAllPaddings(float arg0)
        {
            IExecuteWithSignature("setAllPaddings", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllPaddings-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetAllPaddings(int arg0)
        {
            IExecuteWithSignature("setAllPaddings", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllTBorderStyles-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetAllTBorderStyles(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setAllTBorderStyles", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllTPaddings-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetAllTPaddings(float arg0)
        {
            IExecuteWithSignature("setAllTPaddings", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setAllTPaddings-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetAllTPaddings(int arg0)
        {
            IExecuteWithSignature("setAllTPaddings", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBaselineShift-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetBaselineShift(float arg0)
        {
            IExecuteWithSignature("setBaselineShift", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBaselineShift-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetBaselineShift(int arg0)
        {
            IExecuteWithSignature("setBaselineShift", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBorderStyles-java.lang.String[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetBorderStyles(Java.Lang.String[] arg0)
        {
            IExecuteWithSignature("setBorderStyles", "([Ljava/lang/String;)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setBorderThicknesses-float[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetBorderThicknesses(float[] arg0)
        {
            IExecuteWithSignature("setBorderThicknesses", "([F)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColumnGap-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetColumnGap(float arg0)
        {
            IExecuteWithSignature("setColumnGap", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColumnGap-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetColumnGap(int arg0)
        {
            IExecuteWithSignature("setColumnGap", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setColumnGaps-float[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetColumnGaps(float[] arg0)
        {
            IExecuteWithSignature("setColumnGaps", "([F)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setEndIndent-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetEndIndent(float arg0)
        {
            IExecuteWithSignature("setEndIndent", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setEndIndent-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetEndIndent(int arg0)
        {
            IExecuteWithSignature("setEndIndent", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setHeight-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetHeight(float arg0)
        {
            IExecuteWithSignature("setHeight", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setHeight-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetHeight(int arg0)
        {
            IExecuteWithSignature("setHeight", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setHeightAuto--"/>
        /// </summary>
        public void SetHeightAuto()
        {
            IExecuteWithSignature("setHeightAuto", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setLineHeight-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetLineHeight(float arg0)
        {
            IExecuteWithSignature("setLineHeight", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setLineHeight-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetLineHeight(int arg0)
        {
            IExecuteWithSignature("setLineHeight", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setLineHeightAuto--"/>
        /// </summary>
        public void SetLineHeightAuto()
        {
            IExecuteWithSignature("setLineHeightAuto", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setLineHeightNormal--"/>
        /// </summary>
        public void SetLineHeightNormal()
        {
            IExecuteWithSignature("setLineHeightNormal", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setPaddings-float[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetPaddings(float[] arg0)
        {
            IExecuteWithSignature("setPaddings", "([F)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setSpaceAfter-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetSpaceAfter(float arg0)
        {
            IExecuteWithSignature("setSpaceAfter", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setSpaceAfter-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSpaceAfter(int arg0)
        {
            IExecuteWithSignature("setSpaceAfter", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setSpaceBefore-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetSpaceBefore(float arg0)
        {
            IExecuteWithSignature("setSpaceBefore", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setSpaceBefore-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSpaceBefore(int arg0)
        {
            IExecuteWithSignature("setSpaceBefore", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setStartIndent-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetStartIndent(float arg0)
        {
            IExecuteWithSignature("setStartIndent", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setStartIndent-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetStartIndent(int arg0)
        {
            IExecuteWithSignature("setStartIndent", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTBorderStyles-java.lang.String[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetTBorderStyles(Java.Lang.String[] arg0)
        {
            IExecuteWithSignature("setTBorderStyles", "([Ljava/lang/String;)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextDecorationThickness-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetTextDecorationThickness(float arg0)
        {
            IExecuteWithSignature("setTextDecorationThickness", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextDecorationThickness-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTextDecorationThickness(int arg0)
        {
            IExecuteWithSignature("setTextDecorationThickness", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextIndent-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetTextIndent(float arg0)
        {
            IExecuteWithSignature("setTextIndent", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTextIndent-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTextIndent(int arg0)
        {
            IExecuteWithSignature("setTextIndent", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setTPaddings-float[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetTPaddings(float[] arg0)
        {
            IExecuteWithSignature("setTPaddings", "([F)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setWidth-float-"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetWidth(float arg0)
        {
            IExecuteWithSignature("setWidth", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setWidth-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetWidth(int arg0)
        {
            IExecuteWithSignature("setWidth", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.html#setWidthAuto--"/>
        /// </summary>
        public void SetWidthAuto()
        {
            IExecuteWithSignature("setWidthAuto", "()V");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}