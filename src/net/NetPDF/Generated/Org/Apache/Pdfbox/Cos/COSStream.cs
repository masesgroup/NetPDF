/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using pdfbox-3.0.4.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Cos
{
    #region COSStream declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html"/>
    /// </summary>
    public partial class COSStream : Org.Apache.Pdfbox.Cos.COSDictionary
    {
        const string _bridgeClassName = "org.apache.pdfbox.cos.COSStream";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public COSStream() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public COSStream(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region COSStream implementation
    public partial class COSStream
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#org.apache.pdfbox.cos.COSStream(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Io.RandomAccessStreamCache"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Pdfbox.Io.RandomAccessReadView"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public COSStream(Org.Apache.Pdfbox.Io.RandomAccessStreamCache arg0, Org.Apache.Pdfbox.Io.RandomAccessReadView arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#org.apache.pdfbox.cos.COSStream(org.apache.pdfbox.io.RandomAccessStreamCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Io.RandomAccessStreamCache"/></param>
        public COSStream(Org.Apache.Pdfbox.Io.RandomAccessStreamCache arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Pdfbox.Cos.COSStream"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Pdfbox.Cos.COSStream t) => t.Cast<Java.Io.Closeable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#getFilters--"/> 
        /// </summary>
        public Org.Apache.Pdfbox.Cos.COSBase Filters
        {
            get { return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSBase>("getFilters", "()Lorg/apache/pdfbox/cos/COSBase;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#getLength--"/> 
        /// </summary>
        public long Length
        {
            get { return IExecuteWithSignature<long>("getLength", "()J"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#hasData--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasData()
        {
            return IExecuteWithSignature<bool>("hasData", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createRawInputStream--"/>
        /// </summary>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.InputStream CreateRawInputStream()
        {
            return IExecuteWithSignature<Java.Io.InputStream>("createRawInputStream", "()Ljava/io/InputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createOutputStream--"/>
        /// </summary>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.OutputStream CreateOutputStream()
        {
            return IExecuteWithSignature<Java.Io.OutputStream>("createOutputStream", "()Ljava/io/OutputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createOutputStream-org.apache.pdfbox.cos.COSBase-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSBase"/></param>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.OutputStream CreateOutputStream(Org.Apache.Pdfbox.Cos.COSBase arg0)
        {
            return IExecuteWithSignature<Java.Io.OutputStream>("createOutputStream", "(Lorg/apache/pdfbox/cos/COSBase;)Ljava/io/OutputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createRawOutputStream--"/>
        /// </summary>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.OutputStream CreateRawOutputStream()
        {
            return IExecuteWithSignature<Java.Io.OutputStream>("createRawOutputStream", "()Ljava/io/OutputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#toTextString--"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ToTextString()
        {
            return IExecuteWithSignature<Java.Lang.String>("toTextString", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createInputStream--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSInputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Cos.COSInputStream CreateInputStream()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSInputStream>("createInputStream", "()Lorg/apache/pdfbox/cos/COSInputStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createInputStream-org.apache.pdfbox.filter.DecodeOptions-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Filter.DecodeOptions"/></param>
        /// <returns><see cref="Org.Apache.Pdfbox.Cos.COSInputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Cos.COSInputStream CreateInputStream(Org.Apache.Pdfbox.Filter.DecodeOptions arg0)
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Cos.COSInputStream>("createInputStream", "(Lorg/apache/pdfbox/filter/DecodeOptions;)Lorg/apache/pdfbox/cos/COSInputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#createView--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Pdfbox.Io.RandomAccessRead"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Org.Apache.Pdfbox.Io.RandomAccessRead CreateView()
        {
            return IExecuteWithSignature<Org.Apache.Pdfbox.Io.RandomAccessRead>("createView", "()Lorg/apache/pdfbox/io/RandomAccessRead;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.4/org/apache/pdfbox/cos/COSStream.html#close--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}