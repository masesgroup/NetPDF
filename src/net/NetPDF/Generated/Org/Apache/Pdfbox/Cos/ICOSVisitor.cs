/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using pdfbox-3.0.3.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Pdfbox.Cos
{
    #region ICOSVisitor declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html"/>
    /// </summary>
    public partial class ICOSVisitor : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ICOSVisitor>
    {
        const string _bridgeClassName = "org.apache.pdfbox.cos.ICOSVisitor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("ICOSVisitor class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public ICOSVisitor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("ICOSVisitor class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public ICOSVisitor(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region IICOSVisitor
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface IICOSVisitor
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region ICOSVisitor implementation
    public partial class ICOSVisitor : Org.Apache.Pdfbox.Cos.IICOSVisitor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromArray-org.apache.pdfbox.cos.COSArray-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSArray"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromArray(Org.Apache.Pdfbox.Cos.COSArray arg0)
        {
            IExecuteWithSignature("visitFromArray", "(Lorg/apache/pdfbox/cos/COSArray;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromBoolean-org.apache.pdfbox.cos.COSBoolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSBoolean"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromBoolean(Org.Apache.Pdfbox.Cos.COSBoolean arg0)
        {
            IExecuteWithSignature("visitFromBoolean", "(Lorg/apache/pdfbox/cos/COSBoolean;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromDictionary-org.apache.pdfbox.cos.COSDictionary-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDictionary"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromDictionary(Org.Apache.Pdfbox.Cos.COSDictionary arg0)
        {
            IExecuteWithSignature("visitFromDictionary", "(Lorg/apache/pdfbox/cos/COSDictionary;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromDocument-org.apache.pdfbox.cos.COSDocument-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSDocument"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromDocument(Org.Apache.Pdfbox.Cos.COSDocument arg0)
        {
            IExecuteWithSignature("visitFromDocument", "(Lorg/apache/pdfbox/cos/COSDocument;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromFloat-org.apache.pdfbox.cos.COSFloat-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSFloat"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromFloat(Org.Apache.Pdfbox.Cos.COSFloat arg0)
        {
            IExecuteWithSignature("visitFromFloat", "(Lorg/apache/pdfbox/cos/COSFloat;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromInt-org.apache.pdfbox.cos.COSInteger-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSInteger"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromInt(Org.Apache.Pdfbox.Cos.COSInteger arg0)
        {
            IExecuteWithSignature("visitFromInt", "(Lorg/apache/pdfbox/cos/COSInteger;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromName-org.apache.pdfbox.cos.COSName-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSName"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromName(Org.Apache.Pdfbox.Cos.COSName arg0)
        {
            IExecuteWithSignature("visitFromName", "(Lorg/apache/pdfbox/cos/COSName;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromNull-org.apache.pdfbox.cos.COSNull-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSNull"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromNull(Org.Apache.Pdfbox.Cos.COSNull arg0)
        {
            IExecuteWithSignature("visitFromNull", "(Lorg/apache/pdfbox/cos/COSNull;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromStream-org.apache.pdfbox.cos.COSStream-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSStream"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromStream(Org.Apache.Pdfbox.Cos.COSStream arg0)
        {
            IExecuteWithSignature("visitFromStream", "(Lorg/apache/pdfbox/cos/COSStream;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.pdfbox/pdfbox/3.0.3/org/apache/pdfbox/cos/ICOSVisitor.html#visitFromString-org.apache.pdfbox.cos.COSString-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Pdfbox.Cos.COSString"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void VisitFromString(Org.Apache.Pdfbox.Cos.COSString arg0)
        {
            IExecuteWithSignature("visitFromString", "(Lorg/apache/pdfbox/cos/COSString;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}